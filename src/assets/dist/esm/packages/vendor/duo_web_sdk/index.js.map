{"version":3,"file":"index.js","sources":["../../../../../packages/vendor/duo_web_sdk/index.js"],"sourcesContent":["/**\n * \n * This file has been modified to override doPostBack\n * Check out the doPostBack function below for more details.\n * Override the doPostBack function when upgrading.\n * Unable to make a wrapper because it is invoked using an internal name within \n * this library.\n * \n * Current Verison = https://github.com/duosecurity/duo_web_sdk/blob/7aec8dd895ea4bd4549069e76076850eccfe07f2/index.js\n * PS: they dont seem to version correctly hence using commit.\n */\n\n/**\n * Duo Web SDK v2\n * Copyright 2019, Duo Security\n */\n\n// Modified to remove AMD and support ESM transform - OKTA-369648\n(function (root, factory) {\n    module.exports = factory();\n}(this, function() {\n    var DUO_MESSAGE_FORMAT = /^(?:AUTH|ENROLL)+\\|[A-Za-z0-9\\+\\/=]+\\|[A-Za-z0-9\\+\\/=]+$/;\n    var DUO_ERROR_FORMAT = /^ERR\\|[\\w\\s\\.\\(\\)]+$/;\n    var DUO_OPEN_WINDOW_FORMAT = /^DUO_OPEN_WINDOW\\|/;\n    var VALID_OPEN_WINDOW_DOMAINS = [\n        'duo.com',\n        'duosecurity.com',\n        'duomobile.s3-us-west-1.amazonaws.com'\n    ];\n\n    var postAction,\n        postArgument,\n        host,\n        sigRequest,\n        duoSig,\n        appSig,\n        iframe,\n        submitCallback;\n\n    // We use this function instead of setting initial values in the var\n    // declarations to make sure the initial values and subsequent\n    // re-initializations are always the same.\n    initializeStatefulVariables();\n\n    /**\n     * Set local variables to whatever they should be before you call init().\n     */\n    function initializeStatefulVariables() {\n        postAction = '';\n        postArgument = 'sig_response';\n        host = undefined;\n        sigRequest = undefined;\n        duoSig = undefined;\n        appSig = undefined;\n        iframe = undefined;\n        submitCallback = undefined;\n    }\n\n    function throwError(message, givenUrl) {\n        var url = (\n            givenUrl ||\n            'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\n        );\n        throw new Error(\n            'Duo Web SDK error: ' + message +\n            (url ? ('\\n' + 'See ' + url + ' for more information') : '')\n        );\n    }\n\n    function hyphenize(str) {\n        return str.replace(/([a-z])([A-Z])/, '$1-$2').toLowerCase();\n    }\n\n    // cross-browser data attributes\n    function getDataAttribute(element, name) {\n        if ('dataset' in element) {\n            return element.dataset[name];\n        } else {\n            return element.getAttribute('data-' + hyphenize(name));\n        }\n    }\n\n    // cross-browser event binding/unbinding\n    function on(context, event, fallbackEvent, callback) {\n        if ('addEventListener' in window) {\n            context.addEventListener(event, callback, false);\n        } else {\n            context.attachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function off(context, event, fallbackEvent, callback) {\n        if ('removeEventListener' in window) {\n            context.removeEventListener(event, callback, false);\n        } else {\n            context.detachEvent(fallbackEvent, callback);\n        }\n    }\n\n    function onReady(callback) {\n        on(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function offReady(callback) {\n        off(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n\n    function onMessage(callback) {\n        on(window, 'message', 'onmessage', callback);\n    }\n\n    function offMessage(callback) {\n        off(window, 'message', 'onmessage', callback);\n    }\n\n    /**\n     * Parse the sig_request parameter, throwing errors if the token contains\n     * a server error or if the token is invalid.\n     *\n     * @param {String} sig Request token\n     */\n    function parseSigRequest(sig) {\n        if (!sig) {\n            // nothing to do\n            return;\n        }\n\n        // see if the token contains an error, throwing it if it does\n        if (sig.indexOf('ERR|') === 0) {\n            throwError(sig.split('|')[1]);\n        }\n\n        // validate the token\n        if (sig.indexOf(':') === -1 || sig.split(':').length !== 2) {\n            throwError(\n                'Duo was given a bad token.  This might indicate a configuration ' +\n                'problem with one of Duo\\'s client libraries.'\n            );\n        }\n\n        var sigParts = sig.split(':');\n\n        // hang on to the token, and the parsed duo and app sigs\n        sigRequest = sig;\n        duoSig = sigParts[0];\n        appSig = sigParts[1];\n\n        return {\n            sigRequest: sig,\n            duoSig: sigParts[0],\n            appSig: sigParts[1]\n        };\n    }\n\n    /**\n     * Validate that a MessageEvent came from the Duo service, and that it\n     * is a properly formatted payload.\n     *\n     * The Google Chrome sign-in page injects some JS into pages that also\n     * make use of postMessage, so we need to do additional validation above\n     * and beyond the origin.\n     *\n     * @param {MessageEvent} event Message received via postMessage\n     */\n    function isDuoMessage(event) {\n        return Boolean(\n            event.origin === ('https://' + host) &&\n            typeof event.data === 'string' &&\n            (\n                event.data.match(DUO_MESSAGE_FORMAT) ||\n                event.data.match(DUO_ERROR_FORMAT) ||\n                event.data.match(DUO_OPEN_WINDOW_FORMAT)\n            )\n        );\n    }\n\n    /**\n     * Validate the request token and prepare for the iframe to become ready.\n     *\n     * All options below can be passed into an options hash to `Duo.init`, or\n     * specified on the iframe using `data-` attributes.\n     *\n     * Options specified using the options hash will take precedence over\n     * `data-` attributes.\n     *\n     * Example using options hash:\n     * ```javascript\n     * Duo.init({\n     *     iframe: \"some_other_id\",\n     *     host: \"api-main.duo.test\",\n     *     sig_request: \"...\",\n     *     post_action: \"/auth\",\n     *     post_argument: \"resp\"\n     * });\n     * ```\n     *\n     * Example using `data-` attributes:\n     * ```html\n     * <iframe id=\"duo_iframe\"\n     *         data-host=\"api-main.duo.test\"\n     *         data-sig-request=\"...\"\n     *         data-post-action=\"/auth\"\n     *         data-post-argument=\"resp\"\n     *         >\n     * </iframe>\n     * ```\n     *\n     * Some browsers (especially embedded browsers) don't like it when the Duo\n     * Web SDK changes the `src` attribute on the iframe. To prevent this, there\n     * is an alternative way to use the Duo Web SDK:\n     *\n     * Add a div (or any other container element) instead of an iframe to the\n     * DOM with an id of \"duo_iframe\", or pass that element to the\n     * `iframeContainer` parameter of `Duo.init`. An iframe will be created and\n     * inserted into that container element, preventing `src` change related\n     * bugs. WARNING: All other elements in the container will be deleted.\n     *\n     * The `iframeAttributes` parameter of `Duo.init` is available to set any\n     * attributes on the inserted iframe if the Duo Web SDK is inserting the\n     * iframe. For details, see the parameter documentation below.\n     *\n     * @param {Object} options\n     * @param {String} options.host - Hostname for the Duo Prompt.\n     * @param {String} options.sig_request - Request token.\n     * @param {String|HTMLElement} [options.iframe] - The iframe, or id of an\n     *     iframe that will be used for the Duo Prompt. If you don't provide\n     *     this or the `iframeContainer` parameter the Duo Web SDK will default\n     *     to using whatever element has an id of \"duo_iframe\".\n     * @param {String|HTMLElement} [options.iframeContainer] - The element you\n     *     want the Duo Prompt inserted into, or the id of that element.\n     *     Anything inside this element will be deleted and replaced with an\n     *     iframe hosting the Duo prompt. If you don't provide this or the\n     *     `iframe` parameter the Duo Web SDK will default to using whatever\n     *     element has an id of \"duo_iframe\".\n     * @param {Object} [options.iframeAttributes] - Object with  names and\n     *     values coresponding to attributes you want added to the  Duo Prompt\n     *     iframe, like `title`, `width` and `allow`. WARNING: this parameter\n     *     only works if you use the `iframeContainer` parameter or add an id\n     *     of \"duo_iframe\" to an element that isn't an iframe. If you have\n     *     added an iframe to the DOM yourself, you should set those attributes\n     *     directly on the iframe.\n     * @param {String} [options.post_action=''] - URL to POST back to after a\n     *     successful auth.\n     * @param {String} [options.post_argument='sig_response'] - Parameter name\n     *     to use for response token.\n     * @param {Function} [options.submit_callback] - If provided, the Duo Web\n     *     SDK will not submit the form. Instead it will execute this callback\n     *     function passing in a reference to the \"duo_form\" form object.\n     *     `submit_callback`` can be used to prevent the webpage from reloading.\n     */\n    function init(options) {\n        // If init() is called more than once we have to reset all the local\n        // variables to ensure init() will work the same way every time. This\n        // helps people making single page applications. SPAs may periodically\n        // remove the iframe and add a new one that has to be initialized.\n        initializeStatefulVariables();\n\n        if (options) {\n            if (options.host) {\n                host = options.host;\n            }\n\n            if (options.sig_request) {\n                parseSigRequest(options.sig_request);\n            }\n\n            if (options.post_action) {\n                postAction = options.post_action;\n            }\n\n            if (options.post_argument) {\n                postArgument = options.post_argument;\n            }\n\n            if (typeof options.submit_callback === 'function') {\n                submitCallback = options.submit_callback;\n            }\n        }\n\n        var promptElement = getPromptElement(options);\n        if (promptElement) {\n            // If we can get the element that will host the prompt, set it.\n            ready(promptElement, options.iframeAttributes || {});\n        } else {\n            // If the element that will host the prompt isn't available yet, set\n            // it up after the DOM finishes loading.\n            asyncReady(options);\n        }\n\n        // always clean up after yourself!\n        offReady(init);\n    }\n\n    /**\n     * Given the options from init(), get the iframe or iframe container that\n     * should be used for the Duo Prompt. Returns `null` if nothing was found.\n     */\n    function getPromptElement(options) {\n        var result;\n\n        if (options.iframe && options.iframeContainer) {\n            throwError(\n                'Passing both `iframe` and `iframeContainer` arguments at the' +\n                ' same time is not allowed.'\n            );\n        } else if (options.iframe) {\n            // If we are getting an iframe, try to get it and raise if the\n            // element we find is NOT an iframe.\n            result = getUserDefinedElement(options.iframe);\n            validateIframe(result);\n        } else if (options.iframeContainer) {\n            result = getUserDefinedElement(options.iframeContainer);\n            validateIframeContainer(result);\n        } else {\n            result = document.getElementById('duo_iframe');\n        }\n\n        return result;\n    }\n\n    /**\n     * When given an HTMLElement, return it. When given a string, get an element\n     * with that id, else return null.\n     */\n    function getUserDefinedElement(object) {\n        if (object.tagName) {\n            return object;\n        } else if (typeof object == 'string') {\n            return document.getElementById(object);\n        }\n        return null;\n    }\n\n    /**\n     * Check if the given thing is an iframe.\n     */\n    function isIframe(element) {\n        return (\n            element &&\n            element.tagName &&\n            element.tagName.toLowerCase() === 'iframe'\n        );\n    }\n\n    /**\n     * Throw an error if we are given an element that is NOT an iframe.\n     */\n    function validateIframe(element) {\n        if (element && !isIframe(element)) {\n            throwError(\n                '`iframe` only accepts an iframe element or the id of an' +\n                ' iframe. To use a non-iframe element, use the' +\n                ' `iframeContainer` argument.'\n            );\n        }\n    }\n\n    /**\n     * Throw an error if we are given an element that IS an iframe instead of an\n     * element that we can insert an iframe into.\n     */\n    function validateIframeContainer(element) {\n        if (element && isIframe(element)) {\n            throwError(\n                '`iframeContainer` only accepts a non-iframe element or the' +\n                ' id of a non-iframe. To use a non-iframe element, use the' +\n                ' `iframeContainer` argument on Duo.init().'\n            );\n        }\n    }\n\n    /**\n     * Generate the URL that goes to the Duo Prompt.\n     */\n    function generateIframeSrc() {\n        return [\n            'https://', host, '/frame/web/v1/auth?tx=', duoSig,\n            '&parent=', encodeURIComponent(document.location.href),\n            '&v=2.8'\n        ].join('');\n    }\n\n    /**\n     * This function is called when a message was received from another domain\n     * using the `postMessage` API.  Check that the event came from the Duo\n     * service domain, and that the message is a properly formatted payload,\n     * then perform the post back to the primary service.\n     *\n     * @param event Event object (contains origin and data)\n     */\n    function onReceivedMessage(event) {\n        if (isDuoMessage(event)) {\n            if (event.data.match(DUO_OPEN_WINDOW_FORMAT)) {\n                var url = event.data.substring(\"DUO_OPEN_WINDOW|\".length);\n                if (isValidUrlToOpen(url)) {\n                    // Open the URL that comes after the DUO_WINDOW_OPEN token.\n                    window.open(url, \"_self\");\n                }\n            }\n            else {\n                // the event came from duo, do the post back\n                doPostBack(event.data);\n\n                // always clean up after yourself!\n                offMessage(onReceivedMessage);\n            }\n        }\n    }\n\n    /**\n     * Validate that this passed in URL is one that we will actually allow to\n     * be opened.\n     * @param url String URL that the message poster wants to open\n     * @returns {boolean} true if we allow this url to be opened in the window\n     */\n    function isValidUrlToOpen(url) {\n        if (!url) {\n            return false;\n        }\n\n        var parser = document.createElement('a');\n        parser.href = url;\n\n        if (parser.protocol === \"duotrustedendpoints:\") {\n            return true;\n        } else if (parser.protocol !== \"https:\") {\n            return false;\n        }\n\n        for (var i = 0; i < VALID_OPEN_WINDOW_DOMAINS.length; i++) {\n           if (parser.hostname.endsWith(\".\" + VALID_OPEN_WINDOW_DOMAINS[i]) ||\n                   parser.hostname === VALID_OPEN_WINDOW_DOMAINS[i]) {\n               return true;\n           }\n        }\n        return false;\n    }\n\n    /**\n     * Register a callback to call ready() after the DOM has loaded.\n     */\n    function asyncReady(options) {\n        var callback = function() {\n            var promptElement = getPromptElement(options);\n            if (!promptElement) {\n                throwError(\n                    'This page does not contain an iframe for Duo to use.' +\n                    ' Add an element like' +\n                    ' <iframe id=\"duo_iframe\"></iframe> to this page.'\n                );\n            }\n\n            ready(promptElement, options.iframeAttributes || {});\n\n            // Always clean up after yourself.\n            offReady(callback)\n        };\n\n        onReady(callback);\n    }\n\n    /**\n     * Point the iframe at Duo, then wait for it to postMessage back to us.\n     */\n    function ready(promptElement, iframeAttributes) {\n        if (!host) {\n            host = getDataAttribute(promptElement, 'host');\n\n            if (!host) {\n                throwError(\n                    'No API hostname is given for Duo to use.  Be sure to pass ' +\n                    'a `host` parameter to Duo.init, or through the `data-host` ' +\n                    'attribute on the iframe element.'\n                );\n            }\n        }\n\n        if (!duoSig || !appSig) {\n            parseSigRequest(getDataAttribute(promptElement, 'sigRequest'));\n\n            if (!duoSig || !appSig) {\n                throwError(\n                    'No valid signed request is given.  Be sure to give the ' +\n                    '`sig_request` parameter to Duo.init, or use the ' +\n                    '`data-sig-request` attribute on the iframe element.'\n                );\n            }\n        }\n\n        // if postAction/Argument are defaults, see if they are specified\n        // as data attributes on the iframe\n        if (postAction === '') {\n            postAction = getDataAttribute(promptElement, 'postAction') || postAction;\n        }\n\n        if (postArgument === 'sig_response') {\n            postArgument = getDataAttribute(promptElement, 'postArgument') || postArgument;\n        }\n\n        if (isIframe(promptElement)) {\n            iframe = promptElement;\n            iframe.src = generateIframeSrc();\n        } else {\n            // If given a container to put an iframe in, clean out any children\n            // child elements in case `init()` was called more than once.\n            while (promptElement.firstChild) {\n                // We call `removeChild()` instead of doing `innerHTML = \"\"`\n                // to make sure we unbind any events.\n                promptElement.removeChild(promptElement.firstChild)\n            }\n\n            iframe = document.createElement('iframe');\n\n            // Set the src and all other attributes on the new iframe.\n            iframeAttributes['src'] = generateIframeSrc();\n            for (var name in iframeAttributes) {\n                iframe.setAttribute(name, iframeAttributes[name]);\n            }\n\n            promptElement.appendChild(iframe);\n        }\n\n        // listen for the 'message' event\n        onMessage(onReceivedMessage);\n    }\n\n    /**\n     * We received a postMessage from Duo.  POST back to the primary service\n     * with the response token, and any additional user-supplied parameters\n     * given in form#duo_form.\n     */\n    // function doPostBack(response) {\n    //     // create a hidden input to contain the response token\n    //     var input = document.createElement('input');\n    //     input.type = 'hidden';\n    //     input.name = postArgument;\n    //     input.value = response + ':' + appSig;\n\n    //     // user may supply their own form with additional inputs\n    //     var form = document.getElementById('duo_form');\n\n    //     // if the form doesn't exist, create one\n    //     if (!form) {\n    //         form = document.createElement('form');\n\n    //         // insert the new form after the iframe\n    //         iframe.parentElement.insertBefore(form, iframe.nextSibling);\n    //     }\n\n    //     // make sure we are actually posting to the right place\n    //     form.method = 'POST';\n    //     form.action = postAction;\n\n    //     // add the response token input to the form\n    //     form.appendChild(input);\n\n    //     // away we go!\n    //     if (typeof submitCallback === \"function\") {\n    //         submitCallback.call(null, form);\n    //     } else {\n    //         form.submit();\n    //     }\n    // }\n\n    // OKTA: Overriding their doPostBack logic because we want to submit this\n    // through ajax, not a postBack\n    function doPostBack(response) {\n        postAction(response + ':' + appSig);\n    }\n    \n\n    return {\n        init: init,\n        _onReady: onReady,\n        _parseSigRequest: parseSigRequest,\n        _isDuoMessage: isDuoMessage,\n        _doPostBack: doPostBack\n    };\n}));"],"names":["root","factory","module","this","DUO_MESSAGE_FORMAT","DUO_ERROR_FORMAT","DUO_OPEN_WINDOW_FORMAT","VALID_OPEN_WINDOW_DOMAINS","postAction","postArgument","host","sigRequest","duoSig","appSig","iframe","initializeStatefulVariables","undefined","throwError","message","givenUrl","url","Error","hyphenize","str","replace","toLowerCase","getDataAttribute","element","name","dataset","getAttribute","on","context","event","fallbackEvent","callback","window","addEventListener","attachEvent","off","removeEventListener","detachEvent","onReady","document","offReady","onMessage","offMessage","parseSigRequest","sig","indexOf","split","length","sigParts","isDuoMessage","Boolean","origin","data","match","init","options","sig_request","post_action","post_argument","submit_callback","promptElement","getPromptElement","ready","iframeAttributes","asyncReady","result","iframeContainer","getUserDefinedElement","validateIframe","validateIframeContainer","getElementById","object","tagName","isIframe","generateIframeSrc","encodeURIComponent","location","href","join","onReceivedMessage","substring","isValidUrlToOpen","open","doPostBack","parser","createElement","protocol","i","hostname","endsWith","src","firstChild","removeChild","setAttribute","appendChild","response","_onReady","_parseSigRequest","_isDuoMessage","_doPostBack"],"mappings":"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AAN,CAAWC,KAAX,CAAiBpD,gBAAjB,CADA,IAEA4B,KAAK,CAACuB,IAAN,CAAWC,KAAX,CAAiBnD,sBAAjB,CALJ,CADU,CAAd,CAAA;AASH,GAAA;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,EAASoD,SAAAA,IAAT,CAAcC,OAAd,EAAuB;AACnB;AACA;AACA;AACA;AACA5C,IAAAA,2BAA2B,EAAA,CAAA;;AAE3B,IAAA,IAAI4C,OAAJ,EAAa;AACT,MAAIA,IAAAA,OAAO,CAACjD,IAAZ,EAAkB;AACdA,QAAAA,IAAI,GAAGiD,OAAO,CAACjD,IAAf,CAAA;AACH,OAAA;;AAED,MAAIiD,IAAAA,OAAO,CAACC,WAAZ,EAAyB;AACrBb,QAAAA,eAAe,CAACY,OAAO,CAACC,WAAT,CAAf,CAAA;AACH,OAAA;;AAED,MAAID,IAAAA,OAAO,CAACE,WAAZ,EAAyB;AACrBrD,QAAAA,UAAU,GAAGmD,OAAO,CAACE,WAArB,CAAA;AACH,OAAA;;AAED,MAAIF,IAAAA,OAAO,CAACG,aAAZ,EAA2B;AACvBrD,QAAAA,YAAY,GAAGkD,OAAO,CAACG,aAAvB,CAAA;AACH,OAAA;;AAED,MAAA,IAAI,OAAOH,OAAO,CAACI,eAAf,KAAmC,UAAvC,EAAmD,CAElD;AACJ,KAAA;;AAED,IAAA,IAAIC,aAAa,GAAGC,gBAAgB,CAACN,OAAD,CAApC,CAAA;;AACA,IAAA,IAAIK,aAAJ,EAAmB;AACf;AACAE,MAAAA,KAAK,CAACF,aAAD,EAAgBL,OAA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"}
{"version":3,"file":"InputGroup.js","sources":["../../../../../../../../../../../packages/@okta/courage-dist/esm/src/courage/views/forms/inputs/InputGroup.js"],"sourcesContent":["import oktaUnderscore from '../../../util/underscore-wrapper.js';\nimport ButtonFactory from '../../../util/ButtonFactory.js';\nimport BaseView from '../../BaseView.js';\nimport BaseInput from '../BaseInput.js';\n\nfunction countInputs(inputs) {\n  return oktaUnderscore.filter(inputs || [], function (input) {\n    return !oktaUnderscore.contains(['label', 'button', 'select'], input.type);\n  }).length;\n}\n\nconst InputGroupLabelInput = BaseInput.extend({\n  tagName: 'span',\n  initialize: function () {\n    this.$el.text(this.getModelValue());\n  },\n  editMode: function () {\n    this.toggle(true);\n  },\n  readMode: function () {\n    this.toggle(false);\n  },\n  getModelValue: function () {\n    return this.options.label;\n  },\n  toggle: function (isEditMode) {\n    this.$el.toggleClass('o-form-label-inline', isEditMode);\n    this.$el.toggleClass('o-form-control', !isEditMode);\n  },\n  focus: oktaUnderscore.noop\n});\n\nfunction createButtonInput(options) {\n  return ButtonFactory.create(oktaUnderscore.defaults({\n    getReadModeString: oktaUnderscore.constant(' '),\n    focus: oktaUnderscore.noop\n  }, oktaUnderscore.pick(options, 'click', 'title', 'href', 'icon')));\n}\n\nconst InputGroupInputGroupView = BaseView.extend({\n  getParams: BaseInput.prototype.getParams,\n  getParam: BaseInput.prototype.getParam,\n  className: function () {\n    let className; // Allows views to group multiple inputs under one label without any of the other\n    // styling/rendering changes that come with using a group input\n\n    if (this.getParam('noBaseClasses')) {\n      return '';\n    }\n\n    if (this.getParam('display') === 'text') {\n      className = 'o-form-input-group-subtle';\n    } else {\n      className = 'o-form-input-group';\n    }\n\n    if (countInputs(this.getParam('inputs')) > 1) {\n      className += ' o-form-input-group-2';\n    }\n\n    return className;\n  },\n  initialize: function () {\n    oktaUnderscore.each(this.getParam('inputs'), function (input) {\n      switch (input.type) {\n        case 'label':\n          this.add(InputGroupLabelInput, {\n            options: input\n          });\n          break;\n\n        case 'button':\n          this.add(createButtonInput(input));\n          break;\n\n        default:\n          input = oktaUnderscore.defaults({\n            model: this.model,\n            params: oktaUnderscore.extend({\n              autoWidth: true\n            }, input.params || {})\n          }, input);\n          this.add(this.getParams().create(input));\n      }\n    }, this);\n  },\n  focus: function () {\n    this.first().focus();\n  }\n});\nvar InputGroup = BaseInput.extend({\n  constructor: function (options) {\n    this.inputGroupView = new InputGroupInputGroupView(options);\n    BaseInput.apply(this, arguments);\n  },\n  editMode: function () {\n    this.inputGroupView.remove();\n    this.inputGroupView = new InputGroupInputGroupView(this.options);\n    this.$el.html(this.inputGroupView.render().el);\n  },\n  readMode: function () {\n    // Allows the user to use to the default \"read mode\" of the child inputs instead of\n    // rendering a single read mode string for all the child inputs\n    if (this.getParam('useChildInputsReadMode')) {\n      this.editMode();\n    } else {\n      BaseInput.prototype.readMode.apply(this, arguments);\n    }\n  },\n  toStringValue: function () {\n    const strings = this.inputGroupView.map(function (input) {\n      return input.getReadModeString();\n    });\n    return strings.length && oktaUnderscore.every(strings) ? strings.join(' ') : ' ';\n  },\n  focus: function () {\n    this.inputGroupView.focus();\n  }\n}, {\n  // test hooks\n  LabelInput: InputGroupLabelInput,\n  InputGroupView: InputGroupInputGroupView\n});\n\nexport { InputGroup as default };\n"],"names":["countInputs","inputs","oktaUnderscore","filter","input","contains","type","length","InputGroupLabelInput","BaseInput","extend","tagName","initialize","$el","text","getModelValue","editMode","toggle","readMode","options","label","isEditMode","toggleClass","focus","noop","createButtonInput","ButtonFactory","create","defaults","getReadModeString","constant","pick","InputGroupInputGroupView","BaseView","getParams","prototype","getParam","className","each","add","model","params","autoWidth","first","InputGroup","constructor","inputGroupView","apply","arguments","remove","html","render","el","toStringValue","strings","map","every","join","LabelInput","InputGroupView"],"mappings":"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"}
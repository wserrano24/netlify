{"version":3,"file":"create-new-lookup-object.js","sources":["../../../../../../../../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js"],"sourcesContent":["import { __exports as createNewLookupObject$1 } from '../../../../../../_virtual/create-new-lookup-object.js';\nexport { __exports as default } from '../../../../../../_virtual/create-new-lookup-object.js';\nimport '../utils.js';\nimport { __exports as utils } from '../../../../../../_virtual/utils.js';\n\ncreateNewLookupObject$1.__esModule = true;\ncreateNewLookupObject$1.createNewLookupObject = createNewLookupObject;\n\nvar _utils = utils;\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\n\n\nfunction createNewLookupObject() {\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  return _utils.extend.apply(undefined, [Object.create(null)].concat(sources));\n}\n"],"names":["createNewLookupObject$1","__esModule","createNewLookupObject","_utils","utils","_len","arguments","length","sources","Array","_key","extend","apply","undefined","Object","create","concat"],"mappings":";;;;;AAKAA,uBAAuB,CAACC,UAAxB,GAAqC,IAArC,CAAA;AACAD,uBAAuB,CAACE,qBAAxB,GAAgDA,qBAAhD,CAAA;AAEA,IAAIC,MAAM,GAAGC,KAAb,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASF,qBAAT,GAAiC;AAC/B,EAAK,KAAA,IAAIG,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,OAAO,GAAGC,KAAK,CAACJ,IAAD,CAA5C,EAAoDK,IAAI,GAAG,CAAhE,EAAmEA,IAAI,GAAGL,IAA1E,EAAgFK,IAAI,EAApF,EAAwF;AACtFF,IAAAA,OAAO,CAACE,IAAD,CAAP,GAAgBJ,SAAS,CAACI,IAAD,CAAzB,CAAA;AACD,GAAA;;AAED,EAAOP,OAAAA,MAAM,CAACQ,MAAP,CAAcC,KAAd,CAAoBC,SAApB,EAA+B,CAACC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAD,CAAA,CAAsBC,MAAtB,CAA6BR,OAA7B,CAA/B,CAAP,CAAA;AACD"}
{"version":3,"file":"wrapHelper.js","sources":["../../../../../../../../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars/internal/wrapHelper.js"],"sourcesContent":["import { __exports as wrapHelper$1 } from '../../../../../../_virtual/wrapHelper.js';\nexport { __exports as default } from '../../../../../../_virtual/wrapHelper.js';\n\nwrapHelper$1.__esModule = true;\nwrapHelper$1.wrapHelper = wrapHelper;\n\nfunction wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n\n  var wrapper = function wrapper()\n  /* dynamic arguments */\n  {\n    var options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n\n  return wrapper;\n}\n"],"names":["wrapHelper$1","__esModule","wrapHelper","helper","transformOptionsFn","wrapper","options","arguments","length","apply"],"mappings":";;;AAGAA,YAAY,CAACC,UAAb,GAA0B,IAA1B,CAAA;AACAD,YAAY,CAACE,UAAb,GAA0BA,UAA1B,CAAA;;AAEA,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,kBAA5B,EAAgD;AAC9C,EAAA,IAAI,OAAOD,MAAP,KAAkB,UAAtB,EAAkC;AAChC;AACA;AACA,IAAA,OAAOA,MAAP,CAAA;AACD,GAAA;;AAED,EAAIE,IAAAA,OAAO,GAAG,SAASA,OAAT;AACd;AACA,EAAA;AACE,IAAIC,IAAAA,OAAO,GAAGC,SAAS,CAACA,SAAS,CAACC,MAAV,GAAmB,CAApB,CAAvB,CAAA;AACAD,IAAAA,SAAS,CAACA,SAAS,CAACC,MAAV,GAAmB,CAApB,CAAT,GAAkCJ,kBAAkB,CAACE,OAAD,CAApD,CAAA;AACA,IAAA,OAAOH,MAAM,CAACM,KAAP,CAAa,IAAb,EAAmBF,SAAnB,CAAP,CAAA;AACD,GAND,CAAA;;AAQA,EAAA,OAAOF,OAAP,CAAA;AACD"}
{"version":3,"file":"Util.js","sources":["../../../../../../../../../packages/@okta/courage-dist/esm/src/courage/util/Util.js"],"sourcesContent":["import oktaUnderscore from './underscore-wrapper.js';\nimport BaseView from '../views/BaseView.js';\n\nvar Util = {\n  redirect: function (url) {\n    window.location = url;\n  },\n  reloadPage: function () {\n    window.location.reload();\n  },\n  constantError: function (errorMessage) {\n    return function () {\n      throw new Error(errorMessage);\n    };\n  },\n\n  /**\n   * Simply convert an URL query key value pair object into an URL query string.\n   * Remember NOT to escape the query string when using this util.\n   * example:\n   * input: {userId: 123, instanceId: undefined, expand: 'schema,app'}\n   * output: '?userId=123&expand=schema,app'\n   */\n  getUrlQueryString: function (queries) {\n    oktaUnderscore.isObject(queries) || (queries = {});\n\n    const queriesString = oktaUnderscore.without(oktaUnderscore.map(queries, function (value, key) {\n      if (value !== undefined && value !== null) {\n        return key + '=' + encodeURIComponent(value);\n      }\n    }), undefined).join('&');\n\n    return oktaUnderscore.isEmpty(queriesString) ? '' : '?' + queriesString;\n  },\n  isABaseView: function (obj) {\n    return obj instanceof BaseView || obj.prototype instanceof BaseView || obj === BaseView;\n  },\n  isSafari: function () {\n    // All native, android and iOS chrome browsers has \"Safari\" in their userAgent string, so this regex should\n    // evaluate to true for only Safari browser and not any chrome browsers.\n    // https://stackoverflow.com/questions/7944460/detect-safari-browser\n    // https://stackoverflow.com/questions/13807810/ios-chrome-detection/13808053#13808053\n    return /^((?!chrome|android|crios).)*safari/i.test(navigator.userAgent);\n  }\n};\n\nexport { Util as default };\n"],"names":["Util","redirect","url","window","location","reloadPage","reload","constantError","errorMessage","Error","getUrlQueryString","queries","oktaUnderscore","isObject","queriesString","without","map","value","key","undefined","encodeURIComponent","join","isEmpty","isABaseView","obj","BaseView","prototype","isSafari","test","navigator","userAgent"],"mappings":";;;AAGA,IAAIA,IAAI,GAAG;AACTC,EAAAA,QAAQ,EAAE,UAAUC,GAAV,EAAe;AACvBC,IAAAA,MAAM,CAACC,QAAP,GAAkBF,GAAlB,CAAA;AACD,GAHQ;AAITG,EAAAA,UAAU,EAAE,YAAY;AACtBF,IAAAA,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAA,CAAA;AACD,GANQ;AAOTC,EAAAA,aAAa,EAAE,UAAUC,YAAV,EAAwB;AACrC,IAAA,OAAO,YAAY;AACjB,MAAA,MAAM,IAAIC,KAAJ,CAAUD,YAAV,CAAN,CAAA;AACD,KAFD,CAAA;AAGD,GAXQ;;AAaT;AACF;AACA;AACA;AACA;AACA;AACA;AACEE,EAAAA,iBAAiB,EAAE,UAAUC,OAAV,EAAmB;AACpCC,IAAAA,cAAc,CAACC,QAAf,CAAwBF,OAAxB,CAAqCA,KAAAA,OAAO,GAAG,EAA/C,CAAA,CAAA;AAEA,IAAA,MAAMG,aAAa,GAAGF,cAAc,CAACG,OAAf,CAAuBH,cAAc,CAACI,GAAf,CAAmBL,OAAnB,EAA4B,UAAUM,KAAV,EAAiBC,GAAjB,EAAsB;AAC7F,MAAA,IAAID,KAAK,KAAKE,SAAV,IAAuBF,KAAK,KAAK,IAArC,EAA2C;AACzC,QAAA,OAAOC,GAAG,GAAG,GAAN,GAAYE,kBAAkB,CAACH,KAAD,CAArC,CAAA;AACD,OAAA;AACF,KAJ4C,CAAvB,EAIlBE,SAJkB,EAIPE,IAJO,CAIF,GAJE,CAAtB,CAAA;AAMA,IAAOT,OAAAA,cAAc,CAACU,OAAf,CAAuBR,aAAvB,CAAwC,GAAA,EAAxC,GAA6C,GAAA,GAAMA,aAA1D,CAAA;AACD,GA9BQ;AA+BTS,EAAAA,WAAW,EAAE,UAAUC,GAAV,EAAe;AAC1B,IAAA,OAAOA,GAAG,YAAYC,QAAf,IAA2BD,GAAG,CAACE,SAAJ,YAAyBD,QAApD,IAAgED,GAAG,KAAKC,QAA/E,CAAA;AACD,GAjCQ;AAkCTE,EAAAA,QAAQ,EAAE,YAAY;AACpB;AACA;AACA;AACA;AACA,IAAA,OAAO,uCAAuCC,IAAvC,CAA4CC,SAAS,CAACC,SAAtD,CAAP,CAAA;AACD,GAAA;AAxCQ;;;;"}
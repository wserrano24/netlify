{"version":3,"file":"if.js","sources":["../../../../../../../../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars/helpers/if.js"],"sourcesContent":["import { _ as _if } from '../../../../../../_virtual/if.js';\nimport '../utils.js';\nimport '../exception.js';\nimport { __exports as utils } from '../../../../../../_virtual/utils.js';\nimport { e as exception } from '../../../../../../_virtual/exception.js';\n\n(function (module, exports) {\n\nexports.__esModule = true; // istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _utils = utils;\n\nvar _exception = exception.exports;\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports['default'] = function (instance) {\n  instance.registerHelper('if', function (conditional, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#if requires exactly one argument');\n    }\n\n    if (_utils.isFunction(conditional)) {\n      conditional = conditional.call(this);\n    } // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n\n\n    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n  instance.registerHelper('unless', function (conditional, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#unless requires exactly one argument');\n    }\n\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n};\n\nmodule.exports = exports['default'];\n}(_if, _if.exports));\n"],"names":["module","exports","__esModule","_interopRequireDefault","obj","_utils","utils","_exception","exception","_exception2","instance","registerHelper","conditional","options","arguments","length","isFunction","call","hash","includeZero","isEmpty","inverse","fn","helpers","_if"],"mappings":";;;;;;AAMC,CAAUA,UAAAA,MAAV,EAAkBC,OAAlB,EAA2B;AAE5BA,EAAAA,OAAO,CAACC,UAAR,GAAqB,IAArB,CAF4B;;AAI5B,EAASC,SAAAA,sBAAT,CAAgCC,GAAhC,EAAqC;AACnC,IAAA,OAAOA,GAAG,IAAIA,GAAG,CAACF,UAAX,GAAwBE,GAAxB,GAA8B;AACnC,MAAWA,SAAAA,EAAAA,GAAAA;AADwB,KAArC,CAAA;AAGD,GAAA;;AAED,EAAIC,IAAAA,MAAM,GAAGC,KAAb,CAAA;AAEA,EAAA,IAAIC,UAAU,GAAGC,SAAS,CAACP,OAA3B,CAAA;;AAEA,EAAA,IAAIQ,WAAW,GAAGN,sBAAsB,CAACI,UAAD,CAAxC,CAAA;;AAEAN,EAAAA,OAAO,CAAC,SAAD,CAAP,GAAqB,UAAUS,QAAV,EAAoB;AACvCA,IAAAA,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8B,UAAUC,WAAV,EAAuBC,OAAvB,EAAgC;AAC5D,MAAA,IAAIC,SAAS,CAACC,MAAV,IAAoB,CAAxB,EAA2B;AACzB,QAAA,MAAM,IAAIN,WAAW,CAAC,SAAD,CAAf,CAA2B,mCAA3B,CAAN,CAAA;AACD,OAAA;;AAED,MAAA,IAAIJ,MAAM,CAACW,UAAP,CAAkBJ,WAAlB,CAAJ,EAAoC;AAClCA,QAAAA,WAAW,GAAGA,WAAW,CAACK,IAAZ,CAAiB,IAAjB,CAAd,CAAA;AACD,OAP2D;AAQ5D;AACA;;;AAGA,MAAA,IAAI,CAACJ,OAAO,CAACK,IAAR,CAAaC,WAAd,IAA6B,CAACP,WAA9B,IAA6CP,MAAM,CAACe,OAAP,CAAeR,WAAf,CAAjD,EAA8E;AAC5E,QAAA,OAAOC,OAAO,CAACQ,OAAR,CAAgB,IAAhB,CAAP,CAAA;AACD,OAFD,MAEO;AACL,QAAA,OAAOR,OAAO,CAACS,EAAR,CAAW,IAAX,CAAP,CAAA;AACD,OAAA;AACF,KAjBD,CAAA,CAAA;AAkBAZ,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkC,UAAUC,WAAV,EAAuBC,OAAvB,EAAgC;AAChE,MAAA,IAAIC,SAAS,CAACC,MAAV,IAAoB,CAAxB,EAA2B;AACzB,QAAA,MAAM,IAAIN,WAAW,CAAC,SAAD,CAAf,CAA2B,uCAA3B,CAAN,CAAA;AACD,OAAA;;AAED,MAAOC,OAAAA,QAAQ,CAACa,OAAT,CAAiB,IAAjB,CAAuBN,CAAAA,IAAvB,CAA4B,IAA5B,EAAkCL,WAAlC,EAA+C;AACpDU,QAAAA,EAAE,EAAET,OAAO,CAACQ,OADwC;AAEpDA,QAAAA,OAAO,EAAER,OAAO,CAACS,EAFmC;AAGpDJ,QAAAA,IAAI,EAAEL,OAAO,CAACK,IAAAA;AAHsC,OAA/C,CAAP,CAAA;AAKD,KAVD,CAAA,CAAA;AAWD,GA9BD,CAAA;;AAgCAlB,EAAAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB,CAAA;AACC,CAjDA,EAiDCuB,GAjDD,EAiDMA,GAAG,CAACvB,OAjDV,CAAD"}
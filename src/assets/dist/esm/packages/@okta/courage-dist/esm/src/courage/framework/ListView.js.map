{"version":3,"file":"ListView.js","sources":["../../../../../../../../../packages/@okta/courage-dist/esm/src/courage/framework/ListView.js"],"sourcesContent":["import FrameworkView from './View.js';\nimport oktaUnderscore from '../util/underscore-wrapper.js';\n\n/* eslint-disable max-statements */\n/**\n   * Archer.ListView is a {@link src/framework/View} that operates on a\n   * collection and builds a list of \"things\" of the same type.\n   *\n   * Automagically adds, removes and sorts upon standard collection events.\n   *\n   * Listen to collection events so the ListView will do the right thing when\n   * a model is added or the collection is reset or sorted.\n   *\n   * @class src/framework/ListView\n   * @extends src/framework/View\n   * @param {Object} options options hash\n   * @param {Object} options.collection The collection which this view operates on\n   * @example\n   * var UserList = Archer.ListView.extend({\n   *   tagName: 'ul',\n   *   item: '<li>{{fname}} {{lname}}</li>'\n   * });\n   *\n   * var users = new Archer.Collection([\n   *   {fname: 'John', lname: 'Doe'},\n   *   {fname: 'Jane', lname: 'Doe'}\n   * ]);\n   *\n   * var userList = new UserList({collection: users}).render();\n   * userList.el; //=> \"<ul><li>John Doe</li><li>Jane Doe</li></ul>\"\n   *\n   * users.push({fname: 'Jim', lname: 'Doe'});\n   * userList.el; //=> \"<ul><li>John Doe</li><li>Jane Doe</li><li>Jim Doe</li></ul>\"\n   *\n   * users.first().destroy();\n   * userList.el; //=> \"<ul><li>Jane Doe</li><li>Jim Doe</li></ul>\"\n   */\n\nvar ListView = FrameworkView.extend(\n/** @lends src/framework/ListView.prototype */\n{\n  constructor: function () {\n    FrameworkView.apply(this, arguments);\n\n    if (!this.collection) {\n      throw new Error('Missing collection');\n    }\n\n    this.listenTo(this.collection, 'reset sort', this.reset);\n    this.listenTo(this.collection, 'add', this.addItem);\n\n    if (this.fetchCollection) {\n      this.collection.fetch();\n    } else {\n      this.collection.each(this.addItem, this);\n    }\n  },\n\n  /**\n     * The view/template we will use to render each model in the collection.\n     * @type {String|module:Okta.View}\n     */\n  item: null,\n\n  /**\n     * A selector in the local template where to append each item\n     * @type {String}\n     */\n  itemSelector: null,\n\n  /**\n     * Empty the list and re-add everything from the collection.\n     * Usefull for handling `collection.reset()` or for handling the initial load\n     * @protected\n     */\n  reset: function () {\n    this.removeChildren();\n    this.collection.each((model, index) => {\n      this.addItem(model, index);\n    });\n    return this;\n  },\n\n  /**\n     * Add an item view to the list that will represent one model from the collection\n     *\n     * Listen to the model so when it is destoyed or removed from the collection\n     * this item will remove itself from the list\n     *\n     * @param {Backbone.Model} model The model this row operates on\n     * @protected\n     */\n  addItem: function (model) {\n    var view = this.add(this.item, this.itemSelector, {\n      options: {\n        model: model\n      }\n    }).last();\n\n    if (this.state && this.state.get('trackItemAdded')) {\n      this.state.trigger('itemAdded', view);\n    }\n\n    view.listenTo(model, 'destroy remove', view.remove);\n    return this;\n  },\n  addShowMore: oktaUnderscore.noop\n});\n\nexport { ListView as default };\n"],"names":["ListView","FrameworkView","extend","constructor","apply","arguments","collection","Error","listenTo","reset","addItem","fetchCollection","fetch","each","item","itemSelector","removeChildren","model","index","view","add","options","last","state","get","trigger","remove","addShowMore","oktaUnderscore","noop"],"mappings":";;;AAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,aAAa,CAACC,MAAd;AACf;AACA;AACEC,EAAAA,WAAW,EAAE,YAAY;AACvBF,IAAAA,aAAa,CAACG,KAAd,CAAoB,IAApB,EAA0BC,SAA1B,CAAA,CAAA;;AAEA,IAAI,IAAA,CAAC,IAAKC,CAAAA,UAAV,EAAsB;AACpB,MAAA,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN,CAAA;AACD,KAAA;;AAED,IAAKC,IAAAA,CAAAA,QAAL,CAAc,IAAKF,CAAAA,UAAnB,EAA+B,YAA/B,EAA6C,KAAKG,KAAlD,CAAA,CAAA;AACA,IAAKD,IAAAA,CAAAA,QAAL,CAAc,IAAKF,CAAAA,UAAnB,EAA+B,KAA/B,EAAsC,KAAKI,OAA3C,CAAA,CAAA;;AAEA,IAAI,IAAA,IAAA,CAAKC,eAAT,EAA0B;AACxB,MAAKL,IAAAA,CAAAA,UAAL,CAAgBM,KAAhB,EAAA,CAAA;AACD,KAFD,MAEO;AACL,MAAA,IAAA,CAAKN,UAAL,CAAgBO,IAAhB,CAAqB,IAAKH,CAAAA,OAA1B,EAAmC,IAAnC,CAAA,CAAA;AACD,KAAA;AACF,GAhBH;;AAkBE;AACF;AACA;AACA;AACEI,EAAAA,IAAI,EAAE,IAtBR;;AAwBE;AACF;AACA;AACA;AACEC,EAAAA,YAAY,EAAE,IA5BhB;;AA8BE;AACF;AACA;AACA;AACA;AACEN,EAAAA,KAAK,EAAE,YAAY;AACjB,IAAA,IAAA,CAAKO,cAAL,EAAA,CAAA;AACA,IAAKV,IAAAA,CAAAA,UAAL,CAAgBO,IAAhB,CAAqB,CAACI,KAAD,EAAQC,KAAR,KAAkB;AACrC,MAAA,IAAA,CAAKR,OAAL,CAAaO,KAAb,EAAoBC,KAApB,CAAA,CAAA;AACD,KAFD,CAAA,CAAA;AAGA,IAAA,OAAO,IAAP,CAAA;AACD,GAzCH;;AA2CE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACER,EAAAA,OAAO,EAAE,UAAUO,KAAV,EAAiB;AACxB,IAAIE,IAAAA,IAAI,GAAG,IAAA,CAAKC,GAAL,CAAS,KAAKN,IAAd,EAAoB,IAAKC,CAAAA,YAAzB,EAAuC;AAChDM,MAAAA,OAAO,EAAE;AACPJ,QAAAA,KAAK,EAAEA,KAAAA;AADA,OAAA;AADuC,KAAvC,CAAA,CAIRK,IAJQ,EAAX,CAAA;;AAMA,IAAI,IAAA,IAAA,CAAKC,KAAL,IAAc,IAAKA,CAAAA,KAAL,CAAWC,GAAX,CAAe,gBAAf,CAAlB,EAAoD;AAClD,MAAA,IAAA,CAAKD,KAAL,CAAWE,OAAX,CAAmB,WAAnB,EAAgCN,IAAhC,CAAA,CAAA;AACD,KAAA;;AAEDA,IAAAA,IAAI,CAACX,QAAL,CAAcS,KAAd,EAAqB,gBAArB,EAAuCE,IAAI,CAACO,MAA5C,CAAA,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAjEH;AAkEEC,EAAAA,WAAW,EAAEC,cAAc,CAACC,IAAAA;AAlE9B,CAFe;;;;"}
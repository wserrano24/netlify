{"version":3,"file":"helper-i18n.js","sources":["../../../../../../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js"],"sourcesContent":["import _Handlebars2 from '../../../../lib/handlebars/dist/cjs/handlebars.runtime.js';\nexport { default } from '../../../../lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport oktaUnderscore from '../underscore-wrapper.js';\nimport Logger from '../Logger.js';\nimport StringUtil from '../StringUtil.js';\n\n/* eslint @okta/okta-ui/no-specific-modules: 0 */\nconst hbsEscape = _Handlebars2.Utils.escapeExpression;\n\nfunction trim(str) {\n  return str && str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction replaceTagsWithPlaceholders(source, tag, tagValue) {\n  const escapedBeginningTag = hbsEscape(`<${tag}>`);\n  const escapedEndTag = hbsEscape(`</${tag}>`);\n  const [beginningTag, endTag] = tagValue.split(tag);\n\n  if (!source.includes(escapedBeginningTag) && !source.includes(escapedEndTag)) {\n    throw Error(`Parsed tag \"${tag}\" is not present in \"${source}\"`);\n  } else if (!tagValue.includes(tag)) {\n    throw Error(`Parsed tag \"${tag}\" is not present in \"${tagValue}\"`);\n  } else if (!beginningTag || !endTag) {\n    throw Error(`Template value \"${tagValue}\" must contain beginning and closing tags`);\n  }\n\n  return source.replace(escapedBeginningTag, beginningTag).replace(escapedEndTag, endTag);\n}\n/* eslint max-statements: [2, 18] */\n\n\n_Handlebars2.registerHelper('i18n', function i18n(options) {\n  let params;\n  const key = trim(options.hash.code);\n  const bundle = trim(options.hash.bundle);\n  const args = trim(options.hash.arguments);\n  const tags = Object.keys(options.hash).filter(prop => prop.match(/^\\$\\d+/)).map(prop => ({\n    tag: prop,\n    value: options.hash[prop]\n  }));\n\n  if (args) {\n    params = oktaUnderscore.map(trim(args).split(';'), function mapParam(param) {\n      param = trim(param);\n      let val;\n      /*\n       * the context(data) may be a deep object, ex {user: {name: 'John', gender: 'M'}}\n       * arguments may be 'user.name'\n       * return data['user']['name']\n       */\n\n      oktaUnderscore.each(param.split('.'), p => {\n        val = val ? val[p] : this[p];\n      });\n\n      return val;\n    }, this);\n  }\n\n  const localizedValue = StringUtil.localize(key, bundle, params);\n\n  if (tags.length < 1) {\n    // No HTML tags provided - return the localized and escaped string\n    return localizedValue;\n  }\n\n  let escapedString = hbsEscape(localizedValue);\n\n  try {\n    tags.forEach(tag => {\n      escapedString = replaceTagsWithPlaceholders(escapedString, tag.tag, tag.value);\n    });\n    return new _Handlebars2.SafeString(escapedString);\n  } catch (err) {\n    Logger.error(err.toString());\n    return localizedValue;\n  }\n});\n"],"names":["hbsEscape","_Handlebars2","Utils","escapeExpression","trim","str","replace","replaceTagsWithPlaceholders","source","tag","tagValue","escapedBeginningTag","escapedEndTag","beginningTag","endTag","split","includes","Error","registerHelper","i18n","options","params","key","hash","code","bundle","args","arguments","tags","Object","keys","filter","prop","match","map","value","oktaUnderscore","mapParam","param","val","each","p","localizedValue","StringUtil","localize","length","escapedString","forEach","SafeString","err","Logger","error","toString"],"mappings":"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"}
{"version":3,"file":"EnrollHotpController.js","sources":["../../../../../src/v1/controllers/EnrollHotpController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { loc } from 'okta';\nimport FormController from 'v1/util/FormController';\nimport FormType from 'v1/util/FormType';\nimport Footer from 'v1/views/enroll-factors/Footer';\nimport HtmlErrorMessageView from 'v1/views/mfa-verify/HtmlErrorMessageView';\nexport default FormController.extend({\n  className: 'enroll-hotp',\n  Model: function() {\n    return {\n      local: {\n        __factorType__: ['string', false, this.options.factorType],\n        __provider__: ['string', false, this.options.provider],\n      },\n    };\n  },\n  Form: {\n    title: function() {\n      const factors = this.options.appState.get('factors');\n      const hotpFactor = factors.findWhere({\n        provider: this.model.get('__provider__'),\n        factorType: this.model.get('__factorType__'),\n      });\n      return loc('enroll.totp.title', 'login', [hotpFactor.get('factorLabel')]);\n    },\n    noButtonBar: true,\n    attributes: { 'data-se': 'restrict-enroll' },\n\n    formChildren: function() {\n      const children = [\n        FormType.View({\n          View: new HtmlErrorMessageView({ message: loc('enroll.hotp.restricted', 'login') }),\n        }),\n      ];\n\n      return children;\n    },\n  },\n\n  Footer: Footer,\n});\n"],"names":["FormController","extend","className","Model","local","__factorType__","options","factorType","__provider__","provider","Form","title","factors","appState","get","hotpFactor","findWhere","model","loc","noButtonBar","attributes","formChildren","children","FormType","View","HtmlErrorMessageView","message","Footer"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,2BAAeA,cAAc,CAACC,MAAf,CAAsB;AACnCC,EAAAA,SAAS,EAAE,aADwB;AAEnCC,EAAAA,KAAK,EAAE,YAAW;AAChB,IAAO,OAAA;AACLC,MAAAA,KAAK,EAAE;AACLC,QAAAA,cAAc,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkB,IAAKC,CAAAA,OAAL,CAAaC,UAA/B,CADX;AAELC,QAAAA,YAAY,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkB,IAAA,CAAKF,OAAL,CAAaG,QAA/B,CAAA;AAFT,OAAA;AADF,KAAP,CAAA;AAMD,GATkC;AAUnCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,YAAW;AAChB,MAAMC,MAAAA,OAAO,GAAG,IAAA,CAAKN,OAAL,CAAaO,QAAb,CAAsBC,GAAtB,CAA0B,SAA1B,CAAhB,CAAA;AACA,MAAA,MAAMC,UAAU,GAAGH,OAAO,CAACI,SAAR,CAAkB;AACnCP,QAAAA,QAAQ,EAAE,IAAKQ,CAAAA,KAAL,CAAWH,GAAX,CAAe,cAAf,CADyB;AAEnCP,QAAAA,UAAU,EAAE,IAAA,CAAKU,KAAL,CAAWH,GAAX,CAAe,gBAAf,CAAA;AAFuB,OAAlB,CAAnB,CAAA;AAIA,MAAA,OAAOI,GAAG,CAAC,mBAAD,EAAsB,OAAtB,EAA+B,CAACH,UAAU,CAACD,GAAX,CAAe,aAAf,CAAD,CAA/B,CAAV,CAAA;AACD,KARG;AASJK,IAAAA,WAAW,EAAE,IATT;AAUJC,IAAAA,UAAU,EAAE;AAAE,MAAW,SAAA,EAAA,iBAAA;AAAb,KAVR;AAYJC,IAAAA,YAAY,EAAE,YAAW;AACvB,MAAA,MAAMC,QAAQ,GAAG,CACfC,QAAQ,CAACC,IAAT,CAAc;AACZA,QAAAA,IAAI,EAAE,IAAIC,oBAAJ,CAAyB;AAAEC,UAAAA,OAAO,EAAER,GAAG,CAAC,wBAAD,EAA2B,OAA3B,CAAA;AAAd,SAAzB,CAAA;AADM,OAAd,CADe,CAAjB,CAAA;AAMA,MAAA,OAAOI,QAAP,CAAA;AACD,KAAA;AApBG,GAV6B;AAiCnCK,EAAAA,MAAM,EAAEA,MAAAA;AAjC2B,CAAtB,CAAf;;;;"}
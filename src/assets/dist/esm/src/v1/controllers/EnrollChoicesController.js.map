{"version":3,"file":"EnrollChoicesController.js","sources":["../../../../../src/v1/controllers/EnrollChoicesController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint complexity: [2, 13] */\n\nimport { _, loc, Collection } from 'okta';\nimport hbs from 'handlebars-inline-precompile';\nimport FactorList from 'v1/views/enroll-choices/FactorList';\nimport Footer from 'v1/views/enroll-choices/Footer';\nimport RequiredFactorList from 'v1/views/enroll-choices/RequiredFactorList';\nimport Enums from 'util/Enums';\nimport FormController from 'v1/util/FormController';\nimport RouterUtil from 'v1/util/RouterUtil';\nconst subtitleTpl = hbs('<span>{{{subtitle}}}</span>');\nexport default FormController.extend({\n  className: 'enroll-choices',\n  state: {\n    pageType: null,\n  },\n\n  Model: {},\n\n  Form: {\n    noCancelButton: true,\n\n    title: _.partial(loc, 'enroll.choices.title', 'login'),\n\n    noButtonBar: function() {\n      return this.state.get('pageType') === Enums.ALL_OPTIONAL_NONE_ENROLLED;\n    },\n\n    subtitle: ' ',\n\n    getSubtitle: function() {\n      switch (this.state.get('pageType')) {\n      case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n      case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n        return loc('enroll.choices.optional', 'login');\n      case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED: {\n        const remainingDays = this.options.appState.get('gracePeriodRemainingDays');\n        return Number.isInteger(remainingDays) && remainingDays >= 0\n          ? this.getGracePeriodSubtitle(remainingDays)\n          : this.getDefaultSubtitle();\n      }\n      default:\n        return this.getDefaultSubtitle();\n      }\n    },\n\n    getDefaultSubtitle: function() {\n      return this.settings.get('brandName')\n        ? loc('enroll.choices.description.specific', 'login', [this.settings.get('brandName')])\n        : loc('enroll.choices.description.generic', 'login');\n    },\n\n    getGracePeriodSubtitle: function(remainingDays) {\n      return remainingDays >= 1\n        ? loc('enroll.choices.description.gracePeriod.bold', 'login', [remainingDays])\n        : loc('enroll.choices.description.gracePeriod.oneDay.bold', 'login');\n    },\n\n    save: function() {\n      switch (this.state.get('pageType')) {\n      case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n      case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n        return loc('enroll.choices.submit.finish', 'login');\n      case Enums.HAS_REQUIRED_NONE_ENROLLED:\n        return loc('enroll.choices.submit.configure', 'login');\n      case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n        return loc('enroll.choices.submit.next', 'login');\n      default:\n        return '';\n      }\n    },\n\n    initialize: function(options) {\n      this.listenTo(this, 'save', function() {\n        let current;\n\n        switch (this.state.get('pageType')) {\n        case Enums.HAS_REQUIRED_NONE_ENROLLED:\n        case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n          current = options.appState.get('factors').getFirstUnenrolledRequiredFactor();\n          options.appState.trigger(\n            'navigate',\n            RouterUtil.createEnrollFactorUrl(current.get('provider'), current.get('factorType'))\n          );\n          break;\n        default:\n          return this.model.doTransaction(function(transaction) {\n            return transaction.skip();\n          });\n        }\n      });\n    },\n\n    preRender: function() {\n      // form subtitle does not support unescaped strings, and we need some html elements\n      // in the subtitle for this form. So instead of a regular subtitle, we add a <span>\n      // with the text we need\n      this.add(subtitleTpl({ subtitle: this.getSubtitle() }), 'p.okta-form-subtitle');\n\n      const factors = this.options.appState.get('factors');\n\n      switch (this.state.get('pageType')) {\n      case Enums.HAS_REQUIRED_NONE_ENROLLED:\n      case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n        this.add(\n          new RequiredFactorList({\n            minimize: true,\n            collection: new Collection(factors.where({ required: true })),\n            appState: this.options.appState,\n          })\n        );\n        break;\n      case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n      case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n      case Enums.ALL_OPTIONAL_NONE_ENROLLED: {\n        const enrolled = factors.where({ enrolled: true });\n        const notEnrolled = factors.filter(function(factor) {\n          // pick factors that are not enrolled or have additional enrollments\n          return !factor.get('enrolled') || factor.get('additionalEnrollment');\n        });\n        let notEnrolledListTitle;\n\n        if (enrolled.length > 0) {\n          notEnrolledListTitle = loc('enroll.choices.list.optional', 'login');\n          this.add(\n            new FactorList({\n              listTitle: loc('enroll.choices.list.enrolled', 'login'),\n              minimize: true,\n              collection: new Collection(enrolled),\n              appState: this.options.appState,\n            })\n          );\n        }\n        this.add(\n          new FactorList({\n            listTitle: notEnrolledListTitle,\n            collection: new Collection(notEnrolled),\n            appState: this.options.appState,\n            showInlineSetupButton: true,\n          })\n        );\n        break;\n      }\n      }\n    },\n  },\n\n  initialize: function(options) {\n    let numRequiredEnrolled = 0;\n    let numRequiredNotEnrolled = 0;\n    let numOptionalEnrolled = 0;\n    let numOptionalNotEnrolled = 0;\n    let hasRequired;\n    let pageType;\n\n    options.appState.get('factors').each(function(factor) {\n      const required = factor.get('required');\n      const enrolled = factor.get('enrolled');\n      const additionalEnrollment = factor.get('additionalEnrollment');\n\n      if (required && enrolled) {\n        numRequiredEnrolled++;\n      } else if (required && !enrolled) {\n        numRequiredNotEnrolled++;\n      } else if (!required && enrolled) {\n        numOptionalEnrolled++;\n      } else if (!required && !enrolled) {\n        numOptionalNotEnrolled++;\n      }\n      // If a factor has multiple instances and\n      // additional optional enrollments\n      if (enrolled && additionalEnrollment) {\n        numOptionalNotEnrolled++;\n      }\n    });\n\n    hasRequired = numRequiredEnrolled > 0 || numRequiredNotEnrolled > 0;\n\n    // There are 5 possible states this screen can be in:\n\n    // 1. Has required, but none have been enrolled. Wizard start page.\n    if (hasRequired && numRequiredEnrolled === 0) {\n      pageType = Enums.HAS_REQUIRED_NONE_ENROLLED;\n    } else if (hasRequired && numRequiredNotEnrolled > 0) {\n      // 2. Has required, and have enrolled at least one. The page layout\n      //    to configure the remaining required factors.\n      pageType = Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED;\n    } else if (hasRequired && numOptionalNotEnrolled > 0) {\n      // 3. Has required, and finished enrolling all required factors. The\n      //    page layout you see to configure any optional factors or skip.\n      pageType = Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED;\n    } else if (numOptionalEnrolled === 0 && numOptionalNotEnrolled > 0) {\n      // 4. Factors are all optional, no factors enrolled.\n      pageType = Enums.ALL_OPTIONAL_NONE_ENROLLED;\n    } else if (numOptionalNotEnrolled > 0) {\n      // 5. Factors are all optional, some factors have already been\n      //    enrolled (can either enroll more or skip).\n      pageType = Enums.ALL_OPTIONAL_SOME_ENROLLED;\n    } else {\n      // 6. Factors are all optional, all factors have already been\n      //    enrolled, among them there is OktaVerify with Push enrolled as totp\n      //    (API return OktaVerify push factor as unenrolled in this case and as we always merge\n      //    push and totp in UI so we redirect to skip link here).\n      this.model.doTransaction(function(transaction) {\n        return transaction.skip();\n      });\n    }\n\n    this.state.set('pageType', pageType);\n\n    if (this.options.appState.get('skipLink') && pageType === Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED) {\n      this.add(new Footer(this.toJSON()));\n    }\n  },\n});\n"],"names":["subtitleTpl","FormController","extend","className","state","pageType","Model","Form","noCancelButton","title","_","partial","loc","noButtonBar","get","Enums","ALL_OPTIONAL_NONE_ENROLLED","subtitle","getSubtitle","ALL_OPTIONAL_SOME_ENROLLED","HAS_REQUIRED_ALL_REQUIRED_ENROLLED","HAS_REQUIRED_SOME_REQUIRED_ENROLLED","remainingDays","options","appState","Number","isInteger","getGracePeriodSubtitle","getDefaultSubtitle","settings","save","HAS_REQUIRED_NONE_ENROLLED","initialize","listenTo","current","getFirstUnenrolledRequiredFactor","trigger","RouterUtil","createEnrollFactorUrl","model","doTransaction","transaction","skip","preRender","add","factors","RequiredFactorList","minimize","collection","Collection","where","required","enrolled","notEnrolled","filter","factor","notEnrolledListTitle","length","FactorList","listTitle","showInlineSetupButton","numRequiredEnrolled","numRequiredNotEnrolled","numOptionalEnrolled","numOptionalNotEnrolled","hasRequired","each","additionalEnrollment","set","Footer","toJSON"],"mappings":"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"}
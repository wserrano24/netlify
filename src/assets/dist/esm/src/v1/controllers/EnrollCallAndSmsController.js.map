{"version":3,"file":"EnrollCallAndSmsController.js","sources":["../../../../../src/v1/controllers/EnrollCallAndSmsController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint complexity: [2, 8] */\nimport { _, loc, internal, View } from 'okta';\nimport hbs from 'handlebars-inline-precompile';\nimport CountryUtil from 'util/CountryUtil';\nimport Enums from 'util/Enums';\nimport FormController from 'v1/util/FormController';\nimport FormType from 'v1/util/FormType';\nimport Util from 'util/Util';\nimport Footer from 'v1/views/enroll-factors/Footer';\nimport PhoneTextBox from 'v1/views/enroll-factors/PhoneTextBox';\nimport TextBox from 'v1/views/shared/TextBox';\nlet { Keys } = internal.util;\nconst EnrollCallAndSmsControllerwarningTemplate = View.extend({\n  className: 'okta-form-infobox-warning infobox infobox-warning login-timeout-warning',\n  attributes: {\n    'aria-live': 'polite',\n  },\n  template: hbs`\n      <span class=\"icon warning-16\"></span>\n      <p>{{{warning}}}</p>\n    `,\n});\nconst factorIdIsDefined = {\n  factorId: function(val) {\n    return !_.isUndefined(val);\n  },\n};\n\nfunction isCallFactor(factorType) {\n  return factorType === 'call';\n}\n\nfunction getClassName(factorType) {\n  return isCallFactor(factorType) ? 'enroll-call' : 'enroll-sms';\n}\n\nfunction sendCode(e) {\n  if (Keys.isEnter(e)) {\n    e.stopPropagation();\n    e.preventDefault();\n    if (e.type === 'keyup' && e.data && e.data.model) {\n      e.data.model.sendCode();\n    }\n  }\n}\n\nexport default FormController.extend({\n  className: function() {\n    return getClassName(this.options.factorType);\n  },\n  Model: function() {\n    return {\n      props: {\n        phoneNumber: ['string', true],\n        phoneExtension: ['string', false],\n        lastEnrolledPhoneNumber: 'string',\n        passCode: ['string', true],\n        factorId: 'string',\n      },\n      local: {\n        countryCode: ['string', false, this.options.appState.get('userCountryCode')],\n        hasExistingPhones: 'boolean',\n        trapEnrollment: 'boolean',\n        ableToResend: 'boolean',\n        factorType: 'string',\n        skipPhoneValidation: 'boolean',\n      },\n      derived: {\n        countryCallingCode: {\n          deps: ['countryCode'],\n          fn: function(countryCode) {\n            return '+' + CountryUtil.getCallingCodeForCountry(countryCode);\n          },\n        },\n        fullPhoneNumber: {\n          deps: ['countryCallingCode', 'phoneNumber'],\n          fn: function(countryCallingCode, phoneNumber) {\n            return phoneNumber ? countryCallingCode + phoneNumber : '';\n          },\n        },\n        enrolled: {\n          deps: ['lastEnrolledPhoneNumber', 'fullPhoneNumber'],\n          fn: function(lastEnrolled, current) {\n            return lastEnrolled === current;\n          },\n        },\n      },\n      limitResending: function() {\n        this.set({ ableToResend: false });\n        _.delay(_.bind(this.set, this), Enums.API_RATE_LIMIT, { ableToResend: true });\n      },\n      sendCode: function() {\n        const self = this;\n        const phoneNumber = this.get('fullPhoneNumber');\n        const phoneExtension = this.get('phoneExtension');\n  \n        self.trigger('errors:clear');\n  \n        if (!phoneNumber.length) {\n          self.trigger('invalid', self, { phoneNumber: 'model.validation.field.blank' });\n          return;\n        }\n  \n        return this.doTransaction(function(transaction) {\n          const isMfaEnroll = transaction.status === 'MFA_ENROLL' || transaction.status === 'FACTOR_ENROLL';\n          const profileData = {\n            phoneNumber: phoneNumber,\n            updatePhone: isMfaEnroll ? self.get('hasExistingPhones') : true,\n          };\n  \n          if (isCallFactor(self.get('factorType'))) {\n            profileData['phoneExtension'] = phoneExtension;\n          }\n  \n          if (self.get('skipPhoneValidation')) {\n            profileData['validatePhone'] = false;\n          }\n  \n          const doEnroll = function(trans) {\n            const factor = _.findWhere(trans.factors, {\n              factorType: self.get('factorType'),\n              provider: 'OKTA',\n            });\n  \n            return factor\n              .enroll({\n                profile: profileData,\n              })\n              .catch(function(error) {\n                if (error.errorCode === 'E0000098') {\n                  // E0000098: \"This phone number is invalid.\"\n                  self.set('skipPhoneValidation', true);\n                  error.xhr.responseJSON.errorSummary = loc('enroll.sms.try_again', 'login');\n                }\n                throw error;\n              });\n          };\n  \n          if (isMfaEnroll) {\n            return doEnroll(transaction);\n          } else {\n            // We must transition to MfaEnroll before updating the phone number\n            self.set('trapEnrollment', true);\n            return transaction.prev().then(doEnroll).then(function(trans) {\n              self.set('trapEnrollment', false);\n              return trans;\n            });\n          }\n          // Rethrow errors so we can change state\n          // AFTER setting the new transaction\n        }, true)\n          .then(function() {\n            self.set('lastEnrolledPhoneNumber', phoneNumber);\n            self.limitResending();\n          })\n          .catch(function() {\n            self.set('trapEnrollment', false);\n          });\n      },\n      resendCode: function() {\n        this.trigger('errors:clear');\n        this.limitResending();\n        return this.doTransaction(function(transaction) {\n          return transaction.resend(this.get('factorType'));\n        });\n      },\n      save: function() {\n        return this.doTransaction(function(transaction) {\n          return transaction.activate({\n            passCode: this.get('passCode'),\n          });\n        });\n      },\n    };\n  },\n  Form: function() {\n    const factorType = this.options.factorType;\n    const isCall = isCallFactor(factorType);\n    const formTitle = loc(isCall ? 'enroll.call.setup' : 'enroll.sms.setup', 'login');\n    const formSubmit = loc(isCall ? 'mfa.call' : 'mfa.sendCode', 'login');\n    const formRetry = loc(isCall ? 'mfa.redial' : 'mfa.resendCode', 'login');\n    const formSubmitted = loc(isCall ? 'mfa.calling' : 'mfa.sent', 'login');\n    const numberFieldClassName = isCall ? 'enroll-call-phone' : 'enroll-sms-phone';\n    const buttonClassName = isCall ? 'call-request-button' : 'sms-request-button';\n    const formChildren = [\n      FormType.Input({\n        name: 'countryCode',\n        type: 'select',\n        wide: true,\n        options: CountryUtil.getCountries(),\n      }),\n      FormType.Input({\n        label: loc('mfa.phoneNumber.placeholder', 'login'),\n        'label-top': true,\n        className: numberFieldClassName,\n        name: 'phoneNumber',\n        input: PhoneTextBox,\n        type: 'text',\n        render: function() {\n          this.$('input[name=\"phoneNumber\"]')\n            .off('keydown keyup', sendCode)\n            .keydown(sendCode)\n            .keyup({ model: this.model }, sendCode);\n        },\n      }),\n    ];\n\n    if (isCall) {\n      formChildren.push(\n        FormType.Input({\n          label: loc('mfa.phoneNumber.ext.placeholder', 'login'),\n          'label-top': true,\n          className: 'enroll-call-extension',\n          name: 'phoneExtension',\n          input: TextBox,\n          type: 'text',\n        })\n      );\n    }\n    formChildren.push(\n      FormType.Button({\n        title: formSubmit,\n        attributes: { 'data-se': buttonClassName },\n        className: 'button button-primary js-enroll-phone margin-top-30 ' + buttonClassName,\n        click: function() {\n          this.model.sendCode();\n        },\n      }),\n      FormType.Button({\n        title: formRetry,\n        attributes: { 'data-se': buttonClassName },\n        className: 'button js-enroll-phone margin-top-30 ' + buttonClassName,\n        click: function() {\n          this.model.resendCode();\n        },\n        initialize: function() {\n          this.$el.css({ display: 'none' });\n          this.listenTo(this.model, 'change:ableToResend', function(model, ableToResend) {\n            if (ableToResend) {\n              this.options.title = formRetry;\n              this.enable();\n            } else {\n              this.options.title = formSubmitted;\n              this.disable();\n            }\n            this.render();\n          });\n        },\n      }),\n      FormType.Divider({\n        showWhen: factorIdIsDefined,\n      }),\n      FormType.Input({\n        label: loc('mfa.challenge.enterCode.placeholder', 'login'),\n        'label-top': true,\n        explain: Util.createInputExplain(\n          'mfa.challenge.enterCode.tooltip',\n          'mfa.challenge.enterCode.placeholder',\n          'login'\n        ),\n        'explain-top': true,\n        name: 'passCode',\n        input: TextBox,\n        type: 'tel',\n        showWhen: factorIdIsDefined,\n      }),\n      FormType.Toolbar({\n        noCancelButton: true,\n        save: loc('mfa.challenge.verify', 'login'),\n        showWhen: factorIdIsDefined,\n      })\n    );\n\n    return {\n      title: formTitle,\n      noButtonBar: true,\n      autoSave: true,\n      className: getClassName(factorType),\n\n      showWarning: function(msg) {\n        this.clearWarnings();\n        this.add(EnrollCallAndSmsControllerwarningTemplate, '.o-form-error-container', { options: { warning: msg } });\n      },\n\n      clearWarnings: function() {\n        this.$('.okta-form-infobox-warning').remove();\n      },\n\n      initialize: function() {\n        this.listenTo(this.model, 'change:ableToResend', function(model, ableToResend) {\n          if (ableToResend) {\n            this.showWarning(loc(isCall ? 'factor.call.time.warning' : 'factor.sms.time.warning', 'login'));\n          } else {\n            this.clearWarnings();\n          }\n        });\n        this.listenTo(this.model, 'error errors:clear', function() {\n          this.clearWarnings();\n          this.clearErrors();\n        });\n        this.listenTo(this.model, 'change:enrolled', function() {\n          this.$('.js-enroll-phone').toggle();\n        });\n      },\n      formChildren: formChildren,\n    };\n  },\n\n  Footer: Footer,\n\n  trapAuthResponse: function() {\n    if (this.options.appState.get('isMfaEnrollActivate')) {\n      this.model.set('factorId', this.options.appState.get('activatedFactorId'));\n      return true;\n    }\n    if (this.options.appState.get('isMfaEnroll') && this.model.get('trapEnrollment')) {\n      return true;\n    }\n  },\n\n  initialize: function() {\n    if (isCallFactor(this.options.factorType)) {\n      this.model.set('hasExistingPhones', this.options.appState.get('hasExistingPhonesForCall'));\n    } else {\n      this.model.set('hasExistingPhones', this.options.appState.get('hasExistingPhones'));\n    }\n    this.model.set('factorType', this.options.factorType);\n  },\n});\n"],"names":["Keys","internal","util","EnrollCallAndSmsControllerwarningTemplate","View","extend","className","attributes","template","factorIdIsDefined","factorId","val","_","isUndefined","isCallFactor","factorType","getClassName","sendCode","e","isEnter","stopPropagation","preventDefault","type","data","model","FormController","options","Model","props","phoneNumber","phoneExtension","lastEnrolledPhoneNumber","passCode","local","countryCode","appState","get","hasExistingPhones","trapEnrollment","ableToResend","skipPhoneValidation","derived","countryCallingCode","deps","fn","CountryUtil","getCallingCodeForCountry","fullPhoneNumber","enrolled","lastEnrolled","current","limitResending","set","delay","bind","Enums","API_RATE_LIMIT","self","trigger","length","doTransaction","transaction","isMfaEnroll","status","profileData","updatePhone","doEnroll","trans","factor","findWhere","factors","provider","enroll","profile","catch","error","errorCode","xhr","responseJSON","errorSummary","loc","prev","then","resendCode","resend","save","activate","Form","isCall","formTitle","formSubmit","formRetry","formSubmitted","numberFieldClassName","buttonClassName","formChildren","FormType","Input","name","wide","getCountries","label","input","PhoneTextBox","render","$","off","keydown","keyup","push","TextBox","Button","title","click","initialize","$el","css","display","listenTo","enable","disable","Divider","showWhen","explain","Util","createInputExplain","Toolbar","noCancelButton","noButtonBar","autoSave","showWarning","msg","clearWarnings","add","warning","remove","clearErrors","toggle","Footer","trapAuthResponse"],"mappings":"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"}
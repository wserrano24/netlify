{"version":3,"file":"EnrollActivateEmailController.js","sources":["../../../../../src/v1/controllers/EnrollActivateEmailController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { _, loc, View } from 'okta';\nimport hbs from 'handlebars-inline-precompile';\nimport FormController from 'v1/util/FormController';\nimport FormType from 'v1/util/FormType';\nimport ResendEmailView from 'v1/views/ResendEmailView';\nimport Footer from 'v1/views/enroll-factors/Footer';\n\nconst Model = {\n  props: {\n    passCode: 'string',\n  },\n\n  resend: function() {\n    this.trigger('form:clear-errors');\n    return this.doTransaction(function(transaction) {\n      // authn support multiple `resend` hence has to specify name.\n      return transaction.resend('email');\n    });\n  },\n\n  save: function() {\n    this.trigger('save');\n    const formData = this.toJSON();\n    return this.doTransaction(function(transaction) {\n      return transaction.activate(formData);\n    });\n  },\n};\n\nconst Form = function() {\n  return {\n    title: _.partial(loc, 'email.enroll.title', 'login'),\n    noButtonBar: false,\n    autoSave: true,\n    save: _.partial(loc, 'oform.verify', 'login'), // TODO: deprecated by mfa.challenge.verify\n    formChildren: [\n      // message\n      FormType.View({\n        View: View.extend({\n          className: 'enroll-activate-email-content',\n          attributes: {\n            'data-se': 'enroll-activate-email-content',\n          },\n\n          // Why use `{{{` for the description?\n          // - factorEmail is actually an HTML fragment which\n          //   is created via another handlebar template and used for bold the email address.\n          template: hbs('{{{i18n code=\"email.mfa.email.sent.description\" bundle=\"login\" arguments=\"factorEmail\"}}}'),\n\n          getTemplateData: function() {\n            const factor = this.options.appState.get('factor');\n            const factorEmailVal = factor && factor.profile ? factor.profile.email : '';\n            const factorEmail = hbs('<span class=\"mask-email\">{{email}}</span>')({ email: factorEmailVal });\n            return {\n              factorEmail,\n            };\n          },\n        }),\n      }),\n      // send again callout message and link button\n      FormType.View({\n        View: ResendEmailView,\n      }),\n      // passcode input\n      FormType.Input({\n        label: loc('email.code.label', 'login'),\n        'label-top': true,\n        name: 'passCode',\n        type: 'text',\n        wide: true,\n      }),\n    ],\n  };\n};\n\nexport default FormController.extend({\n  className: 'enroll-activate-email',\n\n  Model: Model,\n\n  Form: Form,\n\n  Footer: Footer,\n});\n"],"names":["Model","props","passCode","resend","trigger","doTransaction","transaction","save","formData","toJSON","activate","Form","title","_","partial","loc","noButtonBar","autoSave","formChildren","FormType","View","extend","className","attributes","template","getTemplateData","factor","options","appState","get","factorEmailVal","profile","email","factorEmail","ResendEmailView","Input","label","name","type","wide","FormController","Footer"],"mappings":"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"}
{"version":3,"file":"VerifyU2FController.js","sources":["../../../../../src/v1/controllers/VerifyU2FController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global u2f */\nimport { _, loc, View } from 'okta';\nimport hbs from 'handlebars-inline-precompile';\nimport Q from 'q';\nimport 'u2f-api-polyfill';\nimport { U2FError } from 'util/Errors';\nimport FactorUtil from 'util/FactorUtil';\nimport FidoUtil from 'util/FidoUtil';\nimport FormController from 'v1/util/FormController';\nimport FormType from 'v1/util/FormType';\nimport HtmlErrorMessageView from 'v1/views/mfa-verify/HtmlErrorMessageView';\nimport FooterMFA from 'v1/views/shared/FooterMFA';\n\nfunction getRegisteredKeysSequence(factors) {\n  const keys = [];\n\n  _.each(factors, function(factor) {\n    keys.push({\n      version: factor.profile.version,\n      keyHandle: factor.profile.credentialId,\n    });\n  });\n  return keys;\n}\n\nexport default FormController.extend({\n  className: 'mfa-verify verify-u2f',\n  Model: {\n    props: {\n      rememberDevice: 'boolean',\n    },\n\n    initialize: function() {\n      const rememberDevice = FactorUtil.getRememberDeviceValue(this.appState);\n\n      // set the initial value for remember device (Cannot do this while defining the\n      // local property because this.settings would not be initialized there yet).\n      this.set('rememberDevice', rememberDevice);\n    },\n\n    save: function() {\n      this.trigger('request');\n\n      return this.doTransaction(function(transaction) {\n        let factor;\n\n        if (transaction.factorTypes) {\n          factor = _.findWhere(transaction.factorTypes, {\n            factorType: 'u2f',\n          });\n        } else {\n          factor = _.findWhere(transaction.factors, {\n            factorType: 'u2f',\n            provider: 'FIDO',\n          });\n        }\n        const self = this;\n\n        return factor.verify().then(function(transaction) {\n          let registeredKeys;\n          let appId;\n          let nonce;\n\n          if (transaction.factors) {\n            const factors = transaction.factors;\n\n            appId = factors[0]['profile']['appId'];\n            nonce = transaction.challenge.nonce;\n            registeredKeys = getRegisteredKeysSequence(factors);\n          } else {\n            const factorData = transaction.factor;\n\n            appId = factorData.profile.appId;\n            nonce = factorData.challenge.nonce;\n            registeredKeys = [{ version: FidoUtil.getU2fVersion(), keyHandle: factorData.profile.credentialId }];\n          }\n          self.trigger('request');\n\n          const deferred = Q.defer();\n\n          u2f.sign(appId, nonce, registeredKeys, function(data) {\n            self.trigger('errors:clear');\n            if (data.errorCode && data.errorCode !== 0) {\n              const isOneFactor = self.options.appState.get('factors').length === 1;\n\n              deferred.reject(\n                new U2FError({\n                  xhr: {\n                    responseJSON: {\n                      errorSummary: FidoUtil.getU2fVerifyErrorMessageByCode(data.errorCode, isOneFactor),\n                    },\n                  },\n                })\n              );\n            } else {\n              const rememberDevice = !!self.get('rememberDevice');\n\n              return factor\n                .verify({\n                  clientData: data.clientData,\n                  signatureData: data.signatureData,\n                  rememberDevice: rememberDevice,\n                })\n                .then(deferred.resolve);\n            }\n          });\n          return deferred.promise;\n        });\n      });\n    },\n  },\n\n  Form: {\n    autoSave: true,\n    hasSavingState: false,\n    title: _.partial(loc, 'factor.u2f', 'login'),\n    className: 'verify-u2f-form',\n    noCancelButton: true,\n    save: _.partial(loc, 'verify.u2f.retry', 'login'),\n    noButtonBar: function() {\n      return !FidoUtil.isU2fAvailable();\n    },\n    modelEvents: {\n      request: '_startEnrollment',\n      error: '_stopEnrollment',\n    },\n\n    formChildren: function() {\n      const result = [];\n\n      if (!FidoUtil.isU2fAvailable()) {\n        let errorMessageKey = 'u2f.error.factorNotSupported';\n\n        if (this.options.appState.get('factors').length === 1) {\n          errorMessageKey = 'u2f.error.factorNotSupported.oneFactor';\n        }\n        result.push(\n          FormType.View(\n            { View: new HtmlErrorMessageView({ message: loc(errorMessageKey, 'login') }) },\n            { selector: '.o-form-error-container' }\n          )\n        );\n      } else {\n        result.push(\n          FormType.View({\n            View: View.extend({\n              template: hbs(\n                '\\\n            <div class=\"u2f-verify-text\">\\\n              <p>{{i18n code=\"verify.u2f.instructions\" bundle=\"login\"}}</p>\\\n              <p>{{i18n code=\"verify.u2f.instructionsBluetooth\" bundle=\"login\"}}</p>\\\n              <div data-se=\"u2f-waiting\" class=\"okta-waiting-spinner\"></div>\\\n            </div>'\n              ),\n            }),\n          })\n        );\n      }\n\n      if (this.options.appState.get('allowRememberDevice')) {\n        result.push(\n          FormType.Input({\n            label: false,\n            'label-top': true,\n            placeholder: this.options.appState.get('rememberDeviceLabel'),\n            className: 'margin-btm-0',\n            name: 'rememberDevice',\n            type: 'checkbox',\n          })\n        );\n      }\n\n      return result;\n    },\n\n    postRender: function() {\n      _.defer(() => {\n        if (FidoUtil.isU2fAvailable()) {\n          this.model.save();\n        } else {\n          this.$('[data-se=\"u2f-waiting\"]').addClass('hide');\n        }\n      });\n    },\n\n    _startEnrollment: function() {\n      this.$('.okta-waiting-spinner').removeClass('hide');\n      this.$('.o-form-button-bar').hide();\n    },\n\n    _stopEnrollment: function() {\n      this.$('.okta-waiting-spinner').addClass('hide');\n      this.$('.o-form-button-bar').show();\n    },\n  },\n\n  back: function() {\n    // Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n\n  Footer: FooterMFA,\n});\n"],"names":["getRegisteredKeysSequence","factors","keys","_","each","factor","push","version","profile","keyHandle","credentialId","FormController","extend","className","Model","props","rememberDevice","initialize","FactorUtil","getRememberDeviceValue","appState","set","save","trigger","doTransaction","transaction","factorTypes","findWhere","factorType","provider","self","verify","then","registeredKeys","appId","nonce","challenge","factorData","FidoUtil","getU2fVersion","deferred","Q","defer","u2f","sign","data","errorCode","isOneFactor","options","get","length","reject","U2FError","xhr","responseJSON","errorSummary","getU2fVerifyErrorMessageByCode","clientData","signatureData","resolve","promise","Form","autoSave","hasSavingState","title","partial","loc","noCancelButton","noButtonBar","isU2fAvailable","modelEvents","request","error","formChildren","result","errorMessageKey","FormType","View","HtmlErrorMessageView","message","selector","template","Input","label","placeholder","name","type","postRender","model","$","addClass","_startEnrollment","removeClass","hide","_stopEnrollment","show","back","Footer","FooterMFA"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAASA,yBAAT,CAAmCC,OAAnC,EAA4C;AAC1C,EAAMC,MAAAA,IAAI,GAAG,EAAb,CAAA;;AAEAC,EAAAA,cAAC,CAACC,IAAF,CAAOH,OAAP,EAAgB,UAASI,MAAT,EAAiB;AAC/BH,IAAAA,IAAI,CAACI,IAAL,CAAU;AACRC,MAAAA,OAAO,EAAEF,MAAM,CAACG,OAAP,CAAeD,OADhB;AAERE,MAAAA,SAAS,EAAEJ,MAAM,CAACG,OAAP,CAAeE,YAAAA;AAFlB,KAAV,CAAA,CAAA;AAID,GALD,CAAA,CAAA;;AAMA,EAAA,OAAOR,IAAP,CAAA;AACD,CAAA;;AAED,0BAAeS,cAAc,CAACC,MAAf,CAAsB;AACnCC,EAAAA,SAAS,EAAE,uBADwB;AAEnCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,cAAc,EAAE,SAAA;AADX,KADF;AAKLC,IAAAA,UAAU,EAAE,YAAW;AACrB,MAAMD,MAAAA,cAAc,GAAGE,EAAU,CAACC,sBAAX,CAAkC,IAAKC,CAAAA,QAAvC,CAAvB,CADqB;AAIrB;;AACA,MAAA,IAAA,CAAKC,GAAL,CAAS,gBAAT,EAA2BL,cAA3B,CAAA,CAAA;AACD,KAXI;AAaLM,IAAAA,IAAI,EAAE,YAAW;AACf,MAAKC,IAAAA,CAAAA,OAAL,CAAa,SAAb,CAAA,CAAA;AAEA,MAAA,OAAO,IAAKC,CAAAA,aAAL,CAAmB,UAASC,WAAT,EAAsB;AAC9C,QAAA,IAAIpB,MAAJ,CAAA;;AAEA,QAAIoB,IAAAA,WAAW,CAACC,WAAhB,EAA6B;AAC3BrB,UAAAA,MAAM,GAAGF,cAAC,CAACwB,SAAF,CAAYF,WAAW,CAACC,WAAxB,EAAqC;AAC5CE,YAAAA,UAAU,EAAE,KAAA;AADgC,WAArC,CAAT,CAAA;AAGD,SAJD,MAIO;AACLvB,UAAAA,MAAM,GAAGF,cAAC,CAACwB,SAAF,CAAYF,WAAW,CAACxB,OAAxB,EAAiC;AACxC2B,YAAAA,UAAU,EAAE,KAD4B;AAExCC,YAAAA,QAAQ,EAAE,MAAA;AAF8B,WAAjC,CAAT,CAAA;AAID,SAAA;;AACD,QAAMC,MAAAA,IAAI,GAAG,IAAb,CAAA;AAEA,QAAOzB,OAAAA,MAAM,CAAC0B,MAAP,EAAA,CAAgBC,IAAhB,CAAqB,UAASP,WAAT,EAAsB;AAChD,UAAA,IAAIQ,cAAJ,CAAA;AACA,UAAA,IAAIC,KAAJ,CAAA;AACA,UAAA,IAAIC,KAAJ,CAAA;;AAEA,UAAIV,IAAAA,WAAW,CAACxB,OAAhB,EAAyB;AACvB,YAAA,MAAMA,OAAO,GAAGwB,WAAW,CAACxB,OAA5B,CAAA;AAEAiC,YAAAA,KAAK,GAAGjC,OAAO,CAAC,CAAD,CAAP,CAAW,SAAX,CAAsB,CAAA,OAAtB,CAAR,CAAA;AACAkC,YAAAA,KAAK,GAAGV,WAAW,CAACW,SAAZ,CAAsBD,KAA9B,CAAA;AACAF,YAAAA,cAAc,GAAGjC,yBAAyB,CAACC,OAAD,CAA1C,CAAA;AACD,WAND,MAMO;AACL,YAAA,MAAMoC,UAAU,GAAGZ,WAAW,CAACpB,MAA/B,CAAA;AAEA6B,YAAAA,KAAK,GAAGG,UAAU,CAAC7B,OAAX,CAAmB0B,KAA3B,CAAA;AACAC,YAAAA,KAAK,GAAGE,UAAU,CAACD,SAAX,CAAqBD,KAA7B,CAAA;AACAF,YAAAA,cAAc,GAAG,CAAC;AAAE1B,cAAAA,OAAO,EAAE+B,IAAQ,CAACC,aAAT,EAAX;AAAqC9B,cAAAA,SAAS,EAAE4B,UAAU,CAAC7B,OAAX,CAAmBE,YAAAA;AAAnE,aAAD,CAAjB,CAAA;AACD,WAAA;;AACDoB,UAAAA,IAAI,CAACP,OAAL,CAAa,SAAb,CAAA,CAAA;AAEA,UAAA,MAAMiB,QAAQ,GAAGC,CAAC,CAACC,KAAF,EAAjB,CAAA;AAEAC,UAAAA,GAAG,CAACC,IAAJ,CAASV,KAAT,EAAgBC,KAAhB,EAAuBF,cAAvB,EAAuC,UAASY,IAAT,EAAe;AACpDf,YAAAA,IAAI,CAACP,OAAL,CAAa,cAAb,CAAA,CAAA;;AACA,YAAIsB,IAAAA,IAAI,CAACC,SAAL,IAAkBD,IAAI,CAACC,SAAL,KAAmB,CAAzC,EAA4C;AAC1C,cAAA,MAAMC,WAAW,GAAGjB,IAAI,CAACkB,OAAL,CAAa5B,QAAb,CAAsB6B,GAAtB,CAA0B,SAA1B,CAAqCC,CAAAA,MAArC,KAAgD,CAApE,CAAA;AAEAV,cAAAA,QAAQ,CAACW,MAAT,CACE,IAAIC,QAAJ,CAAa;AACXC,gBAAAA,GAAG,EAAE;AACHC,kBAAAA,YAAY,EAAE;AACZC,oBAAAA,YAAY,EAAEjB,IAAQ,CAACkB,8BAAT,CAAwCX,IAAI,CAACC,SAA7C,EAAwDC,WAAxD,CAAA;AADF,mBAAA;AADX,iBAAA;AADM,eAAb,CADF,CAAA,CAAA;AASD,aAZD,MAYO;AACL,cAAM/B,MAAAA,cAAc,GAAG,CAAC,CAACc,IAAI,CAACmB,GAAL,CAAS,gBAAT,CAAzB,CAAA;AAEA,cAAO5C,OAAAA,MAAM,CACV0B,MADI,CACG;AACN0B,gBAAAA,UAAU,EAAEZ,IAAI,CAACY,UADX;AAENC,gBAAAA,aAAa,EAAEb,IAAI,CAACa,aAFd;AAGN1C,gBAAAA,cAAc,EAAEA,cAAAA;AAHV,eADH,EAMJgB,IANI,CAMCQ,QAAQ,CAACmB,OANV,CAAP,CAAA;AAOD,aAAA;AACF,WAzBD,CAAA,CAAA;AA0BA,UAAOnB,OAAAA,QAAQ,CAACoB,OAAhB,CAAA;AACD,SAjDM,CAAP,CAAA;AAkDD,OAjEM,CAAP,CAAA;AAkED,KAAA;AAlFI,GAF4B;AAuFnCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,IADN;AAEJC,IAAAA,cAAc,EAAE,KAFZ;AAGJC,IAAAA,KAAK,EAAE7D,cAAC,CAAC8D,OAAF,CAAUC,GAAV,EAAe,YAAf,EAA6B,OAA7B,CAHH;AAIJrD,IAAAA,SAAS,EAAE,iBAJP;AAKJsD,IAAAA,cAAc,EAAE,IALZ;AAMJ7C,IAAAA,IAAI,EAAEnB,cAAC,CAAC8D,OAAF,CAAUC,GAAV,EAAe,kBAAf,EAAmC,OAAnC,CANF;AAOJE,IAAAA,WAAW,EAAE,YAAW;AACtB,MAAA,OAAO,CAAC9B,IAAQ,CAAC+B,cAAT,EAAR,CAAA;AACD,KATG;AAUJC,IAAAA,WAAW,EAAE;AACXC,MAAAA,OAAO,EAAE,kBADE;AAEXC,MAAAA,KAAK,EAAE,iBAAA;AAFI,KAVT;AAeJC,IAAAA,YAAY,EAAE,YAAW;AACvB,MAAMC,MAAAA,MAAM,GAAG,EAAf,CAAA;;AAEA,MAAA,IAAI,CAACpC,IAAQ,CAAC+B,cAAT,EAAL,EAAgC;AAC9B,QAAIM,IAAAA,eAAe,GAAG,8BAAtB,CAAA;;AAEA,QAAA,IAAI,IAAK3B,CAAAA,OAAL,CAAa5B,QAAb,CAAsB6B,GAAtB,CAA0B,SAA1B,CAAqCC,CAAAA,MAArC,KAAgD,CAApD,EAAuD;AACrDyB,UAAAA,eAAe,GAAG,wCAAlB,CAAA;AACD,SAAA;;AACDD,QAAAA,MAAM,CAACpE,IAAP,CACEsE,QAAQ,CAACC,IAAT,CACE;AAAEA,UAAAA,IAAI,EAAE,IAAIC,oBAAJ,CAAyB;AAAEC,YAAAA,OAAO,EAAEb,GAAG,CAACS,eAAD,EAAkB,OAAlB,CAAA;AAAd,WAAzB,CAAA;AAAR,SADF,EAEE;AAAEK,UAAAA,QAAQ,EAAE,yBAAA;AAAZ,SAFF,CADF,CAAA,CAAA;AAMD,OAZD,MAYO;AACLN,QAAAA,MAAM,CAACpE,IAAP,CACEsE,QAAQ,CAACC,IAAT,CAAc;AACZA,UAAAA,IAAI,EAAEA,IAAI,CAACjE,MAAL,CAAY;AAChBqE,YAAAA,QAAQ,EAAA,YAAA,CAAA,QAAA,CAAA;AAAA,cAAA,UAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA;AAAA,cAAA,MAAA,EAAA,UAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA;AAAA,gBAAA,IAAA,MAAA,GAAA,MAAA,IAAA,IAAA,GAAA,MAAA,GAAA,SAAA,CAAA,WAAA,IAAA,EAAA;AAAA,oBAAA,MAAA,GAAA,SAAA,CAAA,KAAA,CAAA,aAAA;AAAA,oBAAA,MAAA,GAAA,SAAA,CAAA,gBAAA;AAAA,oBAAA,cAAA,GAAA,SAAA,CAAA,cAAA,IAAA,UAAA,MAAA,EAAA,YAAA,EAAA;AAAA,kBAAA,IAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,MAAA,EAAA,YAAA,CAAA,EAAA;AAAA,oBAAA,OAAA,MAAA,CAAA,YAAA,CAAA,CAAA;AAAA,mBAAA;;AAAA,kBAAA,OAAA,SAAA,CAAA;AAAA,iBAAA,CAAA;;AAAA,gBAAA,OAAA,oCAAA,GAAA,MAAA,CAAA,CAAA,cAAA,CAAA,OAAA,EAAA,MAAA,CAAA,IAAA,MAAA,IAAA,cAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,MAAA,EAAA,IAAA,CAAA,MAAA,EAAA;AAAA,kBAAA,MAAA,EAAA,MAAA;AAAA,kBAAA,MAAA,EAAA;AAAA,oBAAA,QAAA,EAAA,OAAA;AAAA,oBAAA,MAAA,EAAA,yBAAA;AAAA,mBAAA;AAAA,kBAAA,MAAA,EAAA,IAAA;AAAA,kBAAA,KAAA,EAAA;AAAA,oBAAA,OAAA,EAAA;AAAA,sBAAA,MAAA,EAAA,CAAA;AAAA,sBAAA,QAAA,EAAA,EAAA;AAAA,qBAAA;AAAA,oBAAA,KAAA,EAAA;AAAA,sBAAA,MAAA,EAAA,CAAA;AAAA,sBAAA,QAAA,EAAA,EAAA;AAAA,qBAAA;AAAA,mBAAA;AAAA,iBAAA,CAAA,CAAA,GAAA,SAAA,GAAA,MAAA,CAAA,CAAA,cAAA,CAAA,OAAA,EAAA,MAAA,CAAA,IAAA,MAAA,IAAA,cAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,MAAA,EAAA,IAAA,CAAA,MAAA,EAAA;AAAA,kBAAA,MAAA,EAAA,MAAA;AAAA,kBAAA,MAAA,EAAA;AAAA,oBAAA,QAAA,EAAA,OAAA;AAAA,oBAAA,MAAA,EAAA,kCAAA;AAAA,mBAAA;AAAA,kBAAA,MAAA,EAAA,IAAA;AAAA,kBAAA,KAAA,EAAA;AAAA,oBAAA,OAAA,EAAA;AAAA,sBAAA,MAAA,EAAA,CAAA;AAAA,sBAAA,QAAA,EAAA,EAAA;AAAA,qBAAA;AAAA,oBAAA,KAAA,EAAA;AAAA,sBAAA,MAAA,EAAA,CAAA;AAAA,sBAAA,QAAA,EAAA,GAAA;AAAA,qBAAA;AAAA,mBAAA;AAAA,iBAAA,CAAA,CAAA,GAAA,8EAAA,CAAA;AAAA,eAAA;AAAA,cAAA,SAAA,EAAA,IAAA;AAAA,aAAA,CAAA;AADQ,WAAZ,CAAA;AADM,SAAd,CADF,CAAA,CAAA;AAcD,OAAA;;AAED,MAAI,IAAA,IAAA,CAAKjC,OAAL,CAAa5B,QAAb,CAAsB6B,GAAtB,CAA0B,qBAA1B,CAAJ,EAAsD;AACpDyB,QAAAA,MAAM,CAACpE,IAAP,CACEsE,QAAQ,CAACM,KAAT,CAAe;AACbC,UAAAA,KAAK,EAAE,KADM;AAEb,UAAA,WAAA,EAAa,IAFA;AAGbC,UAAAA,WAAW,EAAE,IAAA,CAAKpC,OAAL,CAAa5B,QAAb,CAAsB6B,GAAtB,CAA0B,qBAA1B,CAHA;AAIbpC,UAAAA,SAAS,EAAE,cAJE;AAKbwE,UAAAA,IAAI,EAAE,gBALO;AAMbC,UAAAA,IAAI,EAAE,UAAA;AANO,SAAf,CADF,CAAA,CAAA;AAUD,OAAA;;AAED,MAAA,OAAOZ,MAAP,CAAA;AACD,KA7DG;AA+DJa,IAAAA,UAAU,EAAE,YAAW;AACrBpF,MAAAA,cAAC,CAACuC,KAAF,CAAQ,MAAM;AACZ,QAAA,IAAIJ,IAAQ,CAAC+B,cAAT,EAAJ,EAA+B;AAC7B,UAAKmB,IAAAA,CAAAA,KAAL,CAAWlE,IAAX,EAAA,CAAA;AACD,SAFD,MAEO;AACL,UAAA,IAAA,CAAKmE,CAAL,CAAO,yBAAP,CAAkCC,CAAAA,QAAlC,CAA2C,MAA3C,CAAA,CAAA;AACD,SAAA;AACF,OAND,CAAA,CAAA;AAOD,KAvEG;AAyEJC,IAAAA,gBAAgB,EAAE,YAAW;AAC3B,MAAA,IAAA,CAAKF,CAAL,CAAO,uBAAP,CAAgCG,CAAAA,WAAhC,CAA4C,MAA5C,CAAA,CAAA;AACA,MAAA,IAAA,CAAKH,CAAL,CAAO,oBAAP,CAAA,CAA6BI,IAA7B,EAAA,CAAA;AACD,KA5EG;AA8EJC,IAAAA,eAAe,EAAE,YAAW;AAC1B,MAAA,IAAA,CAAKL,CAAL,CAAO,uBAAP,CAAgCC,CAAAA,QAAhC,CAAyC,MAAzC,CAAA,CAAA;AACA,MAAA,IAAA,CAAKD,CAAL,CAAO,oBAAP,CAAA,CAA6BM,IAA7B,EAAA,CAAA;AACD,KAAA;AAjFG,GAvF6B;AA2KnCC,EAAAA,IAAI,EAAE,YAAW;AAEf;AACA;AACA;AACD,GAhLkC;AAkLnCC,EAAAA,MAAM,EAAEC,SAAAA;AAlL2B,CAAtB,CAAf;;;;"}
{"version":3,"file":"MfaVerifyController.js","sources":["../../../../../src/v1/controllers/MfaVerifyController.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint complexity: [2, 21] max-statements: [2, 25] max-params: 0 */\nimport { loc, internal } from 'okta';\nimport BaseLoginController from 'v1/util/BaseLoginController';\nimport EmailMagicLinkForm from 'v1/views/factor-verify/EmailMagicLinkForm';\nimport InlineTOTPForm from 'v1/views/mfa-verify/InlineTOTPForm';\nimport PassCodeForm from 'v1/views/mfa-verify/PassCodeForm';\nimport PasswordForm from 'v1/views/mfa-verify/PasswordForm';\nimport PushForm from 'v1/views/mfa-verify/PushForm';\nimport SecurityQuestionForm from 'v1/views/mfa-verify/SecurityQuestionForm';\nimport SendEmailAndVerifyCodeForm from 'v1/views/mfa-verify/SendEmailAndVerifyCodeForm';\nimport TOTPForm from 'v1/views/mfa-verify/TOTPForm';\nimport YubikeyForm from 'v1/views/mfa-verify/YubikeyForm';\nimport FooterMFA from 'v1/views/shared/FooterMFA';\nlet { CheckBox } = internal.views.forms.inputs;\nexport default BaseLoginController.extend({\n  className: 'mfa-verify',\n\n  initialize: function(options) {\n    const factorType = options.factorType;\n    let View;\n\n    switch (factorType) {\n    case 'question':\n      View = SecurityQuestionForm;\n      break;\n    case 'email':\n      if (this.options.appState.get('isIdxStateToken')) {\n        View = EmailMagicLinkForm;\n      } else {\n        View = SendEmailAndVerifyCodeForm;\n      }\n      break;\n    case 'sms':\n    case 'call':\n      View = PassCodeForm;\n      break;\n    case 'token':\n    case 'token:software:totp':\n    case 'token:hotp':\n      View = TOTPForm;\n      break;\n    case 'token:hardware':\n      View = YubikeyForm;\n      break;\n    case 'push':\n      View = PushForm;\n      break;\n    case 'password':\n      View = PasswordForm;\n      break;\n    default:\n      throw new Error('Unrecognized factor type');\n    }\n\n    this.model = this.findModel(factorType, options);\n    if (!this.model) {\n      // TODO: recover from this more gracefully - probably to redirect\n      // to default factor\n      throw new Error('Unrecognized factor/provider');\n    }\n\n    this.addListeners();\n    this.add(new View(this.toJSON()));\n\n    // If Okta Verify Push and Okta Verify totp are both enabled,\n    // then we show Push first, and totp is the \"backup\" factor,\n    // which is rendered in an additional InlineTOTPForm\n    if (factorType === 'push' && this.model.get('isOktaFactor')) {\n      if (this.model.get('backupFactor')) {\n        this.inlineTotpForm = this.add(InlineTOTPForm, {\n          options: { model: this.model.get('backupFactor') },\n        }).last();\n      }\n\n      if (this.settings.get('features.autoPush')) {\n        this.autoPushCheckBox = this.add(CheckBox, {\n          options: {\n            model: this.model,\n            name: 'autoPush',\n            placeholder: loc('autoPush', 'login'),\n            label: false,\n            'label-top': false,\n            className: 'margin-btm-0',\n          },\n        }).last();\n      }\n\n      // Remember Device checkbox resides outside of the Push and TOTP forms.\n      if (this.options.appState.get('allowRememberDevice')) {\n        this.rememberDeviceCheckbox = this.add(CheckBox, {\n          options: {\n            model: this.model,\n            name: 'rememberDevice',\n            placeholder: this.options.appState.get('rememberDeviceLabel'),\n            label: false,\n            'label-top': true,\n            className: 'margin-btm-0',\n          },\n        }).last();\n      }\n      // Set rememberDevice on the backup factor (totp) if available\n      if (this.model.get('backupFactor')) {\n        this.listenTo(this.model, 'change:rememberDevice', function(model, rememberDevice) {\n          model.get('backupFactor').set('rememberDevice', rememberDevice);\n        });\n      }\n    }\n\n    this.listenTo(this.options.appState, 'change:isWaitingForNumberChallenge', function(\n      state,\n      isWaitingForNumberChallenge\n    ) {\n      if (isWaitingForNumberChallenge || this.options.appState.get('lastAuthResponse').status === 'SUCCESS') {\n        this.autoPushCheckBox && this.autoPushCheckBox.$el.hide();\n        this.rememberDeviceCheckbox && this.rememberDeviceCheckbox.$el.hide();\n        this.inlineTotpForm && this.inlineTotpForm.$el.hide();\n      } else {\n        this.autoPushCheckBox && this.autoPushCheckBox.$el.show();\n        this.rememberDeviceCheckbox && this.rememberDeviceCheckbox.$el.show();\n        this.inlineTotpForm && this.inlineTotpForm.$el.show();\n      }\n    });\n\n    this.add(new FooterMFA(this.toJSON()));\n  },\n\n  findModel: function(factorType, options) {\n    const factors = options.appState.get('factors');\n    const provider = options.provider;\n    const factorIndex = options.factorIndex;\n\n    if (!provider) {\n      return factors.findWhere({ factorType: factorType, isFactorTypeVerification: true });\n    } else if (factors.hasMultipleFactorsOfSameType(factorType) && factorIndex) {\n      return factors.getFactorByTypeAndIndex(factorType, factorIndex);\n    } else {\n      return factors.findWhere({ provider: provider, factorType: factorType });\n    }\n  },\n\n  trapAuthResponse: function() {\n    if (\n      (this.options.appState.get('isMfaRequired') && this.options.appState.get('trapMfaRequiredResponse')) ||\n      this.options.appState.get('isMfaChallenge')\n    ) {\n      this.options.appState.set('trapMfaRequiredResponse', false);\n      return true;\n    }\n    return false;\n  },\n\n  back: function() {\n    // Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n});\n"],"names":["CheckBox","internal","views","forms","inputs","BaseLoginController","extend","className","initialize","options","factorType","View","SecurityQuestionForm","appState","get","EmailMagicLinkForm","SendEmailAndVerifyCodeForm","PassCodeForm","TOTPForm","YubikeyForm","PushForm","PasswordForm","Error","model","findModel","addListeners","add","toJSON","inlineTotpForm","InlineTOTPForm","last","settings","autoPushCheckBox","name","placeholder","loc","label","rememberDeviceCheckbox","listenTo","rememberDevice","set","state","isWaitingForNumberChallenge","status","$el","hide","show","FooterMFA","factors","provider","factorIndex","findWhere","isFactorTypeVerification","hasMultipleFactorsOfSameType","getFactorByTypeAndIndex","trapAuthResponse","back"],"mappings":"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"}
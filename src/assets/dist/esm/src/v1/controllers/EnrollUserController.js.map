{"version":3,"file":"EnrollUserController.js","sources":["../../../../../src/v1/controllers/EnrollUserController.js"],"sourcesContent":["/*!\n * Copyright (c) 2019, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport EnrollUser from 'v1/models/EnrollUser';\nimport BaseLoginController from 'v1/util/BaseLoginController';\nimport EnrollUserForm from 'v1/views/enrollUser/EnrollUserForm';\nimport FooterWithBackLink from 'v1/views/shared/FooterWithBackLink';\nexport default BaseLoginController.extend({\n  className: 'enroll-user',\n  initialize: function(options) {\n    this.options = options || {};\n    // create model\n    this.model = new EnrollUser(this.options);\n  },\n  fetchInitialData: function() {\n    // If user is unauthenticated and starts enroll flow make a post call to transition state to PROFILE_REQUIRED\n    if (this.options.appState.get('isUnauthenticated')) {\n      return this.model.getEnrollFormData();\n    } else {\n      return BaseLoginController.prototype.fetchInitialData.call();\n    }\n  },\n  trapAuthResponse: function() {\n    if (this.options.appState.get('isProfileRequired')) {\n      return true;\n    }\n  },\n  postRender: function() {\n    const form = new EnrollUserForm(this.toJSON());\n\n    this.add(form);\n    this.add(new FooterWithBackLink(this.toJSON()));\n    this.addListeners();\n  },\n});\n"],"names":["BaseLoginController","extend","className","initialize","options","model","EnrollUser","fetchInitialData","appState","get","getEnrollFormData","prototype","call","trapAuthResponse","postRender","form","EnrollUserForm","toJSON","add","FooterWithBackLink","addListeners"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,2BAAeA,mBAAmB,CAACC,MAApB,CAA2B;AACxCC,EAAAA,SAAS,EAAE,aAD6B;AAExCC,EAAAA,UAAU,EAAE,UAASC,OAAT,EAAkB;AAC5B,IAAA,IAAA,CAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B,CAD4B;;AAG5B,IAAA,IAAA,CAAKC,KAAL,GAAa,IAAIC,UAAJ,CAAe,IAAA,CAAKF,OAApB,CAAb,CAAA;AACD,GANuC;AAOxCG,EAAAA,gBAAgB,EAAE,YAAW;AAC3B;AACA,IAAI,IAAA,IAAA,CAAKH,OAAL,CAAaI,QAAb,CAAsBC,GAAtB,CAA0B,mBAA1B,CAAJ,EAAoD;AAClD,MAAA,OAAO,IAAKJ,CAAAA,KAAL,CAAWK,iBAAX,EAAP,CAAA;AACD,KAFD,MAEO;AACL,MAAA,OAAOV,mBAAmB,CAACW,SAApB,CAA8BJ,gBAA9B,CAA+CK,IAA/C,EAAP,CAAA;AACD,KAAA;AACF,GAduC;AAexCC,EAAAA,gBAAgB,EAAE,YAAW;AAC3B,IAAI,IAAA,IAAA,CAAKT,OAAL,CAAaI,QAAb,CAAsBC,GAAtB,CAA0B,mBAA1B,CAAJ,EAAoD;AAClD,MAAA,OAAO,IAAP,CAAA;AACD,KAAA;AACF,GAnBuC;AAoBxCK,EAAAA,UAAU,EAAE,YAAW;AACrB,IAAMC,MAAAA,IAAI,GAAG,IAAIC,cAAJ,CAAmB,IAAKC,CAAAA,MAAL,EAAnB,CAAb,CAAA;AAEA,IAAKC,IAAAA,CAAAA,GAAL,CAASH,IAAT,CAAA,CAAA;AACA,IAAKG,IAAAA,CAAAA,GAAL,CAAS,IAAIC,kBAAJ,CAAuB,IAAKF,CAAAA,MAAL,EAAvB,CAAT,CAAA,CAAA;AACA,IAAA,IAAA,CAAKG,YAAL,EAAA,CAAA;AACD,GAAA;AA1BuC,CAA3B,CAAf;;;;"}
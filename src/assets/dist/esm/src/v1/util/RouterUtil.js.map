{"version":3,"file":"RouterUtil.js","sources":["../../../../../src/v1/util/RouterUtil.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint complexity: [2, 47], max-statements: [2, 63] */\n\nimport { _, loc } from 'okta';\nimport hbs from 'handlebars-inline-precompile';\nimport BrowserFeatures from 'util/BrowserFeatures';\nimport Enums from 'util/Enums';\nimport ErrorCodes from 'util/ErrorCodes';\nimport { ConfigError, UnsupportedBrowserError } from 'util/Errors';\nimport OAuth2Util from 'util/OAuth2Util';\nimport Util from 'util/Util';\nconst fn = {};\nconst verifyUrlTpl = hbs('signin/verify/{{provider}}/{{factorType}}');\nconst verifyUrlMultipleTpl = hbs('signin/verify/{{provider}}/{{factorType}}/{{factorIndex}}');\nconst verifyUrlNoProviderTpl = hbs('signin/verify/{{factorType}}');\nconst enrollFactorUrlTpl = hbs('signin/enroll/{{provider}}/{{factorType}}');\nconst activateFactorUrlTpl = hbs('signin/enroll-activate/{{provider}}/{{factorType}}{{#if step}}/{{step}}{{/if}}');\nconst recoveryUrlTpl = hbs('signin/recovery/{{recoveryToken}}');\nconst refreshUrlTpl = hbs('signin/refresh-auth-state{{#if token}}/{{token}}{{/if}}');\nconst sessionCookieRedirectTpl = hbs(\n  // eslint-disable-next-line max-len\n  '{{baseUrl}}/login/sessionCookieRedirect?checkAccountSetupComplete=true&token={{{token}}}&redirectUrl={{{redirectUrl}}}'\n);\nconst deviceActivationStatuses = ['DEVICE_ACTIVATED', 'DEVICE_NOT_ACTIVATED_CONSENT_DENIED', 'DEVICE_NOT_ACTIVATED'];\n\nfn.isHostBackgroundChromeTab = function() {\n  // Checks if the SIW is loaded in a chrome webview and\n  // it is in an app that is in background.\n  if (navigator.userAgent.match(/Android/) && navigator.userAgent.match(/Chrome/) && document.hidden) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nfn.isDocumentVisible = function() {\n  return document.visibilityState === 'visible';\n};\n\nfn.createVerifyUrl = function(provider, factorType, factorIndex) {\n  if (provider && factorIndex) {\n    return verifyUrlMultipleTpl({\n      provider: encodeURIComponent(provider.toLowerCase()),\n      factorType: encodeURIComponent(factorType),\n      factorIndex: encodeURIComponent(factorIndex),\n    });\n  } else if (provider) {\n    return verifyUrlTpl({\n      provider: encodeURIComponent(provider.toLowerCase()),\n      factorType: encodeURIComponent(factorType),\n    });\n  } else {\n    return verifyUrlNoProviderTpl({\n      factorType: encodeURIComponent(factorType),\n    });\n  }\n};\n\nfn.createEnrollFactorUrl = function(provider, factorType) {\n  return enrollFactorUrlTpl({\n    provider: encodeURIComponent(provider.toLowerCase()),\n    factorType: encodeURIComponent(factorType),\n  });\n};\n\nfn.createActivateFactorUrl = function(provider, factorType, step) {\n  return activateFactorUrlTpl({\n    provider: encodeURIComponent(provider.toLowerCase()),\n    factorType: encodeURIComponent(factorType),\n    step: step ? encodeURIComponent(step) : false,\n  });\n};\n\nfn.createRecoveryUrl = function(recoveryToken) {\n  return recoveryUrlTpl({\n    recoveryToken: encodeURIComponent(recoveryToken),\n  });\n};\n\nfn.createRefreshUrl = function(stateToken) {\n  const token = stateToken ? encodeURIComponent(stateToken) : null;\n\n  return refreshUrlTpl({ token: token });\n};\n\nfn.routeAfterAuthStatusChangeError = function(router, err) {\n  if (!err) {\n    return;\n  }\n\n  // Global error handling for CORS enabled errors\n  if (err.xhr && BrowserFeatures.corsIsNotEnabled(err.xhr)) {\n    router.settings.callGlobalError(new UnsupportedBrowserError(loc('error.enabled.cors')));\n    return;\n  }\n\n  // Token has expired - no longer valid. Navigate back to primary auth.\n  if (err.errorCode === ErrorCodes.INVALID_TOKEN_EXCEPTION) {\n    router.appState.set('flashError', err);\n    router.controller.state.set('navigateDir', Enums.DIRECTION_BACK);\n    if (router.settings.get('features.mfaOnlyFlow')) {\n      router.navigate('signin/error', { trigger: true });\n    } else {\n      router.navigate('', { trigger: true });\n    }\n    return;\n  }\n\n  Util.triggerAfterError(router.controller, err);\n};\n\nfn.routeAfterAuthStatusChange = function(router, res) {\n  // Other errors are handled by the function making the authClient request\n  if (!res || !res.status) {\n    router.appState.clearLastAuthResponse();\n    return;\n  }\n\n  router.appState.setAuthResponse(res);\n\n  if (router.controller && router.controller.trapAuthResponse(res)) {\n    return;\n  }\n\n  fn.handleResponseStatus(router, res);\n};\n\nfn.handleResponseStatus = function(router, res) {\n  switch (res.status) {\n  case 'SUCCESS': {\n    handleSuccessResponseStatus(router, res);\n    return;\n  }\n  case 'ADMIN_CONSENT_REQUIRED':\n    router.navigate('signin/admin-consent', { trigger: true });\n    return;\n  case 'CONSENT_REQUIRED':\n    router.navigate('signin/consent', { trigger: true });\n    return;\n  case 'DEVICE_ACTIVATE':\n    router.navigate('signin/device-activate', { trigger: true });\n    return;\n    // We want the same view for FACTOR_REQUIRED & FACTOR_CHALLENGE\n    // In the new idx pipeline FACTOR_CHALLENGE API response does not contain a prev link\n  case 'FACTOR_REQUIRED':\n  case 'FACTOR_CHALLENGE':\n  case 'MFA_REQUIRED': {\n    const lastFailedChallengeFactorData = router.appState.get('lastFailedChallengeFactorData');\n    // When the widget is bootstrapped with an error in MFA_CHALLENGE state, we pass the\n    // lastFailedChallengeFactorData to MFA_REQUIRED, in order to show the error message\n    // on the correct factor view\n\n    if (lastFailedChallengeFactorData && lastFailedChallengeFactorData.factor) {\n      router.appState.get('factors').lastUsedFactor = lastFailedChallengeFactorData.factor;\n    }\n    const factor = router.appState.get('factors').getDefaultFactor();\n    const url = fn.createVerifyUrl(factor.get('provider'), factor.get('factorType'));\n\n    router.navigate(url, { trigger: true });\n    router.appState.clearLastFailedChallengeFactorData();\n    return;\n  }\n  case 'POLL': {\n    const pollUrl = 'signin/poll';\n\n    router.navigate(pollUrl, { trigger: true });\n    return;\n  }\n  case 'MFA_CHALLENGE':\n    // Since we normally trap MFA_CHALLENGE, this will only get called on a\n    // page refresh or when an error is returned on verification with an IdP.\n    // We need to return to MFA_REQUIRED to initialize the\n    // page correctly (i.e. factors dropdown, etc)\n    if (router.appState.get('isFactorResultFailed')) {\n      router.appState.setLastFailedChallengeFactorData();\n    }\n    router.appState.get('transaction').prev().then(function(trans) {\n      router.appState.set('transaction', trans);\n    });\n    // TODO: catch/handle error here?\n    return;\n  case 'MFA_ENROLL':\n  case 'FACTOR_ENROLL':\n    router.navigate('signin/enroll', { trigger: true });\n    return;\n  case 'MFA_ENROLL_ACTIVATE':\n  case 'FACTOR_ENROLL_ACTIVATE': {\n    const activateUrl = fn.createActivateFactorUrl(\n      router.appState.get('activatedFactorProvider'),\n      router.appState.get('activatedFactorType')\n    );\n\n    router.navigate(activateUrl, { trigger: true });\n    return;\n  }\n  case 'PASSWORD_WARN':\n  case 'PASSWORD_EXPIRED':\n    if (router.settings.get('features.customExpiredPassword') && !router.appState.get('isPwdManagedByOkta')) {\n      router.navigate('signin/custom-password-expired', { trigger: true });\n    } else {\n      router.navigate('signin/password-expired', { trigger: true });\n    }\n    return;\n  case 'RECOVERY_CHALLENGE': {\n    const fromEmail = res.factorType.toLowerCase() === Enums.RECOVERY_FACTOR_TYPE_EMAIL.toLowerCase();\n    const isForgotPassword = res.recoveryType === Enums.RECOVERY_TYPE_PASSWORD;\n    const isUnlock = res.recoveryType === Enums.RECOVERY_TYPE_UNLOCK;\n    // Will use this workaround (lowercasing response) until OKTA-69083 is resolved\n\n    if (isForgotPassword && fromEmail) {\n      router.navigate('signin/recovery-emailed', { trigger: true });\n    } else if (isUnlock && fromEmail) {\n      router.navigate('signin/unlock-emailed', { trigger: true });\n    } else {\n      router.navigate('signin/recovery-challenge', { trigger: true });\n    }\n    return;\n  }\n  case 'RECOVERY':\n    router.navigate('signin/recovery-question', { trigger: true });\n    return;\n  case 'PASSWORD_RESET':\n    router.navigate('signin/password-reset', { trigger: true });\n    return;\n  case 'LOCKED_OUT': {\n    if (router.settings.get('features.selfServiceUnlock')) {\n      router.navigate('signin/unlock', { trigger: true });\n    } else {\n      const errorMessage = loc('error.auth.lockedOut', 'login');\n      const resError = {\n        responseJSON: {\n          errorCauses: [],\n          errorSummary: errorMessage,\n          errorCode: 'E0000119',\n        },\n      };\n      const err = {\n        name: 'AuthApiError',\n        message: errorMessage,\n        xhr: resError\n      };\n      router.controller.model.appState.trigger('removeLoading');\n      router.controller.model.trigger('error', router.controller.model, resError);\n      Util.triggerAfterError(router.controller, err);\n    }\n    return;\n  }\n  case 'PROFILE_REQUIRED':\n    router.navigate('signin/enroll-user', { trigger: true });\n    return;\n  case 'UNAUTHENTICATED':\n    // Either we have factors and we are in passwordlessAuth mode\n    if (router.appState.get('promptForFactorInUnauthenticated')) {\n      const defaultFactor = router.appState.get('factors').getDefaultFactor();\n      const factorURL = fn.createVerifyUrl(defaultFactor.get('provider'), defaultFactor.get('factorType'));\n\n      router.navigate(factorURL, { trigger: true });\n      return;\n    }\n    // Or we're in device flow and we need to force idp discovery check\n    if (router.appState.get('usingDeviceFlow')) {\n      router.navigate('signin/idp-discovery-check', { trigger: true });\n      return;\n    }\n    // Or we don't have anything and we need to show the login page\n    router.navigate('', { trigger: true });\n    return;\n  default:\n    throw new Error('Unknown status: ' + res.status);\n  }\n};\n\nfunction handleSuccessResponseStatus(router, res) {\n  if (res.recoveryType === Enums.RECOVERY_TYPE_UNLOCK) {\n    router.navigate('signin/account-unlocked', { trigger: true });\n    return;\n  }\n\n  if (_.contains(deviceActivationStatuses, res._embedded?.deviceActivationStatus)) {\n    router.navigate('signin/device-activate-complete', { trigger: true });\n    return;\n  }\n\n  // If the desired end result object needs to have idToken (and not sessionToken),\n  // get the id token from session token before calling the global success function.\n  if (router.settings.get('oauth2Enabled')) {\n    OAuth2Util.getTokens(router.settings, { sessionToken: res.sessionToken }, router.controller);\n    return;\n  }\n\n  const successData = {\n    user: res._embedded.user,\n    type: res.type || Enums.SESSION_SSO,\n  };\n\n  if (res.relayState) {\n    successData.relayState = res.relayState;\n  }\n\n  const redirectFn = router.settings.get('redirectUtilFn');\n  const nextUrl = res?._links?.original?.href || res?._links?.next?.href;\n\n  if (res.type === Enums.SESSION_STEP_UP) {\n    const targetUrl = res?._links?.next?.href;\n\n    successData.stepUp = {\n      url: targetUrl,\n      finish: function() {\n        redirectFn(targetUrl);\n      },\n    };\n  } else {\n    if (nextUrl) {\n      successData.next = function() {\n        redirectFn(nextUrl);\n      };\n    } else {\n      // Add the type for now until the API returns it.\n      successData.type = Enums.SESSION_SSO;\n    }\n\n    if (res.sessionToken) {\n      successData.session = {\n        token: res.sessionToken,\n        setCookieAndRedirect: function(redirectUri) {\n          if (redirectUri) {\n            Util.debugMessage(`\n              Passing a \"redirectUri\" to \"setCookieAndRedirect\" is strongly discouraged.\n              It is recommended to set a \"redirectUri\" option in the config object passed to the widget constructor.\n            `);\n          }\n\n          redirectUri = redirectUri || router.settings.get('redirectUri');\n          if (!redirectUri) {\n            throw new ConfigError('\"redirectUri\" is required');\n          }\n\n          redirectFn(\n            sessionCookieRedirectTpl({\n              baseUrl: router.settings.get('baseUrl'),\n              token: encodeURIComponent(res.sessionToken),\n              redirectUrl: encodeURIComponent(redirectUri),\n            })\n          );\n        },\n      };\n    }\n  }\n\n  // Check if we need to wait for redirect based on host.\n  if (fn.isHostBackgroundChromeTab()) {\n    document.addEventListener('visibilitychange', function checkVisibilityAndCallSuccess() {\n      if (fn.isDocumentVisible()) {\n        document.removeEventListener('visibilitychange', checkVisibilityAndCallSuccess);\n        router.settings.callGlobalSuccess(Enums.SUCCESS, successData);\n      }\n    });\n  } else {\n    router.settings.callGlobalSuccess(Enums.SUCCESS, successData);\n  }\n}\n\nexport default fn;\n"],"names":["fn","verifyUrlTpl","verifyUrlMultipleTpl","verifyUrlNoProviderTpl","enrollFactorUrlTpl","activateFactorUrlTpl","recoveryUrlTpl","refreshUrlTpl","sessionCookieRedirectTpl","deviceActivationStatuses","isHostBackgroundChromeTab","navigator","userAgent","match","document","hidden","isDocumentVisible","visibilityState","createVerifyUrl","provider","factorType","factorIndex","encodeURIComponent","toLowerCase","createEnrollFactorUrl","createActivateFactorUrl","step","createRecoveryUrl","recoveryToken","createRefreshUrl","stateToken","token","routeAfterAuthStatusChangeError","router","err","xhr","BrowserFeatures","corsIsNotEnabled","settings","callGlobalError","UnsupportedBrowserError","loc","errorCode","ErrorCodes","INVALID_TOKEN_EXCEPTION","appState","set","controller","state","Enums","DIRECTION_BACK","get","navigate","trigger","Util","triggerAfterError","routeAfterAuthStatusChange","res","status","clearLastAuthResponse","setAuthResponse","trapAuthResponse","handleResponseStatus","handleSuccessResponseStatus","lastFailedChallengeFactorData","factor","lastUsedFactor","getDefaultFactor","url","clearLastFailedChallengeFactorData","pollUrl","setLastFailedChallengeFactorData","prev","then","trans","activateUrl","fromEmail","RECOVERY_FACTOR_TYPE_EMAIL","isForgotPassword","recoveryType","RECOVERY_TYPE_PASSWORD","isUnlock","RECOVERY_TYPE_UNLOCK","errorMessage","resError","responseJSON","errorCauses","errorSummary","name","message","model","defaultFactor","factorURL","Error","_","contains","_embedded","deviceActivationStatus","OAuth2Util","getTokens","sessionToken","successData","user","type","SESSION_SSO","relayState","redirectFn","nextUrl","_links","original","href","next","SESSION_STEP_UP","targetUrl","stepUp","finish","session","setCookieAndRedirect","redirectUri","debugMessage","ConfigError","baseUrl","redirectUrl","addEventListener","checkVisibilityAndCallSuccess","removeEventListener","callGlobalSuccess","SUCCESS"],"mappings":"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"}
{"version":3,"file":"RegistrationFormFactory.js","sources":["../../../../../src/v1/util/RegistrationFormFactory.js"],"sourcesContent":["/* eslint max-statements: [2, 23],  max-depth: [2, 3], complexity: [2, 13] */\n/*!\n * Copyright (c) 2017, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { _, internal, $ } from 'okta';\nimport TextBox from 'v1/views/shared/TextBox';\nlet { SchemaFormFactory } = internal.views.forms.helpers;\n\nconst getParts = function(username) {\n  const usernameArr = username.split('');\n  const minPartsLength = 3;\n  const userNameParts = [];\n  const delimiters = [',', '.', '-', '_', '#', '@'];\n  let userNamePart = '';\n\n  _.each(usernameArr, function(part) {\n    if (delimiters.indexOf(part) === -1) {\n      userNamePart += part;\n    } else {\n      if (userNamePart.length >= minPartsLength) {\n        userNameParts.push(_.clone(userNamePart));\n      }\n      userNamePart = '';\n    }\n  });\n  if (userNamePart.length >= minPartsLength) {\n    userNameParts.push(_.clone(userNamePart));\n  }\n  return userNameParts.filter(Boolean);\n};\n\nconst passwordContainsFormField = function(formField, password) {\n  if (!formField) {\n    return false;\n  }\n  formField = formField.toLowerCase();\n  password = password.toLowerCase();\n  const formFieldArr = getParts(formField);\n\n  //check if each formField part contains password\n  for (var i = 0; i < formFieldArr.length; i++) {\n    const formFieldPart = formFieldArr[i];\n\n    if (password.indexOf(formFieldPart) !== -1) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst checkSubSchema = function(subSchema, value, model) {\n  const minLength = subSchema.get('minLength');\n  const maxLength = subSchema.get('maxLength');\n  const regex = subSchema.get('format');\n\n  if (_.isNumber(minLength)) {\n    if (value.length < minLength) {\n      return false;\n    }\n  }\n\n  if (_.isNumber(maxLength)) {\n    if (value.length > maxLength) {\n      return false;\n    }\n  }\n  const password = value;\n\n  if (_.isString(regex)) {\n    // call passwordContainsFormField if regex is userName, firstName, lastName\n    if (regex === '^[#/userName]' || regex === '^[#/firstName]' || regex === '^[#/lastName]') {\n      const fieldName = regex.split('^[#/')[1].split(']')[0];\n      let fieldValue = model.get(fieldName);\n\n      if (fieldName === 'userName') {\n        // with email as login enabled, we only have email populated\n        // Therefore we fallback and run validation with email attribute.\n        fieldValue = model.has('userName') ? model.get('userName') : model.get('email');\n      }\n      return !passwordContainsFormField(fieldValue, password);\n    } else {\n      if (!new RegExp(regex).test(value)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst checkSubSchemas = function(fieldName, model, subSchemas, showError) {\n  const value = model.get(fieldName);\n\n  if (!_.isString(value)) {\n    return;\n  }\n\n  subSchemas.each(function(subSchema, index) {\n    const ele = $('#subschemas-' + fieldName + ' .subschema-' + index);\n\n    //hide password complexity if no password\n    if (value) {\n      ele.children('p').removeClass('default-schema');\n    } else {\n      ele.children('p').addClass('default-schema');\n    }\n\n    // clear aria role and live-region for re-validation\n    ele.children('p')\n      .removeAttr('role')\n      .removeAttr('aria-live');\n\n    // reset errors\n    ele.removeClass('subschema-satisfied subschema-unsatisfied subschema-error');\n\n    // validate\n    if (checkSubSchema(subSchema, value, model)) {\n      // passed\n      ele.addClass('subschema-satisfied');\n      ele.find('p span').removeClass('error error-16-small');\n      ele.find('p span').addClass('confirm-16');\n    } else {\n      // failed\n      if (showError) {\n        ele.find('p span').removeClass('confirm-16');\n        ele.find('p span').addClass('error error-16-small');\n        ele.addClass('subschema-error subschema-unsatisfied');\n\n        ele.find('p')\n          // set role=\"alert\" so the password requirement is read by\n          // screen-readers\n          .attr('role', 'alert')\n          // set aria-live=\"polite\" so it will \"debounce\" and wait to read the\n          // message between keystrokes\n          .attr('aria-live', 'polite');\n      }\n    }\n  });\n};\n\nconst fnCreateInputOptions = function(schemaProperty) {\n  let inputOptions = SchemaFormFactory.createInputOptions(schemaProperty);\n\n  if (inputOptions.type === 'select') {\n    inputOptions = _.extend(inputOptions, {\n      label: schemaProperty.get('title'),\n    });\n  } else {\n    let placeholder = schemaProperty.get('title');\n\n    if (schemaProperty.get('required')) {\n      placeholder += ' *';\n    }\n    inputOptions = _.extend(inputOptions, {\n      label: false,\n      'label-top': true,\n      placeholder: placeholder,\n    });\n  }\n\n  const fieldName = schemaProperty.get('name');\n\n  switch (fieldName) {\n  case 'userName':\n    inputOptions.input = TextBox;\n    inputOptions.params = {\n      icon: 'person-16-gray',\n    };\n    break;\n  case 'password':\n    inputOptions.type = 'password';\n    inputOptions.input = TextBox;\n    inputOptions.params = {\n      icon: 'remote-lock-16',\n    };\n  }\n\n  const subSchemas = schemaProperty.get('subSchemas');\n\n  if (subSchemas) {\n    inputOptions.events = {\n      input: function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      focusout: function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:userName': function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:firstName': function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:lastName': function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:email': function() {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n    };\n  }\n\n  return inputOptions;\n};\n\nexport default {\n  createInputOptions: fnCreateInputOptions,\n  getUsernameParts: getParts,\n  passwordContainsFormField: passwordContainsFormField,\n};\n"],"names":["SchemaFormFactory","internal","views","forms","helpers","getParts","username","usernameArr","split","minPartsLength","userNameParts","delimiters","userNamePart","_","each","part","indexOf","length","push","clone","filter","Boolean","passwordContainsFormField","formField","password","toLowerCase","formFieldArr","i","formFieldPart","checkSubSchema","subSchema","value","model","minLength","get","maxLength","regex","isNumber","isString","fieldName","fieldValue","has","RegExp","test","checkSubSchemas","subSchemas","showError","index","ele","$","children","removeClass","addClass","removeAttr","find","attr","fnCreateInputOptions","schemaProperty","inputOptions","createInputOptions","type","extend","label","placeholder","input","TextBox","params","icon","events","focusout","getUsernameParts"],"mappings":"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"}
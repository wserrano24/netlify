{"version":3,"file":"TOTPForm.js","sources":["../../../../../../src/v1/views/mfa-verify/TOTPForm.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { _, Form, loc } from 'okta';\nimport TextBox from 'v1/views/shared/TextBox';\nexport default Form.extend({\n  className: 'mfa-verify-totp',\n  autoSave: true,\n  noCancelButton: true,\n  save: _.partial(loc, 'mfa.challenge.verify', 'login'),\n  scrollOnError: false,\n  layout: 'o-form-theme',\n  attributes: { 'data-se': 'factor-totp' },\n\n  initialize: function() {\n    const factorName = this.model.get('factorLabel');\n    const maskPasswordField = this.model.get('provider') === 'RSA' || this.model.get('provider') === 'DEL_OATH';\n\n    this.title = factorName;\n    if (this.model.get('isFactorTypeVerification')) {\n      this.subtitle = loc('mfa.challenge.totp.subtitle.multiple', 'login', [factorName]);\n    } else {\n      this.subtitle = loc('mfa.challenge.title', 'login', [factorName]);\n    }\n\n    this.addInput({\n      label: loc('mfa.challenge.enterCode.placeholder', 'login'),\n      'label-top': true,\n      className: 'o-form-fieldset o-form-label-top auth-passcode',\n      name: 'answer',\n      input: TextBox,\n      type: maskPasswordField ? 'password' : 'tel',\n    });\n\n    if (this.options.appState.get('allowRememberDevice')) {\n      this.addInput({\n        label: false,\n        'label-top': true,\n        placeholder: this.options.appState.get('rememberDeviceLabel'),\n        className: 'margin-btm-0',\n        name: 'rememberDevice',\n        type: 'checkbox',\n      });\n    }\n\n    if (this.model.get('provider') === 'RSA' || this.model.get('provider') === 'DEL_OATH') {\n      this.listenTo(this.model, 'error', (source, error) => {\n        if (error && error.status === 409) {\n          // 409 means we are in change pin, so we should clear out answer input\n          this.$('.auth-passcode input').val('');\n          this.$('.auth-passcode input').trigger('change');\n          this.$('.auth-passcode input').focus();\n        }\n      });\n    }\n  },\n});\n"],"names":["Form","extend","className","autoSave","noCancelButton","save","_","partial","loc","scrollOnError","layout","attributes","initialize","factorName","model","get","maskPasswordField","title","subtitle","addInput","label","name","input","TextBox","type","options","appState","placeholder","listenTo","source","error","status","$","val","trigger","focus"],"mappings":"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"}
{"version":3,"file":"InlineTOTPForm.js","sources":["../../../../../../src/v1/views/mfa-verify/InlineTOTPForm.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { loc, createButton, Form } from 'okta';\nimport TextBox from 'v1/views/shared/TextBox';\n\nfunction addInlineTotp(form) {\n  form.addDivider();\n  form.addInput({\n    label: loc('mfa.challenge.enterCode.placeholder', 'login'),\n    'label-top': true,\n    className: 'o-form-fieldset o-form-label-top inline-input auth-passcode',\n    name: 'answer',\n    input: TextBox,\n    type: 'tel',\n  });\n  form.add(\n    createButton({\n      attributes: { 'data-se': 'inline-totp-verify' },\n      className: 'button inline-totp-verify margin-top-30',\n      title: loc('mfa.challenge.verify', 'login'),\n      click: function() {\n        form.clearErrors();\n        if (!form.isValid()) {\n          return;\n        }\n        form.model.manageTransaction(function(transaction, setTransaction) {\n          // This is the case where we enter the TOTP code and verify while there is an\n          // active Push request (or polling) running. We need to invoke previous() on authClient\n          // and then call model.save(). If not, we would still be in MFA_CHALLENGE state and\n          // verify would result in a wrong request (push verify instead of a TOTP verify).\n          if (transaction.status === 'MFA_CHALLENGE' && transaction.prev) {\n            form.options.appState.set('trapMfaRequiredResponse', true);\n            return transaction.prev().then(function(trans) {\n              setTransaction(trans);\n              form.model.save();\n            });\n          } else {\n            // Push is not active and we enter the code to verify.\n            form.model.save();\n          }\n        });\n      },\n    })\n  );\n  form.at(1).focus();\n}\n\nexport default Form.extend({\n  autoSave: true,\n  noButtonBar: true,\n  scrollOnError: false,\n  layout: 'o-form-theme',\n\n  className: 'mfa-verify-totp-inline',\n\n  attributes: { 'data-se': 'factor-inline-totp' },\n\n  initialize: function() {\n    const form = this;\n\n    this.listenTo(this.model, 'error', function() {\n      this.clearErrors();\n    });\n    this.add(\n      createButton({\n        className: 'link',\n        attributes: { 'data-se': 'inline-totp-add' },\n        title: loc('mfa.challenge.orEnterCode', 'login'),\n        click: function() {\n          this.remove();\n          addInlineTotp(form);\n        },\n      })\n    );\n  },\n});\n"],"names":["addInlineTotp","form","addDivider","addInput","label","loc","className","name","input","TextBox","type","add","createButton","attributes","title","click","clearErrors","isValid","model","manageTransaction","transaction","setTransaction","status","prev","options","appState","set","then","trans","save","at","focus","Form","extend","autoSave","noButtonBar","scrollOnError","layout","initialize","listenTo","remove"],"mappings":"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"}
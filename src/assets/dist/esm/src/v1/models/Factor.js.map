{"version":3,"file":"Factor.js","sources":["../../../../../src/v1/models/Factor.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity: [2, 13] */\nimport { _, loc, Collection } from 'okta';\nimport Q from 'q';\nimport { AuthStopPollInitiationError } from 'util/Errors';\nimport factorUtil from 'util/FactorUtil';\nimport Util from 'util/Util';\nimport BaseLoginModel from './BaseLoginModel';\nconst PUSH_INTERVAL = 4000;\n\n// Avoid setting interval to same value as keep-alive time (5 seconds) because it\n// caused an occasional issue with network connection lost errors in Safari and IE\n\nconst FactorFactor = BaseLoginModel.extend({\n  extraProperties: true,\n  flat: false,\n\n  props: {\n    id: 'string',\n    factorType: {\n      type: 'string',\n      values: [\n        'sms',\n        'call',\n        'email',\n        'token',\n        'token:software:totp',\n        'token:hotp',\n        'token:hardware',\n        'question',\n        'push',\n        'u2f',\n        'password',\n        'assertion:saml2',\n        'assertion:oidc',\n        'claims_provider',\n        'webauthn',\n      ],\n    },\n    provider: {\n      type: 'string',\n      values: [\n        'OKTA',\n        'RSA',\n        'DEL_OATH',\n        'SYMANTEC',\n        'GOOGLE',\n        'YUBICO',\n        'FIDO',\n        'CUSTOM',\n        'GENERIC_SAML',\n        'GENERIC_OIDC',\n      ],\n    },\n    enrollment: {\n      type: 'string',\n      values: ['OPTIONAL', 'REQUIRED'],\n    },\n    status: {\n      type: 'string',\n      values: ['NOT_SETUP', 'ACTIVE'],\n    },\n    profile: ['object'],\n    vendorName: 'string',\n    policy: ['object'],\n    profiles: ['object'],\n  },\n\n  local: {\n    answer: 'string',\n    password: 'string',\n    backupFactor: 'object',\n    showAnswer: 'boolean',\n    rememberDevice: 'boolean',\n    autoPush: ['boolean', true, false],\n  },\n\n  derived: {\n    isOktaFactor: {\n      deps: ['provider'],\n      fn: function(provider) {\n        return provider === 'OKTA';\n      },\n    },\n    factorName: {\n      deps: ['provider', 'factorType'],\n      fn: factorUtil.getFactorName,\n    },\n    factorLabel: {\n      deps: ['provider', 'factorType', 'vendorName'],\n      fn: function(provider, factorType, vendorName) {\n        if (_.contains(['DEL_OATH', 'GENERIC_SAML', 'GENERIC_OIDC', 'CUSTOM'], provider)) {\n          return vendorName;\n        }\n        return factorUtil.getFactorLabel.apply(this, [provider, factorType]);\n      },\n    },\n    factorDescription: {\n      deps: ['provider', 'factorType'],\n      fn: factorUtil.getFactorDescription,\n    },\n    sortOrder: {\n      deps: ['provider', 'factorType'],\n      fn: factorUtil.getFactorSortOrder,\n    },\n    iconClassName: {\n      deps: ['provider', 'factorType'],\n      fn: factorUtil.getFactorIconClassName,\n    },\n    securityQuestion: {\n      deps: ['profile', 'factorType'],\n      fn: function(profile, factorType) {\n        if (factorType !== 'question') {\n          return null;\n        }\n        return profile && factorUtil.getSecurityQuestionLabel(profile);\n      },\n    },\n    phoneNumber: {\n      deps: ['profile', 'factorType'],\n      fn: function(profile, factorType) {\n        if (_.contains(['sms', 'call'], factorType)) {\n          return profile && profile.phoneNumber;\n        }\n        return null;\n      },\n    },\n    email: {\n      deps: ['profile', 'factorType'],\n      fn: function(profile, factorType) {\n        if (factorType === 'email') {\n          return profile && profile.email;\n        }\n        return null;\n      },\n    },\n    deviceName: {\n      deps: ['profile', 'factorType'],\n      fn: function(profile, factorType) {\n        if (factorType !== 'push') {\n          return null;\n        }\n        return profile && profile.name;\n      },\n    },\n    enrolled: {\n      deps: ['status'],\n      fn: function(status) {\n        return status === 'ACTIVE';\n      },\n    },\n    cardinality: {\n      deps: ['policy', 'profiles'],\n      fn: function(policy, profiles) {\n        if (profiles && profiles.length > 0) {\n          const profile = profiles[0];\n          //assume for now we only get one profile (multiple profiles are not supported yet)\n\n          const enrolled = profile._embedded.enrolledFactors.length;\n\n          const adoption = _.findWhere(profile._embedded.features, { type: 'adoption' });\n\n          if (adoption && adoption.cardinality) {\n            return {\n              enrolled: enrolled,\n              minimum: adoption.cardinality.min,\n              maximum: adoption.cardinality.max,\n            };\n          }\n          return false;\n        } else if (policy && policy.enrollment) {\n          return policy.enrollment;\n        } else {\n          return false;\n        }\n      },\n    },\n    additionalEnrollment: {\n      deps: ['cardinality'],\n      fn: function(cardinality) {\n        if (cardinality) {\n          return cardinality.enrolled !== 0 && cardinality.enrolled < cardinality.maximum;\n        } else {\n          return false;\n        }\n      },\n    },\n    required: {\n      deps: ['enrollment'],\n      fn: function(enrollment) {\n        return enrollment === 'REQUIRED';\n      },\n    },\n    canUseResend: {\n      deps: ['provider', 'factorType'],\n      fn: function(provider, factorType) {\n        // Only push, sms and call have resend links.\n        return provider === 'OKTA' && _.contains(['push', 'sms', 'call', 'email'], factorType);\n      },\n    },\n    isAnswerRequired: {\n      deps: ['factorType'],\n      fn: function(factorType) {\n        return _.contains(['sms', 'call', 'email', 'token', 'token:software:totp', 'question'], factorType);\n      },\n    },\n    isFactorTypeVerification: {\n      deps: ['provider', 'id'],\n      fn: function(provider, id) {\n        return provider === undefined && id === undefined;\n      },\n    },\n  },\n\n  parse: function(attributes) {\n    this.settings = attributes.settings;\n    this.appState = attributes.appState;\n    // set the initial value for remember device.\n    attributes.rememberDevice = factorUtil.getRememberDeviceValue(this.appState);\n\n    // Add vendorname for custom totp enroll\n    this.setCustomHotpVendorName(attributes);\n    return _.omit(attributes, ['settings', 'appState']);\n  },\n\n  validate: function() {\n    if (this.get('isAnswerRequired') && !this.get('answer')) {\n      return { answer: loc('model.validation.field.blank') };\n    } else if (this.get('factorType') === 'password' && !this.get('password')) {\n      return { password: loc('error.password.required') };\n    }\n  },\n  needsPasscode: function() {\n    // we don't need passcode for email with magic link flow\n    return !(this.options.appState.get('isIdxStateToken') && this.get('factorType') === 'email');\n  },\n  resend: function() {\n    this.trigger('form:clear-errors');\n    return this.manageTransaction(function(transaction) {\n      const firstLink = transaction.data._links.resend[0];\n\n      return transaction.resend(firstLink.name);\n    });\n  },\n\n  save: function() {\n    const rememberDevice = !!this.get('rememberDevice');\n    const self = this;\n    // Set/Remove the remember device cookie based on the remember device input.\n\n    return this.manageTransaction(function(transaction, setTransaction) {\n      const data = {\n        rememberDevice: rememberDevice,\n      };\n\n      if (this.get('factorType') === 'question') {\n        data.answer = this.get('answer');\n      } else if (this.get('factorType') === 'password') {\n        data.password = this.get('password');\n      } else if (this.needsPasscode()) {\n        data.passCode = this.get('answer');\n      }\n\n      if (this.pushFactorHasAutoPush()) {\n        data.autoPush = this.get('autoPush');\n      }\n\n      let promise;\n\n      // MFA_REQUIRED, FACTOR_REQUIRED or UNAUTHENTICATED with factors (passwordlessAuth)\n      if (\n        transaction.status === 'MFA_REQUIRED' ||\n        transaction.status === 'FACTOR_REQUIRED' ||\n        this.appState.get('promptForFactorInUnauthenticated')\n      ) {\n        const factor = this._findFactor(transaction);\n\n        promise = factor.verify(data);\n      } else if (this.get('canUseResend') && !this.get('answer') && transaction.resend) {\n        // MFA_CHALLENGE/ FACTOR_CHALLENGE\n        const firstLink = transaction.data._links.resend[0];\n\n        promise = transaction.resend(firstLink.name);\n      } else {\n        promise = transaction.verify(data);\n      }\n      //the 'save' event here is triggered and used in the BaseLoginController\n      //to disable the primary button on the factor form\n      this.trigger('save');\n\n      return promise.then(function(trans) {\n        const options = {\n          delay: PUSH_INTERVAL,\n          transactionCallBack: transaction => {\n            self.options.appState.set('lastAuthResponse', transaction);\n          },\n        };\n\n        setTransaction(trans);\n        // In Okta verify case we initiate poll.\n        if ((trans.status === 'MFA_CHALLENGE' && trans.poll) || (trans.status === 'FACTOR_CHALLENGE' && trans.poll)) {\n          const deferred = Q.defer();\n          const initiatePollTimout = Util.callAfterTimeout(deferred.resolve, PUSH_INTERVAL);\n          self.listenToOnce(self.options.appState, 'factorSwitched', () => {\n            clearTimeout(initiatePollTimout);\n            deferred.reject(new AuthStopPollInitiationError());\n          });\n          return deferred.promise.then(function() {\n            // Stop listening if factor was not switched before poll.\n            self.stopListening(self.options.appState, 'factorSwitched');\n            if (self.pushFactorHasAutoPush()) {\n              options.autoPush = function() {\n                return self.get('autoPush');\n              };\n              options.rememberDevice = function() {\n                return self.get('rememberDevice');\n              };\n            }\n            return trans.poll(options).then(function(trans) {\n              self.options.appState.set('lastAuthResponse', trans.data);\n              setTransaction(trans);\n            });\n          });\n        }\n      });\n    });\n  },\n\n  _findFactor: function(transaction) {\n    let factor;\n\n    if (transaction.factorTypes) {\n      factor = _.findWhere(transaction.factorTypes, {\n        factorType: this.get('factorType'),\n      });\n    }\n    if (!factor) {\n      factor = _.findWhere(transaction.factors, {\n        id: this.get('id'),\n      });\n    }\n    return factor;\n  },\n\n  pushFactorHasAutoPush: function() {\n    return this.settings.get('features.autoPush') && this.get('factorType') === 'push';\n  },\n\n  setCustomHotpVendorName: function(attributes) {\n    // If factor is token:hotp and not enrolled, we assume the first profile is the default.\n    // If factor is enrolled, we only support one profile to be enrolled, so find that one\n    // and display as enrolled profile. We do this by populating profile name in vendorName.\n    if (attributes.factorType === 'token:hotp' && attributes.profiles) {\n      if (attributes.status === 'NOT_SETUP') {\n        attributes.vendorName = attributes.profiles[0].name;\n      } else if (attributes.status === 'ACTIVE') {\n        const enrolledProfiles = attributes.profiles.filter(profile => {\n          return profile._embedded.enrolledFactors.length > 0;\n        });\n        attributes.vendorName = enrolledProfiles[0].name;\n      }\n    }\n    return attributes;\n  },\n});\nconst FactorFactors = Collection.extend({\n  model: FactorFactor,\n  comparator: 'sortOrder',\n\n  // One override necessary here - When Okta Verify OTP and Push are in the list,\n  // they are presented in the view as one factor - in the beacon menu,\n  // there's only one option (Okta Verify), and we show a form with Push\n  // with an inline totp option. What we need to do is to add totp\n  // as a \"backupFactor\" for push\n  parse: function(factors) {\n    // Keep a track of the last used factor, since\n    // we need it to determine the default factor.\n    this.lastUsedFactor = factors[0];\n\n    const oktaPushFactor = _.findWhere(factors, { provider: 'OKTA', factorType: 'push' });\n\n    let totpFactor;\n\n    if (_.where(factors, { factorType: 'push' }).length > 1) {\n      totpFactor = _.findWhere(factors, { factorType: 'token:software:totp' });\n    } else {\n      totpFactor = _.findWhere(factors, { provider: 'OKTA', factorType: 'token:software:totp' });\n    }\n    if (!oktaPushFactor || !totpFactor) {\n      return factors;\n    }\n\n    const isTotpFirst = totpFactor === factors[0];\n\n    const parsedFactors = _.reduce(\n      factors,\n      function(memo, factor) {\n        const isOkta = factor.provider === 'OKTA';\n        const isOktaTotp = isOkta && factor.factorType === 'token:software:totp';\n        const isOktaPush = isOkta && factor.factorType === 'push';\n        const notEnrolled = factor.status !== 'ACTIVE';\n        const hideOktaTotp = isOktaTotp && (notEnrolled || oktaPushFactor.status === 'ACTIVE');\n        const hideOktaPush = isOktaPush && notEnrolled && totpFactor.status === 'ACTIVE';\n\n        if (hideOktaTotp || hideOktaPush) {\n          return memo;\n        }\n\n        if (isOktaPush) {\n          factor.backupFactor = new FactorFactor(totpFactor, { parse: true });\n        }\n        memo.push(factor);\n        return memo;\n      },\n      []\n    );\n\n    // Use push factor instead of TOTP, if TOTP is first in the list\n    // (since it is stored as backupFactor for push).\n    if (isTotpFirst) {\n      this.lastUsedFactor = oktaPushFactor;\n    }\n\n    return parsedFactors;\n  },\n\n  // Will need to update this to use HAL link to get last used factor:\n  // https://oktainc.atlassian.net/browse/OKTA-58380\n  // However, current code returns last used factor as first factor in list.\n  // Also, will need to add priority - i.e. if they do not have a last used\n  // factor, should try Okta Verify, then Okta SMS, etc.\n  getDefaultFactor: function() {\n    const factor = _.pick(this.lastUsedFactor, 'factorType', 'provider');\n\n    return this.findWhere(factor);\n  },\n\n  getFirstUnenrolledRequiredFactor: function() {\n    return this.findWhere({ required: true, enrolled: false });\n  },\n\n  _getFactorsOfType: function(factorType) {\n    return this.where({ factorType: factorType });\n  },\n\n  getFactorIndex: function(factorType, factorId) {\n    return this._getFactorsOfType(factorType).findIndex(function(factor) {\n      return factor.get('id') === factorId;\n    });\n  },\n\n  hasMultipleFactorsOfSameType: function(factorType) {\n    return this._getFactorsOfType(factorType).length > 1;\n  },\n\n  getFactorByTypeAndIndex: function(factorType, factorIndex) {\n    return this._getFactorsOfType(factorType)[factorIndex];\n  },\n});\nexport default {\n  Model: FactorFactor,\n  Collection: FactorFactors,\n};\n"],"names":["PUSH_INTERVAL","FactorFactor","BaseLoginModel","extend","extraProperties","flat","props","id","factorType","type","values","provider","enrollment","status","profile","vendorName","policy","profiles","local","answer","password","backupFactor","showAnswer","rememberDevice","autoPush","derived","isOktaFactor","deps","fn","factorName","factorUtil","getFactorName","factorLabel","_","contains","getFactorLabel","apply","factorDescription","getFactorDescription","sortOrder","getFactorSortOrder","iconClassName","getFactorIconClassName","securityQuestion","getSecurityQuestionLabel","phoneNumber","email","deviceName","name","enrolled","cardinality","length","_embedded","enrolledFactors","adoption","findWhere","features","minimum","min","maximum","max","additionalEnrollment","required","canUseResend","isAnswerRequired","isFactorTypeVerification","undefined","parse","attributes","settings","appState","getRememberDeviceValue","setCustomHotpVendorName","omit","validate","get","loc","needsPasscode","options","resend","trigger","manageTransaction","transaction","firstLink","data","_links","save","self","setTransaction","passCode","pushFactorHasAutoPush","promise","factor","_findFactor","verify","then","trans","delay","transactionCallBack","set","poll","deferred","Q","defer","initiatePollTimout","Util","callAfterTimeout","resolve","listenToOnce","clearTimeout","reject","AuthStopPollInitiationError","stopListening","factorTypes","factors","enrolledProfiles","filter","FactorFactors","Collection","model","comparator","lastUsedFactor","oktaPushFactor","totpFactor","where","isTotpFirst","parsedFactors","reduce","memo","isOkta","isOktaTotp","isOktaPush","notEnrolled","hideOktaTotp","hideOktaPush","push","getDefaultFactor","pick","getFirstUnenrolledRequiredFactor","_getFactorsOfType","getFactorIndex","factorId","findIndex","hasMultipleFactorsOfSameType","getFactorByTypeAndIndex","factorIndex","Model"],"mappings":"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"}
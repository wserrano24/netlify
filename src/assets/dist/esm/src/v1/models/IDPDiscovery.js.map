{"version":3,"file":"IDPDiscovery.js","sources":["../../../../../src/v1/models/IDPDiscovery.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2017, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport PrimaryAuthModel from 'v1/models/PrimaryAuth';\nimport CookieUtil from 'util/CookieUtil';\nimport Enums from 'util/Enums';\nimport Util from 'util/Util';\nexport default PrimaryAuthModel.extend({\n  props: function() {\n    const cookieUsername = CookieUtil.getCookieUsername();\n    const properties = this.getUsernameAndRemember(cookieUsername);\n\n    return {\n      username: ['string', true, properties.username],\n      lastUsername: ['string', false, cookieUsername],\n      context: ['object', false],\n      remember: ['boolean', true, properties.remember],\n    };\n  },\n\n  local: {},\n\n  save: function() {\n    const username = this.settings.transformUsername(this.get('username'), Enums.IDP_DISCOVERY);\n    const remember = this.get('remember');\n    const lastUsername = this.get('lastUsername');\n    const resource = 'okta:acct:' + username;\n    const requestContext = this.get('requestContext');\n\n    this.setUsernameCookie(username, remember, lastUsername);\n\n    //the 'save' event here is triggered and used in the BaseLoginController\n    //to disable the primary button\n    this.trigger('save');\n\n    this.appState.trigger('loading', true);\n\n    const webfingerArgs = {\n      resource: resource,\n      requestContext: requestContext,\n    };\n    const authClient = this.appState.settings.authClient;\n\n    authClient\n      .webfinger(webfingerArgs)\n      .then(res => {\n        if (res && res.links && res.links[0]) {\n          if (res.links[0].properties['okta:idp:type'] === 'OKTA') {\n            this.trigger('goToPrimaryAuth');\n          } else if (res.links[0].href) {\n            const redirectFn = res.links[0].href.includes('OKTA_INVALID_SESSION_REPOST%3Dtrue')\n              ? Util.redirectWithFormGet.bind(Util)\n              : this.settings.get('redirectUtilFn');\n            //override redirectFn to only use Util.redirectWithFormGet if OKTA_INVALID_SESSION_REPOST is included\n            //it will be encoded since it will be included in the encoded fromURI\n\n            redirectFn(res.links[0].href);\n          }\n        }\n      })\n      .catch(() => {\n        this.trigger('error');\n        // Specific event handled by the Header for the case where the security image is not\n        // enabled and we want to show a spinner. (Triggered only here and handled only by Header).\n        this.appState.trigger('removeLoading');\n        CookieUtil.removeUsernameCookie();\n      })\n      .finally(() => {\n        this.appState.trigger('loading', false);\n      });\n  },\n});\n"],"names":["PrimaryAuthModel","extend","props","cookieUsername","CookieUtil","getCookieUsername","properties","getUsernameAndRemember","username","lastUsername","context","remember","local","save","settings","transformUsername","get","Enums","IDP_DISCOVERY","resource","requestContext","setUsernameCookie","trigger","appState","webfingerArgs","authClient","webfinger","then","res","links","href","redirectFn","includes","Util","redirectWithFormGet","bind","catch","removeUsernameCookie","finally"],"mappings":"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"}
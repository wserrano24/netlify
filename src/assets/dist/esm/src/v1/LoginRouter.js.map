{"version":3,"file":"LoginRouter.js","sources":["../../../../src/v1/LoginRouter.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint max-params: 0 */\nimport AccountUnlockedController from 'v1/controllers/AccountUnlockedController';\nimport ActivateTotpController from 'v1/controllers/ActivateTotpController';\nimport AdminConsentRequiredController from 'v1/controllers/AdminConsentRequiredController';\nimport BarcodePushController from 'v1/controllers/BarcodePushController';\nimport BarcodeTotpController from 'v1/controllers/BarcodeTotpController';\nimport ConsentRequiredController from 'v1/controllers/ConsentRequiredController';\nimport CustomPasswordExpiredController from 'v1/controllers/CustomPasswordExpiredController';\nimport DeviceActivateController from 'v1/controllers/DeviceActivateController';\nimport DeviceActivateTerminalController from 'v1/controllers/DeviceActivateTerminalController';\nimport EnrollActivateCustomFactorController from 'v1/controllers/EnrollActivateCustomFactorController';\nimport EnrollActivateEmailController from 'v1/controllers/EnrollActivateEmailController';\nimport EnrollCallAndSmsController from 'v1/controllers/EnrollCallAndSmsController';\nimport EnrollChoicesController from 'v1/controllers/EnrollChoicesController';\nimport EnrollCustomFactorController from 'v1/controllers/EnrollCustomFactorController';\nimport EnrollDuoController from 'v1/controllers/EnrollDuoController';\nimport EnrollEmailController from 'v1/controllers/EnrollEmailController';\nimport EnrollHotpController from 'v1/controllers/EnrollHotpController';\nimport EnrollOnPremController from 'v1/controllers/EnrollOnPremController';\nimport EnrollPasswordController from 'v1/controllers/EnrollPasswordController';\nimport EnrollQuestionController from 'v1/controllers/EnrollQuestionController';\nimport EnrollSymantecVipController from 'v1/controllers/EnrollSymantecVipController';\nimport EnrollTotpController from 'v1/controllers/EnrollTotpController';\nimport EnrollU2FController from 'v1/controllers/EnrollU2FController';\nimport EnrollUserController from 'v1/controllers/EnrollUserController';\nimport EnrollWebauthnController from 'v1/controllers/EnrollWebauthnController';\nimport EnrollWindowsHelloController from 'v1/controllers/EnrollWindowsHelloController';\nimport EnrollYubikeyController from 'v1/controllers/EnrollYubikeyController';\nimport EnrollmentLinkSentController from 'v1/controllers/EnrollmentLinkSentController';\nimport EnterPasscodePushFlowController from 'v1/controllers/EnterPasscodePushFlowController';\nimport ForgotPasswordController from 'v1/controllers/ForgotPasswordController';\nimport IDPDiscoveryController from 'v1/controllers/IDPDiscoveryController';\nimport ForceIDPDiscoveryController from 'v1/controllers/ForceIDPDiscoveryController';\nimport ManualSetupPushController from 'v1/controllers/ManualSetupPushController';\nimport ManualSetupTotpController from 'v1/controllers/ManualSetupTotpController';\nimport MfaVerifyController from 'v1/controllers/MfaVerifyController';\nimport PasswordExpiredController from 'v1/controllers/PasswordExpiredController';\nimport PasswordResetController from 'v1/controllers/PasswordResetController';\nimport PollController from 'v1/controllers/PollController';\nimport PrimaryAuthController from 'v1/controllers/PrimaryAuthController';\nimport PwdResetEmailSentController from 'v1/controllers/PwdResetEmailSentController';\nimport RecoveryChallengeController from 'v1/controllers/RecoveryChallengeController';\nimport RecoveryLoadingController from 'v1/controllers/RecoveryLoadingController';\nimport RecoveryQuestionController from 'v1/controllers/RecoveryQuestionController';\nimport RefreshAuthStateController from 'v1/controllers/RefreshAuthStateController';\nimport RegistrationCompleteController from 'v1/controllers/RegistrationCompleteController';\nimport RegistrationController from 'v1/controllers/RegistrationController';\nimport UnlockAccountController from 'v1/controllers/UnlockAccountController';\nimport UnlockEmailSentController from 'v1/controllers/UnlockEmailSentController';\nimport VerifyCustomFactorController from 'v1/controllers/VerifyCustomFactorController';\nimport VerifyDuoController from 'v1/controllers/VerifyDuoController';\nimport VerifyPIVController from 'v1/controllers/VerifyPIVController';\nimport VerifyU2FController from 'v1/controllers/VerifyU2FController';\nimport VerifyWebauthnController from 'v1/controllers/VerifyWebauthnController';\nimport VerifyWindowsHelloController from 'v1/controllers/VerifyWindowsHelloController';\nimport ErrorStateController from 'v1/controllers/ErrorStateController';\nimport BaseLoginRouter from 'v1/BaseLoginRouter';\nimport FactorBeacon from 'v1/views/shared/FactorBeacon';\nimport PIVBeacon from 'v1/views/shared/PIVBeacon';\nimport SecurityBeacon from 'v1/views/shared/SecurityBeacon';\n\nimport Enums from 'util/Enums';\n\nexport default BaseLoginRouter.extend({\n  routes: {\n    '': 'defaultAuth',\n    signin: 'primaryAuth',\n    'signin/verify/duo/web': 'verifyDuo',\n    'signin/verify/piv': 'verifyPIV',\n    'signin/poll': 'poll',\n    'signin/verify/fido/webauthn': 'verifyWebauthn',\n    'signin/verify/webauthn': 'verifyWebauthn',\n    'signin/verify/fido/u2f': 'verifyU2F',\n    'signin/verify/u2f': 'verifyU2F',\n    'signin/verify/generic_saml/assertion:saml2': 'verifySAMLFactor',\n    'signin/verify/generic_oidc/assertion:oidc': 'verifyOIDCFactor',\n    'signin/verify/custom/claims_provider': 'verifyClaimsFactor',\n    'signin/verify/:factorType': 'verifyNoProvider',\n    'signin/verify/:provider/:factorType(/:factorIndex)': 'verify',\n    'signin/enroll': 'enrollChoices',\n    'signin/enroll/duo/web': 'enrollDuo',\n    'signin/enroll/okta/question': 'enrollQuestion',\n    'signin/enroll/okta/password': 'enrollPassword',\n    'signin/enroll/okta/sms': 'enrollSms',\n    'signin/enroll/okta/call': 'enrollCall',\n    'signin/enroll/okta/email': 'enrollEmail',\n    'signin/enroll-activate/okta/sms': 'enrollSms',\n    'signin/enroll-activate/okta/call': 'enrollCall',\n    'signin/enroll/rsa/token': 'enrollRsa',\n    'signin/enroll/del_oath/token': 'enrollOnPrem',\n    'signin/enroll/symantec/token': 'enrollSymantecVip',\n    'signin/enroll/yubico/token:hardware': 'enrollYubikey',\n    'signin/enroll/fido/webauthn': 'enrollWebauthn',\n    'signin/enroll/fido/u2f': 'enrollU2F',\n    'signin/enroll/generic_saml/assertion:saml2': 'enrollSAMLFactor',\n    'signin/enroll/generic_oidc/assertion:oidc': 'enrollOIDCFactor',\n    'signin/enroll/custom/claims_provider': 'enrollClaimsFactor',\n    'signin/enroll/custom/token:hotp': 'enrollHotpFactor',\n    'signin/enroll/:provider/:factorType': 'enrollTotpFactor',\n    'signin/enroll-activate/okta/email': 'enrollActivateEmail',\n    'signin/enroll-activate/okta/push': 'scanBarcodePushFactor',\n    'signin/enroll-activate/okta/push/manual': 'manualSetupPushFactor',\n    'signin/enroll-activate/okta/push/sent': 'activationLinkSent',\n    'signin/enroll-activate/okta/token:software:totp/passcode': 'enterPasscodeInPushEnrollmentFlow',\n    'signin/enroll-activate/custom/claims_provider': 'enrollActivateClaimsFactor',\n    'signin/enroll-activate/:provider/:factorType': 'scanBarcodeTotpFactor',\n    'signin/enroll-activate/:provider/:factorType/activate': 'activateTotpFactor',\n    'signin/enroll-activate/:provider/:factorType/manual': 'manualSetupTotpFactor',\n    'signin/password-expired': 'passwordExpired',\n    'signin/custom-password-expired': 'customPasswordExpired',\n    'signin/forgot-password': 'forgotPassword',\n    'signin/recovery-challenge': 'recoveryChallenge',\n    'signin/recovery-emailed': 'recoveryEmailSent',\n    'signin/recovery-question': 'recoveryQuestion',\n    'signin/password-reset': 'passwordReset',\n    'signin/reset-password/:token': 'recoveryLoading',\n    'signin/user-unlock/:token': 'recoveryLoading',\n    'signin/recovery/:token': 'recoveryLoading',\n    'signin/unlock-emailed': 'unlockEmailSent',\n    'signin/unlock': 'unlockAccount',\n    'signin/account-unlocked': 'accountUnlocked',\n    'signin/refresh-auth-state(/:token)': 'refreshAuthState',\n    'signin/register': 'register',\n    'signin/register-complete': 'registerComplete',\n    'signin/error': 'errorState',\n    'signin/consent': 'consentRequired',\n    'signin/admin-consent': 'adminConsentRequired',\n    'signin/enroll-user': 'enrollUser',\n    'signin/device-activate-complete': 'deviceActivateComplete',\n    'signin/device-activate': 'deviceActivate',\n    'signin/idp-discovery-check': 'idpDiscoveryCheck',\n    '*wildcard': 'defaultAuth',\n  },\n\n  // Route handlers that do not require a stateToken. If the page is refreshed,\n  // these functions will not require a status call to refresh the stateToken.\n  stateLessRouteHandlers: [\n    'defaultAuth',\n    'idpDiscovery',\n    'primaryAuth',\n    'forgotPassword',\n    'recoveryLoading',\n    'unlockAccount',\n    'refreshAuthState',\n    'register',\n    'registerComplete',\n    'errorState',\n    'verifyPIV',\n  ],\n\n  defaultAuth: function() {\n    if (window.location.hash === `#${Enums.WIDGET_CONTAINER_ID}`) {\n      document.getElementById(Enums.WIDGET_CONTAINER_ID).focus();\n      return;\n    }\n    if (this.settings.get('features.idpDiscovery')) {\n      this.idpDiscovery();\n    } else {\n      this.primaryAuth();\n    }\n  },\n\n  idpDiscoveryCheck: function() {\n    this.render(ForceIDPDiscoveryController, { Beacon: SecurityBeacon });\n  },\n\n  idpDiscovery: function() {\n    this.render(IDPDiscoveryController, { Beacon: SecurityBeacon });\n  },\n\n  primaryAuth: function() {\n    this.render(PrimaryAuthController, { Beacon: SecurityBeacon });\n  },\n\n  verifyDuo: function() {\n    this.render(VerifyDuoController, {\n      provider: 'DUO',\n      factorType: 'web',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifyPIV: function() {\n    this.render(VerifyPIVController, { Beacon: PIVBeacon });\n  },\n\n  poll: function() {\n    this.render(PollController);\n  },\n\n  verifyWebauthn: function() {\n    if (this.settings.get('features.webauthn')) {\n      this.render(VerifyWebauthnController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon,\n      });\n    } else {\n      this.render(VerifyWindowsHelloController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon,\n      });\n    }\n  },\n\n  verifyU2F: function() {\n    this.render(VerifyU2FController, {\n      provider: 'FIDO',\n      factorType: 'u2f',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifySAMLFactor: function() {\n    this.render(VerifyCustomFactorController, {\n      provider: 'GENERIC_SAML',\n      factorType: 'assertion:saml2',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifyOIDCFactor: function() {\n    this.render(VerifyCustomFactorController, {\n      provider: 'GENERIC_OIDC',\n      factorType: 'assertion:oidc',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifyClaimsFactor: function() {\n    this.render(VerifyCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verify: function(provider, factorType, factorIndex) {\n    this.render(MfaVerifyController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      factorIndex: factorIndex,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  verifyNoProvider: function(factorType) {\n    this.render(MfaVerifyController, {\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollChoices: function() {\n    this.render(EnrollChoicesController, { Beacon: SecurityBeacon });\n  },\n\n  enrollDuo: function() {\n    this.render(EnrollDuoController, {\n      provider: 'DUO',\n      factorType: 'web',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollQuestion: function() {\n    this.render(EnrollQuestionController, {\n      provider: 'OKTA',\n      factorType: 'question',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollPassword: function() {\n    this.render(EnrollPasswordController, {\n      provider: 'OKTA',\n      factorType: 'password',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollSms: function() {\n    this.render(EnrollCallAndSmsController, {\n      provider: 'OKTA',\n      factorType: 'sms',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollCall: function() {\n    this.render(EnrollCallAndSmsController, {\n      provider: 'OKTA',\n      factorType: 'call',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollEmail: function() {\n    this.render(EnrollEmailController, {\n      provider: 'OKTA',\n      factorType: 'email',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollActivateEmail: function() {\n    this.render(EnrollActivateEmailController, {\n      provider: 'OKTA',\n      factorType: 'email',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollRsa: function() {\n    this.render(EnrollOnPremController, {\n      provider: 'RSA',\n      factorType: 'token',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollOnPrem: function() {\n    this.render(EnrollOnPremController, {\n      provider: 'DEL_OATH',\n      factorType: 'token',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollSymantecVip: function() {\n    this.render(EnrollSymantecVipController, {\n      provider: 'SYMANTEC',\n      factorType: 'token',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollYubikey: function() {\n    this.render(EnrollYubikeyController, {\n      provider: 'YUBICO',\n      factorType: 'token:hardware',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollSAMLFactor: function() {\n    this.render(EnrollCustomFactorController, {\n      provider: 'GENERIC_SAML',\n      factorType: 'assertion:saml2',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollOIDCFactor: function() {\n    this.render(EnrollCustomFactorController, {\n      provider: 'GENERIC_OIDC',\n      factorType: 'assertion:oidc',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollClaimsFactor: function() {\n    this.render(EnrollCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollActivateClaimsFactor: function() {\n    this.render(EnrollActivateCustomFactorController, {\n      provider: 'CUSTOM',\n      factorType: 'claims_provider',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollTotpFactor: function(provider, factorType) {\n    this.render(EnrollTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollHotpFactor: function() {\n    this.render(EnrollHotpController, {\n      provider: 'CUSTOM',\n      factorType: 'token:hotp',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enrollWebauthn: function() {\n    if (this.settings.get('features.webauthn')) {\n      this.render(EnrollWebauthnController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon,\n      });\n    } else {\n      this.render(EnrollWindowsHelloController, {\n        provider: 'FIDO',\n        factorType: 'webauthn',\n        Beacon: FactorBeacon,\n      });\n    }\n  },\n\n  enrollU2F: function() {\n    this.render(EnrollU2FController, {\n      provider: 'FIDO',\n      factorType: 'u2f',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  scanBarcodeTotpFactor: function(provider, factorType) {\n    this.render(BarcodeTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  scanBarcodePushFactor: function() {\n    this.render(BarcodePushController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  activateTotpFactor: function(provider, factorType) {\n    this.render(ActivateTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  manualSetupTotpFactor: function(provider, factorType) {\n    this.render(ManualSetupTotpController, {\n      provider: provider.toUpperCase(),\n      factorType: factorType,\n      Beacon: FactorBeacon,\n    });\n  },\n\n  manualSetupPushFactor: function() {\n    this.render(ManualSetupPushController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  activationLinkSent: function() {\n    this.render(EnrollmentLinkSentController, {\n      provider: 'OKTA',\n      factorType: 'push',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  enterPasscodeInPushEnrollmentFlow: function() {\n    this.render(EnterPasscodePushFlowController, {\n      provider: 'OKTA',\n      factorType: 'token:software:totp',\n      Beacon: FactorBeacon,\n    });\n  },\n\n  passwordExpired: function() {\n    this.render(PasswordExpiredController, { Beacon: SecurityBeacon });\n  },\n\n  customPasswordExpired: function() {\n    this.render(CustomPasswordExpiredController, { Beacon: SecurityBeacon });\n  },\n\n  forgotPassword: function() {\n    this.render(ForgotPasswordController);\n  },\n\n  recoveryChallenge: function() {\n    this.render(RecoveryChallengeController, { Beacon: SecurityBeacon });\n  },\n\n  recoveryEmailSent: function() {\n    this.render(PwdResetEmailSentController, { Beacon: SecurityBeacon });\n  },\n\n  unlockEmailSent: function() {\n    this.render(UnlockEmailSentController, { Beacon: SecurityBeacon });\n  },\n\n  recoveryQuestion: function() {\n    this.render(RecoveryQuestionController, { Beacon: SecurityBeacon });\n  },\n\n  passwordReset: function() {\n    this.render(PasswordResetController, { Beacon: SecurityBeacon });\n  },\n\n  recoveryLoading: function(token) {\n    this.render(RecoveryLoadingController, {\n      token: token,\n      Beacon: SecurityBeacon,\n    });\n  },\n\n  unlockAccount: function() {\n    this.render(UnlockAccountController);\n  },\n\n  accountUnlocked: function() {\n    this.render(AccountUnlockedController, { Beacon: SecurityBeacon });\n  },\n\n  refreshAuthState: function(token) {\n    this.render(RefreshAuthStateController, {\n      token: token,\n      Beacon: SecurityBeacon,\n    });\n  },\n\n  register: function() {\n    this.render(RegistrationController);\n  },\n\n  registerComplete: function() {\n    this.render(RegistrationCompleteController);\n  },\n\n  errorState: function() {\n    this.render(ErrorStateController, { Beacon: SecurityBeacon });\n  },\n\n  consentRequired: function() {\n    this.render(ConsentRequiredController);\n  },\n\n  adminConsentRequired: function() {\n    this.render(AdminConsentRequiredController);\n  },\n\n  enrollUser: function() {\n    this.render(EnrollUserController);\n  },\n\n  deviceActivate: function() {\n    this.render(DeviceActivateController);\n  },\n  deviceActivateComplete: function() {\n    this.render(DeviceActivateTerminalController);\n  },\n});\n"],"names":["BaseLoginRouter","extend","routes","signin","stateLessRouteHandlers","defaultAuth","window","location","hash","Enums","WIDGET_CONTAINER_ID","document","getElementById","focus","settings","get","idpDiscovery","primaryAuth","idpDiscoveryCheck","render","ForceIDPDiscoveryController","Beacon","SecurityBeacon","IDPDiscoveryController","PrimaryAuthController","verifyDuo","VerifyDuoController","provider","factorType","FactorBeacon","verifyPIV","VerifyPIVController","PIVBeacon","poll","PollController","verifyWebauthn","VerifyWebauthnController","VerifyWindowsHelloController","verifyU2F","VerifyU2FController","verifySAMLFactor","VerifyCustomFactorController","verifyOIDCFactor","verifyClaimsFactor","verify","factorIndex","MfaVerifyController","toUpperCase","verifyNoProvider","enrollChoices","EnrollChoicesController","enrollDuo","EnrollDuoController","enrollQuestion","EnrollQuestionController","enrollPassword","EnrollPasswordController","enrollSms","EnrollCallAndSmsController","enrollCall","enrollEmail","EnrollEmailController","enrollActivateEmail","EnrollActivateEmailController","enrollRsa","EnrollOnPremController","enrollOnPrem","enrollSymantecVip","EnrollSymantecVipController","enrollYubikey","EnrollYubikeyController","enrollSAMLFactor","EnrollCustomFactorController","enrollOIDCFactor","enrollClaimsFactor","enrollActivateClaimsFactor","EnrollActivateCustomFactorController","enrollTotpFactor","EnrollTotpController","enrollHotpFactor","EnrollHotpController","enrollWebauthn","EnrollWebauthnController","EnrollWindowsHelloController","enrollU2F","EnrollU2FController","scanBarcodeTotpFactor","BarcodeTotpController","scanBarcodePushFactor","BarcodePushController","activateTotpFactor","ActivateTotpController","manualSetupTotpFactor","ManualSetupTotpController","manualSetupPushFactor","ManualSetupPushController","activationLinkSent","EnrollmentLinkSentController","enterPasscodeInPushEnrollmentFlow","EnterPasscodePushFlowController","passwordExpired","PasswordExpiredController","customPasswordExpired","CustomPasswordExpiredController","forgotPassword","ForgotPasswordController","recoveryChallenge","RecoveryChallengeController","recoveryEmailSent","PwdResetEmailSentController","unlockEmailSent","UnlockEmailSentController","recoveryQuestion","RecoveryQuestionController","passwordReset","PasswordResetController","recoveryLoading","token","RecoveryLoadingController","unlockAccount","UnlockAccountController","accountUnlocked","AccountUnlockedController","refreshAuthState","RefreshAuthStateController","register","RegistrationController","registerComplete","RegistrationCompleteController","errorState","ErrorStateController","consentRequired","ConsentRequiredController","adminConsentRequired","AdminConsentRequiredController","enrollUser","EnrollUserController","deviceActivate","DeviceActivateController","deviceActivateComplete","DeviceActivateTerminalController"],"mappings":"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"}
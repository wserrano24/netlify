{"version":3,"file":"BaseLoginRouter.js","sources":["../../../../src/v2/BaseLoginRouter.ts"],"sourcesContent":["/* eslint max-depth: [1,4] */\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// BaseLoginRouter contains the more complicated router logic - rendering/\n// transition, etc. Most router changes should happen in LoginRouter (which is\n// responsible for adding new routes)\nimport { _, $, Backbone, Router, loc, BaseRouterOptions } from 'okta';\nimport Settings from 'models/Settings';\nimport Bundles from 'util/Bundles';\nimport BrowserFeatures from 'util/BrowserFeatures';\nimport ColorsUtil from 'util/ColorsUtil';\nimport Enums from 'util/Enums';\nimport { ConfigError } from 'util/Errors';\nimport Logger from 'util/Logger';\nimport LanguageUtil from 'util/LanguageUtil';\nimport AuthContainer from 'v1/views/shared/AuthContainer';\nimport Header from 'v1/views/shared/Header';\nimport AppState from './models/AppState';\nimport sessionStorageHelper from './client/sessionStorageHelper';\nimport {\n  startLoginFlow,\n  handleConfiguredFlow,\n  updateAppState\n} from './client';\n\nimport CookieUtil from 'util/CookieUtil';\nimport { formatError, LegacyIdxError, StandardApiError } from './client/formatError';\nimport { RenderError, RenderResult } from 'types';\nimport { OktaAuth, IdxResponse } from '@okta/okta-auth-js';\nimport Hooks from 'models/Hooks';\nimport IonHelper from './ion/IonResponseHelper';\n\nexport interface BaseLoginRouterOptions extends BaseRouterOptions, Backbone.RouterOptions {\n  globalSuccessFn?: (res: RenderResult) => void;\n  globalErrorFn?: (res: RenderError) => void;\n  authClient?: OktaAuth;\n  hooks: Hooks\n}\n\nclass BaseLoginRouter extends Router<Settings, BaseLoginRouterOptions> {\n  Events: Backbone.Events = Backbone.Events; // also set on prototype\n  hasControllerRendered = false;\n  settings: Settings;\n  appState: AppState;\n  hooks: Hooks;\n  header: Header;\n\n  constructor(options: BaseLoginRouterOptions) {\n    super(options);\n\n    // Create a default success and/or error handler if\n    // one is not provided.\n    if (!options.globalSuccessFn) {\n      options.globalSuccessFn = function() { /* dummy function */ };\n    }\n    if (!options.globalErrorFn) {\n      options.globalErrorFn = function(err) {\n        Logger.error(err);\n      };\n    }\n\n    this.settings = new Settings(_.omit(options, 'el', 'authClient', 'hooks'), { parse: true });\n    this.settings.setAuthClient(options.authClient);\n\n    if (!options.el) {\n      this.settings.callGlobalError(new ConfigError(loc('error.required.el')));\n    }\n\n    $('body > div').on('click', function() {\n      // OKTA-69769 Tooltip wont close on iPhone/iPad\n      // Registering a click handler on the first div\n      // allows a tap that falls outside the tooltip\n      // to be registered as a tap by iOS\n      // and then the open tooltip will lose focus and close.\n    });\n\n    this.hooks = options.hooks;\n    this.appState = new AppState({}, {\n      settings: this.settings,\n      hooks: this.hooks\n    });\n\n    const wrapper = new AuthContainer({ appState: this.appState });\n\n    $(options.el).append(wrapper.render().$el);\n    this.el = `#${Enums.WIDGET_CONTAINER_ID}`;\n    this.header = new Header({\n      el: this.el,\n      appState: this.appState,\n      settings: this.settings,\n    });\n\n    // Hide until unitial render\n    this.hide();\n\n    this.listenTo(this.appState, 'change:deviceFingerprint', this.updateDeviceFingerprint);\n    this.listenTo(this.appState, 'restartLoginFlow', this.restartLoginFlow);\n  }\n\n  updateDeviceFingerprint() {\n    const authClient = this.settings.getAuthClient();\n    const fingerprint = this.appState.get('deviceFingerprint');\n    if (fingerprint) {\n      authClient.http.setRequestHeader('X-Device-Fingerprint', fingerprint);\n    }\n  }\n\n  async handleIdxResponseFailure(error: LegacyIdxError = { error: 'unknown', details: undefined }) {\n    // IDX errors will not call the global error handler\n    error = formatError(error);\n    await updateAppState(this.appState, error.details);\n  }\n\n  // Generic error handler for all exceptions\n  async handleError(error: LegacyIdxError | StandardApiError | Error = { error: 'unknown', details: undefined }) {\n    const formattedError = formatError({...error}); // format the error to resemble an IDX response\n    await updateAppState(this.appState, formattedError.details);\n  }\n\n  /* eslint max-statements: [2, 36], complexity: [2, 16] */\n  async render(Controller, options = {}) {\n    // If url changes then widget assumes that user's intention was to initiate a new login flow,\n    // so clear stored token to use the latest token.\n    if (sessionStorageHelper.getLastInitiatedLoginUrl() !== window.location.href) {\n      sessionStorageHelper.removeStateHandle();\n    }\n    // Since we have a wrapper view, render our wrapper and use its content\n    // element as our new el.\n    // Note: Render it here because we know dom is ready at this point\n    if (!this.header.rendered()) {\n      this.el = this.header.render().getContentEl();\n    }\n\n    // If we need to load a language (or apply custom i18n overrides), do\n    // this now and re-run render after it's finished.\n    if (!Bundles.isLoaded(this.settings.get('languageCode'))) {\n      await LanguageUtil.loadLanguage(this.appState, this.settings);\n    }\n\n    // introspect stateToken when widget is bootstrap with state token\n    // and remove it from `settings` afterwards as IDX response always has\n    // state token (which will be set into AppState)\n    let error;\n    if (this.settings.get('oieEnabled')) {\n      try {\n        let idxResp = await startLoginFlow(this.settings);\n        if (idxResp.error) {\n          await this.handleIdxResponseFailure(idxResp.error);\n        } else {\n          if (this.settings.get('flow') && !this.hasControllerRendered) {\n            idxResp = await handleConfiguredFlow(idxResp, this.settings);\n          }\n\n          // TODO: OKTA-494979 - temporary fix, remove when auth-js is upgraded to 6.6+\n          if (!idxResp.requestDidSucceed && IonHelper.isIdxSessionExpiredError(idxResp)) {\n            // clear transaction subsequent page loads do not use stale interactionHandle\n            const authClient = this.settings.getAuthClient();\n            authClient.transactionManager.clear();\n          }\n\n          await updateAppState(this.appState, idxResp);\n        }\n      } catch (exception) {\n        if (exception.is?.('terminal')) {\n          this.appState.setNonIdxError(exception);\n        } else {\n          error = exception;\n          await this.handleError(exception);\n        }\n      } finally {\n        // These settings should only be used one time, for initial render\n        this.settings.unset('stateToken');\n        this.settings.unset('proxyIdxResponse');\n      }\n    }\n\n    // Load the custom colors only on the first render\n    if (this.settings.get('colors.brand') && !ColorsUtil.isLoaded()) {\n      const colors = {\n        brand: this.settings.get('colors.brand'),\n      };\n\n      ColorsUtil.addStyle(colors);\n    }\n\n    // Show before initial render\n    this.show();\n\n    // render Controller\n    this.unload();\n    const controllerOptions = _.extend({\n      el: this.el,\n      settings: this.settings,\n      appState: this.appState\n    }, options);\n    this.controller = new Controller(controllerOptions);\n\n    // Bubble up all controller events\n    this.listenTo(this.controller, 'all', this.trigger);\n\n    this.controller.render();\n\n    this.hasControllerRendered = true;\n\n    // This will reject the promise returned from renderEl\n    if (error) {\n      this.settings.callGlobalError(error);\n    }\n\n    // -- TODO: OKTA-244631 How to surface up the CORS error in IDX?\n    // -- The `err` object from idx.js doesn't have XHR object\n    // Global error handling for CORS enabled errors\n    // if (err.xhr && BrowserFeatures.corsIsNotEnabled(err.xhr)) {\n    //   this.settings.callGlobalError(new UnsupportedBrowserError(loc('error.enabled.cors')));\n    //   return;\n    // }\n  }\n\n  /**\n    * When \"Remember My Username\" is enabled, we save the identifier in a cookie\n    * so that the next time the user visits the SIW, the identifier field can be \n    * pre-filled with this value.\n   */\n  updateIdentifierCookie(idxResponse: IdxResponse) {\n    if (this.settings.get('features.rememberMe')) {\n      // Update the cookie with the identifier\n      const user = idxResponse?.context?.user;\n      const { identifier } = user?.value || {};\n      if (identifier) {\n        CookieUtil.setUsernameCookie(identifier);\n      }\n    } else {\n      // We remove the cookie explicitly if this feature is disabled.\n      CookieUtil.removeUsernameCookie();\n    }    \n  }\n\n  hasAuthenticationSucceeded(idxResponse: IdxResponse) {\n    // Check whether authentication has succeeded. This is done by checking the server response\n    // and seeing if either the 'success' or 'successWithInteractionCode' objects are present.\n    return idxResponse?.rawIdxState?.success || idxResponse?.rawIdxState?.successWithInteractionCode;\n  }\n\n  restartLoginFlow() {\n    // clear all transaction data and saved IDX response\n    this.settings.getAuthClient().transactionManager.clear();\n    this.appState.set('idx', undefined);\n\n    // Clear the recoveryToken, if any\n    const authClient = this.settings.getAuthClient();\n    delete authClient.options['recoveryToken'];\n    this.settings.unset('recoveryToken');\n    // clear otp (email magic link), if any\n    this.settings.unset('otp');\n\n    // remove all event listeners from current controller instance. A new instance will be created in render().\n    this.controller.stopListening();\n\n    // Re-render the widget\n    this.render(this.controller.constructor);\n  }\n\n  start() {\n    const pushState = BrowserFeatures.supportsPushState();\n    Router.prototype.start.call(this, { pushState: pushState });\n  }\n\n  hide() {\n    this.header.$el.hide();\n  }\n\n  show() {\n    this.header.$el.show();\n  }\n\n  remove() {\n    this.unload();\n    this.header.$el.remove();\n    this.stopListening(this.appState);\n    this.stopListening(this.settings);\n    Bundles.remove();\n    Backbone.history.stop();\n  }\n}\n\n// Add \"Events\" to prototype for compatibility with existing code\nBaseLoginRouter.prototype.Events = Backbone.Events;\n\nexport default BaseLoginRouter;\n"],"names":["BaseLoginRouter","Router","constructor","options","Events","Backbone","hasControllerRendered","settings","appState","hooks","header","globalSuccessFn","globalErrorFn","err","Logger","error","Settings","_","omit","parse","setAuthClient","authClient","el","callGlobalError","ConfigError","loc","$","on","AppState","wrapper","AuthContainer","append","render","$el","Enums","WIDGET_CONTAINER_ID","Header","hide","listenTo","updateDeviceFingerprint","restartLoginFlow","getAuthClient","fingerprint","get","http","setRequestHeader","handleIdxResponseFailure","details","undefined","formatError","updateAppState","handleError","formattedError","Controller","sessionStorageHelper","getLastInitiatedLoginUrl","window","location","href","removeStateHandle","rendered","getContentEl","Bundles","isLoaded","LanguageUtil","loadLanguage","idxResp","startLoginFlow","handleConfiguredFlow","requestDidSucceed","IonHelper","isIdxSessionExpiredError","transactionManager","clear","exception","is","setNonIdxError","unset","ColorsUtil","colors","brand","addStyle","show","unload","controllerOptions","extend","controller","trigger","updateIdentifierCookie","idxResponse","user","context","identifier","value","CookieUtil","setUsernameCookie","removeUsernameCookie","hasAuthenticationSucceeded","rawIdxState","success","successWithInteractionCode","set","stopListening","start","pushState","BrowserFeatures","supportsPushState","prototype","call","remove","history","stop"],"mappings":"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"}
{"version":3,"file":"ion-object-handler.js","sources":["../../../../../../src/v2/ion/ui-schema/ion-object-handler.js"],"sourcesContent":["/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { _ } from 'okta';\nimport { AUTHENTICATOR_KEY } from '../RemediationConstants';\n\n/**\n * Example of the option like\n * @param {AuthenticatorOption[]} options\n * @param {( AuthenticatorEnrollment[] || Authenticator[] )} authenticators\n */\nexport function createOVOptions(options = []) {\n  // Split OV into individual entries for verification (one for each method).\n  const ovItem = options.find((option) => option.relatesTo.key === AUTHENTICATOR_KEY.OV);\n  const methodTypeObj = ovItem?.value?.form?.value?.find(v => v.name === 'methodType');\n  const methodOptions = methodTypeObj?.options;\n  let signedNonceOption;\n  if (methodOptions) {\n    const ovOptions = [];\n    methodOptions.forEach((method) => {\n      // get value object from the ov item\n      const value = [...ovItem.value.form.value];\n      // get index of the methodType object within the value object\n      const methodTypeIndex = ovItem.value.form.value.findIndex((v) => v.name === 'methodType');\n      // create a new methodType object that removes the options array and\n      // has a value of the current method\n      const newMethodTypeObj = Object.assign(_.omit(methodTypeObj, 'options'), method);\n      // set the methodType field to be required and immutable in our UI,\n      // so it is always sent to the backend.\n      newMethodTypeObj.required = true;\n      newMethodTypeObj.mutable = false;\n      // replace old methodType object with the new one\n      value.splice(methodTypeIndex, 1, newMethodTypeObj);\n      // return a new ov item for a specific method\n      const newItem = Object.assign({}, ovItem, {\n        label: method.label,\n        value: {\n          form: {\n            value,\n          }\n        }\n      });\n      if (method.value === 'signed_nonce') {\n        signedNonceOption = newItem;\n      } else {\n        ovOptions.push(newItem);\n      }\n    });\n    const ovIndex = options.findIndex((option) => option.relatesTo.key === AUTHENTICATOR_KEY.OV);\n    options.splice(ovIndex, 1, ...ovOptions);\n\n    // ReArrange fastpass in options based on deviceKnown\n    if (signedNonceOption) {\n      ovItem.relatesTo.deviceKnown ? options.unshift(signedNonceOption) : options.push(signedNonceOption);\n    }\n  }\n}\n\nfunction createAuthenticatorOptions(options = []) {\n  createOVOptions(options);\n  return options.map(option => {\n    const value = option.value?.form?.value || [];\n\n    // Each authenticator option has list of ION field.\n    // Currently we only support merely selecting one of options\n    // rather than pop up another page to collect extra data\n    // (in order to fill value for `mutable: true; value: null` fields).\n    // The only reason of such design is to simplify widget implementation\n    // but could subject to change in later releases.\n    // Thus only surface up fields that are `required: true; mutable: false`\n    // which implies it already has `value`.\n    const valueObject = value\n      .filter(v => v.required === true && v.mutable === false)\n      .reduce((init, v) => {\n        return Object.assign(init, { [v.name]: v.value });\n      }, {});\n    return {\n      label: option.label,\n      value: valueObject,\n      relatesTo: option.relatesTo,\n      authenticatorKey: option.relatesTo?.key,\n    };\n  });\n}\n\nfunction getAuthenticatorsEnrollUiSchema({ options }) {\n  return {\n    type: 'authenticatorEnrollSelect',\n    options: createAuthenticatorOptions(options),\n  };\n}\n\nfunction getAuthenticatorsVerifyUiSchema({ options }) {\n  return {\n    type: 'authenticatorVerifySelect',\n    options: createAuthenticatorOptions(options),\n  };\n}\n\n/**\n  * Create ui schema for ION field that has type 'object'.\n  */\nexport default function createUiSchemaForObject(ionFormField, remediationForm, transformedResp,\n  createUISchema, settings) {\n  const uiSchema = {};\n\n  if (ionFormField.name === 'authenticator' &&\n    (remediationForm.name === 'select-authenticator-authenticate' ||\n    remediationForm.name === 'select-authenticator-unlock-account')) {\n    // 1. when `select-authenticator-authenticator`,\n    // create customize type so that display authenticator list as selectable list\n    Object.assign(uiSchema, getAuthenticatorsVerifyUiSchema(ionFormField));\n  } else if (ionFormField.name === 'authenticator' && remediationForm.name === 'select-authenticator-enroll') {\n    // 2. when `select-authenticator-enroll`,\n    // create customize type so that display authenticator list as selectable list\n    Object.assign(uiSchema, getAuthenticatorsEnrollUiSchema(ionFormField));\n  } else if (Array.isArray(ionFormField.options)) {\n    // 3. For other cases, create ui schema for each `option` in order to render\n    // different view for each option.\n    //\n    // e.g. { \"name\": \"credentials\", \"type\": \"object\", options: [ {value: {form: value:[]} ]\n    uiSchema.optionsUiSchemas = ionFormField.options.map(opt => {\n      return createUISchema(transformedResp, {\n        value: [\n          {\n            name: ionFormField.name,\n            value: opt.value,\n          }\n        ]\n      }, settings);\n    });\n    uiSchema.options = ionFormField.options.map((opt, index) => {\n      return { label: opt.label, value: index };\n    });\n    // assume (default to) use radio buttons to switch sub-schema.\n    uiSchema.type = 'radio';\n    uiSchema.value = '0';\n    uiSchema.name = `sub_schema_local_${ionFormField.name}`;\n  }\n\n  return uiSchema;\n}\n"],"names":["createOVOptions","options","ovItem","find","option","relatesTo","key","AUTHENTICATOR_KEY","OV","methodTypeObj","value","form","v","name","methodOptions","signedNonceOption","ovOptions","forEach","method","methodTypeIndex","findIndex","newMethodTypeObj","Object","assign","_","omit","required","mutable","splice","newItem","label","push","ovIndex","deviceKnown","unshift","createAuthenticatorOptions","map","valueObject","filter","reduce","init","authenticatorKey","getAuthenticatorsEnrollUiSchema","type","getAuthenticatorsVerifyUiSchema","createUiSchemaForObject","ionFormField","remediationForm","transformedResp","createUISchema","settings","uiSchema","Array","isArray","optionsUiSchemas","opt","index"],"mappings":"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"}
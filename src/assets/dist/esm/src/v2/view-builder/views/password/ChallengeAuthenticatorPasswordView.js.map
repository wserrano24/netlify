{"version":3,"file":"ChallengeAuthenticatorPasswordView.js","sources":["../../../../../../../src/v2/view-builder/views/password/ChallengeAuthenticatorPasswordView.js"],"sourcesContent":["import { loc } from 'okta';\nimport { BaseForm } from '../../internals';\nimport AuthenticatorFooter from '../../components/AuthenticatorFooter';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport { getForgotPasswordLink } from '../../utils/LinksUtil';\nimport { isCustomizedI18nKey } from '../../../ion/i18nTransformer';\n\n\nconst Body = BaseForm.extend({\n\n  title: function() {\n    return loc('oie.password.challenge.title', 'login');\n  },\n\n  save: function() {\n    return loc('mfa.challenge.verify', 'login');\n  },\n\n  /**\n   * Update UI schemas for customization from .widgetrc.js or Admin Customization settings page.\n   * @returns Array\n   */\n  getUISchema() {\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n\n    const { settings } = this.options;\n    const passwordExplainLabeli18nKey = 'primaryauth.password.tooltip';\n\n    const passwordSchema = schemas.find(({name}) => name === 'credentials.passcode');\n\n    if (passwordSchema && isCustomizedI18nKey(passwordExplainLabeli18nKey, settings)) {\n      passwordSchema.explain = loc(passwordExplainLabeli18nKey, 'login');\n      passwordSchema['explain-top'] = true;\n    }\n\n    return schemas;\n  },\n\n});\n\nconst Footer = AuthenticatorFooter.extend({\n  links: function() {\n    let links = AuthenticatorFooter.prototype.links.apply(this, arguments);\n\n    links = getForgotPasswordLink(this.options.appState, this.options.settings).concat(links);\n\n    return links;\n  }\n});\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n  Footer,\n});\n"],"names":["Body","BaseForm","extend","title","loc","save","getUISchema","schemas","prototype","apply","arguments","settings","options","passwordExplainLabeli18nKey","passwordSchema","find","name","isCustomizedI18nKey","explain","Footer","AuthenticatorFooter","links","getForgotPasswordLink","appState","concat","BaseAuthenticatorView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,MAAMA,IAAI,GAAGC,QAAQ,CAACC,MAAT,CAAgB;AAE3BC,EAAAA,KAAK,EAAE,YAAW;AAChB,IAAA,OAAOC,GAAG,CAAC,8BAAD,EAAiC,OAAjC,CAAV,CAAA;AACD,GAJ0B;AAM3BC,EAAAA,IAAI,EAAE,YAAW;AACf,IAAA,OAAOD,GAAG,CAAC,sBAAD,EAAyB,OAAzB,CAAV,CAAA;AACD,GAR0B;;AAU3B;AACF;AACA;AACA;AACEE,EAAAA,WAd2B,EAcb,YAAA;AACZ,IAAA,MAAMC,OAAO,GAAGN,QAAQ,CAACO,SAAT,CAAmBF,WAAnB,CAA+BG,KAA/B,CAAqC,IAArC,EAA2CC,SAA3C,CAAhB,CAAA;AAEA,IAAM,MAAA;AAAEC,MAAAA,QAAQ,EAARA,QAAAA;AAAF,KAAA,GAAe,KAAKC,OAA1B,CAAA;AACA,IAAMC,MAAAA,2BAA2B,GAAG,8BAApC,CAAA;AAEA,IAAA,MAAMC,cAAc,GAAGP,OAAO,CAACQ,IAAR,CAAa,CAAC;AAACC,MAAAA,IAAI,EAAJA,IAAAA;AAAD,KAAD,KAAYA,IAAI,KAAK,sBAAlC,CAAvB,CAAA;;AAEA,IAAIF,IAAAA,cAAc,IAAIG,mBAAmB,CAACJ,2BAAD,EAA8BF,QAA9B,CAAzC,EAAkF;AAChFG,MAAAA,cAAc,CAACI,OAAf,GAAyBd,GAAG,CAACS,2BAAD,EAA8B,OAA9B,CAA5B,CAAA;AACAC,MAAAA,cAAc,CAAC,aAAD,CAAd,GAAgC,IAAhC,CAAA;AACD,KAAA;;AAED,IAAA,OAAOP,OAAP,CAAA;AACD,GAAA;AA5B0B,CAAhB,CAAb,CAAA;AAgCA,MAAMY,MAAM,GAAGC,mBAAmB,CAAClB,MAApB,CAA2B;AACxCmB,EAAAA,KAAK,EAAE,YAAW;AAChB,IAAA,IAAIA,KAAK,GAAGD,mBAAmB,CAACZ,SAApB,CAA8Ba,KAA9B,CAAoCZ,KAApC,CAA0C,IAA1C,EAAgDC,SAAhD,CAAZ,CAAA;AAEAW,IAAAA,KAAK,GAAGC,qBAAqB,CAAC,IAAKV,CAAAA,OAAL,CAAaW,QAAd,EAAwB,IAAKX,CAAAA,OAAL,CAAaD,QAArC,CAArB,CAAoEa,MAApE,CAA2EH,KAA3E,CAAR,CAAA;AAEA,IAAA,OAAOA,KAAP,CAAA;AACD,GAAA;AAPuC,CAA3B,CAAf,CAAA;AAUA,yCAAeI,qBAAqB,CAACvB,MAAtB,CAA6B;AAC1CF,EAAAA,IAAI,EAAJA,IAD0C;AAE1CmB,EAAAA,MAAM,EAANA,MAAAA;AAF0C,CAA7B,CAAf;;;;"}
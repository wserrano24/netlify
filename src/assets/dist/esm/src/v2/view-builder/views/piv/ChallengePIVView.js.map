{"version":3,"file":"ChallengePIVView.js","sources":["../../../../../../../src/v2/view-builder/views/piv/ChallengePIVView.js"],"sourcesContent":["import { loc } from 'okta';\nimport { BaseForm } from '../../internals';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport PIVHeader from './PIVHeader';\n\nconst Body = BaseForm.extend({\n\n  className: 'piv-cac-card',\n  modelEvents: {\n    request: 'startAuthentication',\n    error: 'stopAuthentication',\n  },\n\n  initialize() {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    this.model.set('useRedirect', true);\n    this.addInstructions();\n  },\n\n  title() {\n    return loc('piv.cac.title', 'login');\n  },\n\n  save() {\n    return loc('retry', 'login');\n  },\n\n  addInstructions() {\n    this.add(\n      `<div class='piv-verify-text'>\n        <p>${loc('piv.cac.card.insert', 'login')}</p>\n        <div data-se='piv-waiting' class='okta-waiting-spinner'></div>\n      </div>`\n    );\n  },\n  \n  startAuthentication: function() {\n    this.$('.okta-waiting-spinner').show();\n    this.$('.o-form-button-bar').hide();\n  },\n\n  stopAuthentication: function() {\n    this.$('.okta-waiting-spinner').hide();\n    this.$('.o-form-button-bar').show();\n  }\n  \n});\n\nexport default BaseAuthenticatorView.extend({\n  Header: PIVHeader,\n  Body,\n  postRender() {\n    BaseAuthenticatorView.prototype.postRender.apply(this, arguments);\n    const messages = this.options.appState.get('messages') || {};\n    // if piv view has errors, show errors and stop authentication.\n    // otherwise trigger authentication on page load\n    if (Array.isArray(messages.value)) {\n      this.form.stopAuthentication();\n    } else {\n      this.form.startAuthentication();\n      this.form.trigger('save', this.model);\n    }\n  },\n});\n"],"names":["Body","BaseForm","extend","className","modelEvents","request","error","initialize","prototype","apply","arguments","model","set","addInstructions","title","loc","save","add","startAuthentication","$","show","hide","stopAuthentication","BaseAuthenticatorView","Header","PIVHeader","postRender","messages","options","appState","get","Array","isArray","value","form","trigger"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,MAAMA,IAAI,GAAGC,QAAQ,CAACC,MAAT,CAAgB;AAE3BC,EAAAA,SAAS,EAAE,cAFgB;AAG3BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,qBADE;AAEXC,IAAAA,KAAK,EAAE,oBAAA;AAFI,GAHc;AAQ3BC,EAAAA,UAR2B,EAQd,YAAA;AACXN,IAAAA,QAAQ,CAACO,SAAT,CAAmBD,UAAnB,CAA8BE,KAA9B,CAAoC,IAApC,EAA0CC,SAA1C,CAAA,CAAA;AACA,IAAA,IAAA,CAAKC,KAAL,CAAWC,GAAX,CAAe,aAAf,EAA8B,IAA9B,CAAA,CAAA;AACA,IAAA,IAAA,CAAKC,eAAL,EAAA,CAAA;AACD,GAZ0B;AAc3BC,EAAAA,KAd2B,EAcnB,YAAA;AACN,IAAA,OAAOC,GAAG,CAAC,eAAD,EAAkB,OAAlB,CAAV,CAAA;AACD,GAhB0B;AAkB3BC,EAAAA,IAlB2B,EAkBpB,YAAA;AACL,IAAA,OAAOD,GAAG,CAAC,OAAD,EAAU,OAAV,CAAV,CAAA;AACD,GApB0B;AAsB3BF,EAAAA,eAtB2B,EAsBT,YAAA;AAChB,IAAA,IAAA,CAAKI,GAAL,CACG,CAAA;AACP,WAAA,EAAaF,GAAG,CAAC,qBAAD,EAAwB,OAAxB,CAAiC,CAAA;AACjD;AACA,YAJI,CAAA,CAAA,CAAA;AAMD,GA7B0B;AA+B3BG,EAAAA,mBAAmB,EAAE,YAAW;AAC9B,IAAA,IAAA,CAAKC,CAAL,CAAO,uBAAP,CAAA,CAAgCC,IAAhC,EAAA,CAAA;AACA,IAAA,IAAA,CAAKD,CAAL,CAAO,oBAAP,CAAA,CAA6BE,IAA7B,EAAA,CAAA;AACD,GAlC0B;AAoC3BC,EAAAA,kBAAkB,EAAE,YAAW;AAC7B,IAAA,IAAA,CAAKH,CAAL,CAAO,uBAAP,CAAA,CAAgCE,IAAhC,EAAA,CAAA;AACA,IAAA,IAAA,CAAKF,CAAL,CAAO,oBAAP,CAAA,CAA6BC,IAA7B,EAAA,CAAA;AACD,GAAA;AAvC0B,CAAhB,CAAb,CAAA;AA2CA,uBAAeG,qBAAqB,CAACrB,MAAtB,CAA6B;AAC1CsB,EAAAA,MAAM,EAAEC,SADkC;AAE1CzB,EAAAA,IAAI,EAAJA,IAF0C;AAG1C0B,EAAAA,UAH0C,EAG7B,YAAA;AACXH,IAAAA,qBAAqB,CAACf,SAAtB,CAAgCkB,UAAhC,CAA2CjB,KAA3C,CAAiD,IAAjD,EAAuDC,SAAvD,CAAA,CAAA;AACA,IAAA,MAAMiB,QAAQ,GAAG,IAAKC,CAAAA,OAAL,CAAaC,QAAb,CAAsBC,GAAtB,CAA0B,UAA1B,CAAyC,IAAA,EAA1D,CAFW;AAIX;;AACA,IAAIC,IAAAA,KAAK,CAACC,OAAN,CAAcL,QAAQ,CAACM,KAAvB,CAAJ,EAAmC;AACjC,MAAKC,IAAAA,CAAAA,IAAL,CAAUZ,kBAAV,EAAA,CAAA;AACD,KAFD,MAEO;AACL,MAAKY,IAAAA,CAAAA,IAAL,CAAUhB,mBAAV,EAAA,CAAA;AACA,MAAA,IAAA,CAAKgB,IAAL,CAAUC,OAAV,CAAkB,MAAlB,EAA0B,KAAKxB,KAA/B,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAdyC,CAA7B,CAAf;;;;"}
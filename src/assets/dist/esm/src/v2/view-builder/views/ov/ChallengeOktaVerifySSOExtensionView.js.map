{"version":3,"file":"ChallengeOktaVerifySSOExtensionView.js","sources":["../../../../../../../src/v2/view-builder/views/ov/ChallengeOktaVerifySSOExtensionView.js"],"sourcesContent":["import BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport { BaseForm } from '../../internals';\nimport { loc, createCallout, _ } from 'okta';\nimport { getBiometricsErrorOptions } from '../../utils/ChallengeViewUtil';\n\n// for EA,\n// redirect is needed for Apple SSO Extension to intercept the request, because\n// - XHR request is not interceptable\n// - form post is interceptable, but some app (Outlook) closes the app after\n// We may have a different approach/UX for GA\nconst Body = BaseForm.extend({\n  noButtonBar: true,\n\n  className: 'ion-form device-challenge-poll',\n\n  title() {\n    return loc('deviceTrust.sso.redirectText', 'login');\n  },\n\n  initialize() {\n    BaseForm.prototype.initialize.apply(this, arguments);\n\n    this.listenTo(this.model, 'error', () => {\n      this.$('.spinner').hide();\n    });\n    this.add('<div class=\"credential-sso-extension\"><div class=\"spinner\"></div></div>');\n\n    const isGetMethod = this.options.currentViewState?.method?.toLowerCase() === 'get';\n    this.model.set('useRedirect', isGetMethod);\n    this.trigger('save', this.model);\n  },\n\n  showCustomFormErrorCallout(error) {\n    const options = getBiometricsErrorOptions(error, false);\n    \n    // If not biometrics error, just show the returned error message\n    if (_.isEmpty(options)) {\n      return false;\n    }\n\n    this.showMessages(createCallout(options));\n    return true;\n  },\n});\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n});\n"],"names":["Body","BaseForm","extend","noButtonBar","className","title","loc","initialize","prototype","apply","arguments","listenTo","model","$","hide","add","isGetMethod","options","currentViewState","method","toLowerCase","set","trigger","showCustomFormErrorCallout","error","getBiometricsErrorOptions","_","isEmpty","showMessages","createCallout","BaseAuthenticatorView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;;AACA,MAAMA,IAAI,GAAGC,QAAQ,CAACC,MAAT,CAAgB;AAC3BC,EAAAA,WAAW,EAAE,IADc;AAG3BC,EAAAA,SAAS,EAAE,gCAHgB;AAK3BC,EAAAA,KAL2B,EAKnB,YAAA;AACN,IAAA,OAAOC,GAAG,CAAC,8BAAD,EAAiC,OAAjC,CAAV,CAAA;AACD,GAP0B;AAS3BC,EAAAA,UAT2B,EASd,YAAA;AAAA,IAAA,IAAA,qBAAA,EAAA,sBAAA,CAAA;;AACXN,IAAAA,QAAQ,CAACO,SAAT,CAAmBD,UAAnB,CAA8BE,KAA9B,CAAoC,IAApC,EAA0CC,SAA1C,CAAA,CAAA;AAEA,IAAA,IAAA,CAAKC,QAAL,CAAc,IAAA,CAAKC,KAAnB,EAA0B,OAA1B,EAAmC,MAAM;AACvC,MAAA,IAAA,CAAKC,CAAL,CAAO,UAAP,CAAA,CAAmBC,IAAnB,EAAA,CAAA;AACD,KAFD,CAAA,CAAA;AAGA,IAAKC,IAAAA,CAAAA,GAAL,CAAS,yEAAT,CAAA,CAAA;AAEA,IAAMC,MAAAA,WAAW,GAAG,CAAA,CAAA,qBAAA,GAAA,IAAA,CAAKC,OAAL,CAAaC,gBAAb,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAA,qBAAA,CAA+BC,MAA/B,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAuCC,WAAvC,EAAA,MAAyD,KAA7E,CAAA;AACA,IAAA,IAAA,CAAKR,KAAL,CAAWS,GAAX,CAAe,aAAf,EAA8BL,WAA9B,CAAA,CAAA;AACA,IAAA,IAAA,CAAKM,OAAL,CAAa,MAAb,EAAqB,KAAKV,KAA1B,CAAA,CAAA;AACD,GApB0B;AAsB3BW,EAAAA,0BAtB2B,EAsBAC,UAAAA,KAtBA,EAsBO;AAChC,IAAMP,MAAAA,OAAO,GAAGQ,yBAAyB,CAACD,KAAD,EAAQ,KAAR,CAAzC,CADgC;;AAIhC,IAAA,IAAIE,cAAC,CAACC,OAAF,CAAUV,OAAV,CAAJ,EAAwB;AACtB,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AAED,IAAA,IAAA,CAAKW,YAAL,CAAkBC,aAAa,CAACZ,OAAD,CAA/B,CAAA,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;AAhC0B,CAAhB,CAAb,CAAA;AAmCA,0CAAea,qBAAqB,CAAC5B,MAAtB,CAA6B;AAC1CF,EAAAA,IAAI,EAAJA,IAAAA;AAD0C,CAA7B,CAAf;;;;"}
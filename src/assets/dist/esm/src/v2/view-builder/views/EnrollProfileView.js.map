{"version":3,"file":"EnrollProfileView.js","sources":["../../../../../../src/v2/view-builder/views/EnrollProfileView.js"],"sourcesContent":["import { loc, Model, _ } from 'okta';\nimport { BaseForm, BaseFooter, BaseView, createIdpButtons } from '../internals';\nimport { FORMS as RemediationForms } from '../../ion/RemediationConstants';\nimport { getPasswordComplexityDescriptionForHtmlList } from '../utils/AuthenticatorUtil';\nimport { generatePasswordPolicyHtml } from './password/PasswordPolicyUtil';\nimport signInWithIdps from './signin/SignInWithIdps';\n\nconst Body = BaseForm.extend({\n  title() {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      const attributes = this.options.appState.attributes;\n      if (attributes?.uiDisplay?.label) {\n        return loc('oie.registration.form.customize.label', 'login', [attributes.uiDisplay.label]);\n      } else {\n        return loc('oie.primaryauth.submit', 'login');\n      }\n    }\n    return loc('oie.registration.form.title', 'login');\n\n  },\n\n  save() {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      const attributes = this.options.appState.attributes;\n      if (attributes?.uiDisplay?.buttonLabel) {\n        return loc('oie.registration.form.customize.buttonLabel', 'login', [attributes.uiDisplay.buttonLabel]);\n      } else {\n        return loc('oie.registration.form.update.submit', 'login');\n      }\n    }\n    return loc('oie.registration.form.submit', 'login');\n\n  },\n  saveForm() {\n    // SIW customization hook for registration\n    this.settings.preRegistrationSubmit(this.model.toJSON(),\n      (postData) => {\n        this.model.attributes = {...this.model.attributes, ...this.model.parse(postData)};\n        BaseForm.prototype.saveForm.call(this, this.model);\n      },\n      (error) => this.model.trigger('error', this.model, {\n        responseJSON: error,\n      })\n    );\n  },\n  triggerAfterError(model, error) {\n    // render errors to view\n    const hasErrors = error?.responseJSON?.errorCauses\n      && Array.isArray(error.responseJSON.errorCauses);\n\n    if (hasErrors) {\n      error.responseJSON.errorCauses.forEach((err) => {\n        // only do this for invalid password for password with SSR\n        if (err.errorKey?.includes('password.passwordRequirementsNotMet')) {\n          err.errorSummary = loc('registration.error.password.passwordRequirementsNotMet', 'login');\n        } \n      });\n    }\n\n    this.options.appState.trigger('afterError', error);\n  },\n});\n\nconst Footer = BaseFooter.extend({\n  links() {\n    const links = [];\n    if (this.options.appState.hasRemediationObject(RemediationForms.SELECT_IDENTIFY)) {\n      links.push({\n        'type': 'link',\n        'label': loc('haveaccount', 'login'),\n        'name': 'back',\n        'actionPath': RemediationForms.SELECT_IDENTIFY,\n      });\n    }\n    return links;\n  }\n});\n\nexport default BaseView.extend({\n  Body,\n  Footer,\n  createModelClass(currentViewState, optionUiSchemaConfig, settings) {\n    const currentSchema = JSON.parse(JSON.stringify((currentViewState.uiSchema)));\n    let ModelClass = BaseView.prototype.createModelClass.apply(this, arguments, currentViewState);\n\n    ModelClass = ModelClass.extend({\n      toJSON: function() {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments, currentViewState);\n        // delete optional attributes if they are empty and not required\n        if(modelJSON.userProfile) {\n          const uiSchema = currentViewState.uiSchema;\n          const userProfile = modelJSON.userProfile;\n          _.each(userProfile, (value, name) => {\n            if (_.isEmpty(value)) {\n              const uiSchemaProperty = uiSchema.find(schema => schema.name === `userProfile.${name}`);\n              if (!_.isUndefined(uiSchemaProperty) && !uiSchemaProperty.required) {\n                delete userProfile[name];\n              }\n            }\n          });\n        }\n        return modelJSON;\n      }\n    });\n\n    settings.parseRegistrationSchema(currentSchema,\n      (schema) => {\n        if (!_.isEqual(schema, currentViewState.uiSchema)) {\n          currentViewState.uiSchema = schema;\n          ModelClass = BaseView.prototype.createModelClass.call(this, currentViewState, optionUiSchemaConfig);\n        }\n      },\n      (error) => {\n        ModelClass = ModelClass.extend({\n          local: {\n            parseSchemaError: {\n              value: error,\n              type: 'object',\n            },\n            ...ModelClass.prototype.local\n          },\n        });\n      }\n    );\n    return ModelClass;\n  },\n  postRender() {\n    BaseView.prototype.postRender.apply(this, arguments);\n\n    const modelError = this.model.get('parseSchemaError');\n\n    if (modelError) {\n      this.model.trigger('error', this.model, {\n        responseJSON: modelError,\n      });\n    }\n\n    // Prompt for password w/ SSR if enabled (credentials object in remediation)\n    this.renderPasswordPolicySettings();\n\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      this._addIdpView(idpButtons);\n    }\n    \n  },\n  renderPasswordPolicySettings() {\n    // retrieve password policy from \"credentials\" object in remediation\n    const currentViewState = this.options.currentViewState.value;\n    const credentials = currentViewState.filter((obj) => { return obj.name === 'credentials'; })[0];\n\n    // if \"passcode\" is present in \"credentials\", render password rules\n    const form = credentials?.form?.value;\n    if (form && form.filter((obj) => { return obj.name === 'passcode'; })) {\n      generatePasswordPolicyHtml(this,\n        getPasswordComplexityDescriptionForHtmlList(credentials?.relatesTo?.value?.settings),\n        false);\n    }\n  },\n\n  _addIdpView(idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons \n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons,\n        isPrimaryIdpDisplay\n      }\n    });\n  },\n});\n"],"names":["Body","BaseForm","extend","title","options","appState","getCurrentViewState","href","endsWith","attributes","uiDisplay","label","loc","save","buttonLabel","saveForm","settings","preRegistrationSubmit","model","toJSON","postData","parse","prototype","call","error","trigger","responseJSON","triggerAfterError","hasErrors","errorCauses","Array","isArray","forEach","err","errorKey","includes","errorSummary","Footer","BaseFooter","links","hasRemediationObject","RemediationForms","SELECT_IDENTIFY","push","BaseView","createModelClass","currentViewState","optionUiSchemaConfig","currentSchema","JSON","stringify","uiSchema","ModelClass","apply","arguments","modelJSON","Model","userProfile","_","each","value","name","isEmpty","uiSchemaProperty","find","schema","isUndefined","required","parseRegistrationSchema","isEqual","local","parseSchemaError","type","postRender","modelError","get","renderPasswordPolicySettings","idpButtons","createIdpButtons","length","_addIdpView","credentials","filter","obj","form","generatePasswordPolicyHtml","getPasswordComplexityDescriptionForHtmlList","relatesTo","idpDisplay","isPrimaryIdpDisplay","toUpperCase","add","signInWithIdps","prepend","selector"],"mappings":"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"}
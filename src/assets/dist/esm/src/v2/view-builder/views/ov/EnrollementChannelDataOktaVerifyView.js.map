{"version":3,"file":"EnrollementChannelDataOktaVerifyView.js","sources":["../../../../../../../src/v2/view-builder/views/ov/EnrollementChannelDataOktaVerifyView.js"],"sourcesContent":["import { loc, _, Model } from 'okta';\nimport { BaseForm, BaseView } from '../../internals';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport CountryUtil from '../../../../util/CountryUtil';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView';\n\nconst Body = BaseForm.extend({\n  className: 'oie-enroll-ov-data',\n  title() {\n    return this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'email' ?\n      loc('oie.enroll.okta_verify.enroll.channel.email.title', 'login'):\n      loc('oie.enroll.okta_verify.enroll.channel.sms.title', 'login');\n  },\n\n  save() {\n    return loc('oie.enroll.okta_verify.setupLink', 'login');\n  },\n\n  getUISchema() {\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const phoneNumberUISchema = _.find(uiSchemas, ({ name }) => name === 'phoneNumber');\n    const phoneNumberUISchemaIndex = _.findIndex(uiSchemas, ({ name }) => name === 'phoneNumber');\n\n    const countryUISchema = {\n      'label-top': true,\n      label: loc('country.label', 'login'),\n      type: 'select',\n      options: CountryUtil.getCountries(),\n      name: 'country',\n      wide: true,\n    };\n\n    // Create an input group - serves as a display wrapper\n    const phoneNumberWithCodeUISchema = {\n      label: loc('mfa.phoneNumber.placeholder', 'login'),\n      type: 'group',\n      modelType: 'string',\n      'label-top': true,\n      name: 'phoneCode',\n      input: [\n        {\n          type: 'label',\n          /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n          label: `+${this.model.get('phoneCode')}`,\n          className: 'country-code-label no-translate',\n        },\n        Object.assign({}, phoneNumberUISchema),\n      ],\n    };\n\n    if (phoneNumberUISchemaIndex !== -1) {\n      // Replace phoneNumberUISchema and add countryUISchema before phone.\n      uiSchemas.splice(phoneNumberUISchemaIndex, 1, countryUISchema, phoneNumberWithCodeUISchema);\n    }\n\n    const description = {\n      View: this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'email' ?\n        loc('oie.enroll.okta_verify.channel.email.description', 'login'):\n        loc('oie.enroll.okta_verify.channel.sms.description', 'login'),\n      selector: '.o-form-fieldset-container',\n    };\n\n    uiSchemas.push(description);\n    return uiSchemas;\n  },\n\n  handlePhoneCodeChange() {\n    const countryCodeField = this.el.querySelector('.country-code-label');\n    countryCodeField.innerText = `+${this.model.get('phoneCode')}`;\n  },\n\n  initialize() {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    if (this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'sms') {\n      this.listenTo(this.model, 'change:phoneCode', this.handlePhoneCodeChange.bind(this));\n    }\n  },\n});\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n  createModelClass() {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n    if (this.options.appState.get('currentAuthenticator').contextualData.selectedChannel !== 'sms') {\n      return ModelClass;\n    }\n    const local = Object.assign(\n      {\n        country: {\n          // Set default country to \"US\"\n          'value': 'US',\n          'type': 'string',\n        },\n      },\n      ModelClass.prototype.local,\n    );\n    const derived = Object.assign(\n      {\n        phoneCode: {\n          deps: [ 'country'],\n          fn: function(country) {\n            return CountryUtil.getCallingCodeForCountry(country);\n          },\n        },\n      },\n      ModelClass.prototype.derived,\n    );\n    return ModelClass.extend({\n      local,\n      derived,\n      toJSON: function() {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments);\n        const phoneCode = this.get('phoneCode');\n\n        // Add country code..\n        let formattedPhoneNumber = `+${phoneCode}${modelJSON.phoneNumber}`;\n\n        // Override phone with formatted number..\n        modelJSON.phoneNumber = formattedPhoneNumber;\n        return modelJSON;\n      },\n    });\n  },\n  postRender() {\n    this.add(SwitchEnrollChannelLinkView, 'form');\n  },\n});\n"],"names":["Body","BaseForm","extend","className","title","options","appState","get","contextualData","selectedChannel","loc","save","getUISchema","uiSchemas","prototype","apply","arguments","phoneNumberUISchema","_","find","name","phoneNumberUISchemaIndex","findIndex","countryUISchema","label","type","CountryUtil","getCountries","wide","phoneNumberWithCodeUISchema","modelType","input","model","Object","assign","splice","description","View","selector","push","handlePhoneCodeChange","countryCodeField","el","querySelector","innerText","initialize","listenTo","bind","BaseAuthenticatorView","createModelClass","ModelClass","BaseView","local","country","derived","phoneCode","deps","fn","getCallingCodeForCountry","toJSON","modelJSON","Model","call","formattedPhoneNumber","phoneNumber","postRender","add","SwitchEnrollChannelLinkView"],"mappings":"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"}
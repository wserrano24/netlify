{"version":3,"file":"EnrollPollOktaVerifyView.js","sources":["../../../../../../../src/v2/view-builder/views/ov/EnrollPollOktaVerifyView.js"],"sourcesContent":["import { loc } from 'okta';\nimport { BaseFormWithPolling } from '../../internals';\nimport BrowserFeatures from '../../../../util/BrowserFeatures';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport polling from '../shared/polling';\nimport { FORMS as RemediationForms } from '../../../ion/RemediationConstants';\nimport OVResendView from './OVResendView';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView';\nimport EnrollChannelPollDescriptionView from './EnrollChannelPollDescriptionView';\n\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS =\n  'oie.authenticator.app.non_fips_compliant_enrollment_device_incompatible';\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS =\n  'oie.authenticator.app.non_fips_compliant_enrollment_app_update_required';\nconst OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY = 'oie.authenticator.app.method.push.enroll.enable.biometrics';\n\nconst Body = BaseFormWithPolling.extend(Object.assign(\n  {\n    title() {\n      const selectedChannel = this.options.appState.get('currentAuthenticator').contextualData.selectedChannel;\n      let title;\n      switch (selectedChannel) {\n      case 'email':\n        title = loc('oie.enroll.okta_verify.setup.email.title', 'login');\n        break;\n      case 'sms':\n        title = loc('oie.enroll.okta_verify.setup.sms.title', 'login');\n        break;\n      default:\n        title = loc('oie.enroll.okta_verify.setup.title', 'login');\n      }\n      return title;\n    },\n    className: 'oie-enroll-ov-poll',\n    noButtonBar: true,\n    initialize() {\n      BaseFormWithPolling.prototype.initialize.apply(this, arguments);\n      this.listenTo(this.model, 'error', this.stopPolling);\n      this.startPolling();\n    },\n    postRender() {\n      BaseFormWithPolling.prototype.postRender.apply(this, arguments);\n\n      if ((BrowserFeatures.isAndroid() || BrowserFeatures.isIOS()) &\n        this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'qrcode') {\n        this.options.appState.trigger('switchForm', RemediationForms.SELECT_ENROLLMENT_CHANNEL);\n      }\n    },\n    showMessages() {\n      // override showMessages to display custom callout\n      const calloutOptions = {};\n      if (this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS) ||\n        this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS)) {\n        // add a title for ov force upgrade\n        calloutOptions.title = loc('oie.okta_verify.enroll.force.upgrade.title', 'login');\n      } else if (this.options.appState.containsMessageWithI18nKey(OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY)) {\n        // add a title for OV enable biometrics message during enrollment\n        calloutOptions.title = loc('oie.authenticator.app.method.push.enroll.enable.biometrics.title', 'login');\n      }\n      BaseFormWithPolling.prototype.showMessages.call(this, calloutOptions);\n    },\n    getUISchema() {\n      const schema = [];\n      const contextualData = this.options.appState.get('currentAuthenticator').contextualData;\n      const selectedChannel = contextualData.selectedChannel;\n      schema.push({\n        View: EnrollChannelPollDescriptionView,\n      });\n      schema.push({\n        View: SwitchEnrollChannelLinkView,\n        options: {\n          selectedChannel\n        },\n        selector: selectedChannel === 'qrcode' ? '.qrcode-container' : '.switch-channel-content',\n      });\n      if (['email', 'sms'].includes(selectedChannel)) {\n        schema.push({\n          View: OVResendView,\n          selector: '.o-form-error-container',\n        });\n      }\n      return schema;\n    },\n    remove() {\n      BaseFormWithPolling.prototype.remove.apply(this, arguments);\n      this.stopPolling();\n    },\n  },\n\n  polling,\n));\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n});\n"],"names":["OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS","OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS","OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY","Body","BaseFormWithPolling","extend","Object","assign","title","selectedChannel","options","appState","get","contextualData","loc","className","noButtonBar","initialize","prototype","apply","arguments","listenTo","model","stopPolling","startPolling","postRender","BrowserFeatures","isAndroid","isIOS","trigger","RemediationForms","SELECT_ENROLLMENT_CHANNEL","showMessages","calloutOptions","containsMessageWithI18nKey","call","getUISchema","schema","push","View","EnrollChannelPollDescriptionView","SwitchEnrollChannelLinkView","selector","includes","OVResendView","remove","polling","BaseAuthenticatorView"],"mappings":"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"}
{"version":3,"file":"AdminConsentView.js","sources":["../../../../../../../src/v2/view-builder/views/consent/AdminConsentView.js"],"sourcesContent":["import { BaseView } from '../../internals';\nimport { loc } from 'okta';\nimport AdminConsentViewHeader from './AdminConsentViewHeader';\nimport ConsentViewForm from './ConsentViewForm';\nimport { doesI18NKeyExist } from '../../../ion/i18nTransformer';\n\nexport default BaseView.extend({\n  Header: AdminConsentViewHeader,\n  Body: ConsentViewForm,\n  createModelClass(currentViewState) {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n    const { uiSchema } = currentViewState;\n    const { scopes } = uiSchema[0];\n\n    const i18nKeyPrefix = 'consent.scopes';\n\n    const localizedScopes = scopes.map(({ name, displayName, description }) => {\n      const scopeKey = `${i18nKeyPrefix}.${name}`;\n      const labelKey = `${scopeKey}.label`;\n      const descKey = `${scopeKey}.desc`;\n      const doesLabelExist = doesI18NKeyExist(labelKey);\n      const doesDescExist = doesI18NKeyExist(descKey);\n      const i18nDisplayName = doesLabelExist ? loc(labelKey, 'login') : displayName;\n      const i18nDescription = doesDescExist ? loc(descKey, 'login'): description;\n\n      return {\n        name,\n        displayName: i18nDisplayName,\n        description: i18nDescription,\n        isCustomized: !doesLabelExist,\n      };\n    });\n\n    return ModelClass.extend({\n      props: {\n        scopes: {type: 'array', value: localizedScopes},\n      },\n      local: {\n        consent: {type: 'boolean', value: false},\n      },\n      toJSON: function() {\n        return {consent: this.get('consent')};\n      }\n    });\n  }\n});\n"],"names":["BaseView","extend","Header","AdminConsentViewHeader","Body","ConsentViewForm","createModelClass","currentViewState","ModelClass","prototype","apply","arguments","uiSchema","scopes","i18nKeyPrefix","localizedScopes","map","name","displayName","description","scopeKey","labelKey","descKey","doesLabelExist","doesI18NKeyExist","doesDescExist","i18nDisplayName","loc","i18nDescription","isCustomized","props","type","value","local","consent","toJSON","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,uBAAeA,QAAQ,CAACC,MAAT,CAAgB;AAC7BC,EAAAA,MAAM,EAAEC,sBADqB;AAE7BC,EAAAA,IAAI,EAAEC,eAFuB;AAG7BC,EAAAA,gBAH6B,EAGZC,UAAAA,gBAHY,EAGM;AACjC,IAAA,MAAMC,UAAU,GAAGR,QAAQ,CAACS,SAAT,CAAmBH,gBAAnB,CAAoCI,KAApC,CAA0C,IAA1C,EAAgDC,SAAhD,CAAnB,CAAA;AACA,IAAM,MAAA;AAAEC,MAAAA,QAAQ,EAARA,QAAAA;AAAF,KAAA,GAAeL,gBAArB,CAAA;AACA,IAAM,MAAA;AAAEM,MAAAA,MAAM,EAANA,MAAAA;AAAF,KAAaD,GAAAA,QAAQ,CAAC,CAAD,CAA3B,CAAA;AAEA,IAAME,MAAAA,aAAa,GAAG,gBAAtB,CAAA;AAEA,IAAA,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAP,CAAW,CAAC;AAAEC,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,WAAW,EAAXA,WAAR;AAAqBC,MAAAA,WAAW,EAAXA,WAAAA;AAArB,KAAD,KAAwC;AACzE,MAAA,MAAMC,QAAQ,GAAI,CAAA,EAAEN,aAAc,CAAA,CAAA,EAAGG,IAAK,CAA1C,CAAA,CAAA;AACA,MAAA,MAAMI,QAAQ,GAAI,CAAED,EAAAA,QAAS,CAA7B,MAAA,CAAA,CAAA;AACA,MAAA,MAAME,OAAO,GAAI,CAAEF,EAAAA,QAAS,CAA5B,KAAA,CAAA,CAAA;AACA,MAAA,MAAMG,cAAc,GAAGC,gBAAgB,CAACH,QAAD,CAAvC,CAAA;AACA,MAAA,MAAMI,aAAa,GAAGD,gBAAgB,CAACF,OAAD,CAAtC,CAAA;AACA,MAAMI,MAAAA,eAAe,GAAGH,cAAc,GAAGI,GAAG,CAACN,QAAD,EAAW,OAAX,CAAN,GAA4BH,WAAlE,CAAA;AACA,MAAMU,MAAAA,eAAe,GAAGH,aAAa,GAAGE,GAAG,CAACL,OAAD,EAAU,OAAV,CAAN,GAA0BH,WAA/D,CAAA;AAEA,MAAO,OAAA;AACLF,QAAAA,IAAI,EAAJA,IADK;AAELC,QAAAA,WAAW,EAAEQ,eAFR;AAGLP,QAAAA,WAAW,EAAES,eAHR;AAILC,QAAAA,YAAY,EAAE,CAACN,cAAAA;AAJV,OAAP,CAAA;AAMD,KAfuB,CAAxB,CAAA;AAiBA,IAAOf,OAAAA,UAAU,CAACP,MAAX,CAAkB;AACvB6B,MAAAA,KAAK,EAAE;AACLjB,QAAAA,MAAM,EAAE;AAACkB,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,KAAK,EAAEjB,eAAAA;AAAvB,SAAA;AADH,OADgB;AAIvBkB,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AAACH,UAAAA,IAAI,EAAE,SAAP;AAAkBC,UAAAA,KAAK,EAAE,KAAA;AAAzB,SAAA;AADJ,OAJgB;AAOvBG,MAAAA,MAAM,EAAE,YAAW;AACjB,QAAO,OAAA;AAACD,UAAAA,OAAO,EAAE,IAAKE,CAAAA,GAAL,CAAS,SAAT,CAAA;AAAV,SAAP,CAAA;AACD,OAAA;AATsB,KAAlB,CAAP,CAAA;AAWD,GAAA;AAtC4B,CAAhB,CAAf;;;;"}
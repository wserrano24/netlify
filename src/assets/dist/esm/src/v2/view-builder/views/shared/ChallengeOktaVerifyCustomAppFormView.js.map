{"version":3,"file":"ChallengeOktaVerifyCustomAppFormView.js","sources":["../../../../../../../src/v2/view-builder/views/shared/ChallengeOktaVerifyCustomAppFormView.js"],"sourcesContent":["// Common view for OV push and custom app.\nimport { Collection } from 'okta';\nimport { BaseForm } from '../../internals';\nimport AuthenticatorVerifyOptions from '../../components/AuthenticatorVerifyOptions';\nimport { getAuthenticatorDataForVerification } from '../../utils/AuthenticatorUtil';\nimport { Body as SelectAuthenticatorVerifyViewBody } from '../SelectAuthenticatorVerifyView';\nimport { AUTHENTICATOR_KEY } from '../../../ion/RemediationConstants';\n\nconst Body = SelectAuthenticatorVerifyViewBody.extend({\n  getUISchema() {\n    // Change the UI schema to not display radios here.\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const methodsSchema = uiSchemas.find(schema => schema.name === 'authenticator.methodType');\n\n    this._sortMethodOptionsIfDeviceKnown(methodsSchema.options);\n\n    const methodOptions = methodsSchema.options.map((option) => {\n      return Object.assign({}, option, getAuthenticatorDataForVerification({authenticatorKey:\n            this.isOV() ? AUTHENTICATOR_KEY.OV : AUTHENTICATOR_KEY.CUSTOM_APP}));\n    });\n    return [{\n      View: AuthenticatorVerifyOptions,\n      options: {\n        name: methodsSchema.name,\n        collection: new Collection(methodOptions),\n      }\n    }];\n  },\n\n  // If the `deviceKnown` attribute is true, we should put the signed_nonce method to the top of authenticator list.\n  // This is in sync with v2/ion/ui-schema/ion-object-handler.js - createOVOptions\n  _sortMethodOptionsIfDeviceKnown(methodOptions) {\n    // Check if the `deviceKnown` attribute is true\n    const deviceKnown = this.options?.currentViewState?.relatesTo?.value?.deviceKnown;\n\n    if (deviceKnown) {\n      const signedNonceIndex = methodOptions.findIndex((e) => e.value === 'signed_nonce');\n\n      if (signedNonceIndex > 0) {\n        const signedNonceModel = methodOptions[signedNonceIndex];\n\n        // Put the 'signed_nonce' option to the top of the list\n        methodOptions.splice(signedNonceIndex, 1);\n        methodOptions.unshift(signedNonceModel);\n      }\n    }\n  },\n  isOV() {\n    return this.options.appState.get('authenticatorKey') === AUTHENTICATOR_KEY.OV;\n  },\n});\n\nexport default Body;\n"],"names":["Body","SelectAuthenticatorVerifyViewBody","extend","getUISchema","uiSchemas","BaseForm","prototype","apply","arguments","methodsSchema","find","schema","name","_sortMethodOptionsIfDeviceKnown","options","methodOptions","map","option","Object","assign","getAuthenticatorDataForVerification","authenticatorKey","isOV","AUTHENTICATOR_KEY","OV","CUSTOM_APP","View","AuthenticatorVerifyOptions","collection","Collection","deviceKnown","currentViewState","relatesTo","value","signedNonceIndex","findIndex","e","signedNonceModel","splice","unshift","appState","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAQA,MAAMA,IAAI,GAAGC,MAAiC,CAACC,MAAlC,CAAyC;AACpDC,EAAAA,WADoD,EACtC,YAAA;AACZ;AACA,IAAA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,SAAT,CAAmBH,WAAnB,CAA+BI,KAA/B,CAAqC,IAArC,EAA2CC,SAA3C,CAAlB,CAAA;AACA,IAAA,MAAMC,aAAa,GAAGL,SAAS,CAACM,IAAV,CAAeC,MAAM,IAAIA,MAAM,CAACC,IAAP,KAAgB,0BAAzC,CAAtB,CAAA;;AAEA,IAAA,IAAA,CAAKC,+BAAL,CAAqCJ,aAAa,CAACK,OAAnD,CAAA,CAAA;;AAEA,IAAMC,MAAAA,aAAa,GAAGN,aAAa,CAACK,OAAd,CAAsBE,GAAtB,CAA2BC,MAAD,IAAY;AAC1D,MAAOC,OAAAA,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,MAAlB,EAA0BG,mCAAmC,CAAC;AAACC,QAAAA,gBAAgB,EAChF,IAAA,CAAKC,IAAL,EAAA,GAAcC,iBAAiB,CAACC,EAAhC,GAAqCD,iBAAiB,CAACE,UAAAA;AADQ,OAAD,CAA7D,CAAP,CAAA;AAED,KAHqB,CAAtB,CAAA;AAIA,IAAA,OAAO,CAAC;AACNC,MAAAA,IAAI,EAAEC,0BADA;AAENb,MAAAA,OAAO,EAAE;AACPF,QAAAA,IAAI,EAAEH,aAAa,CAACG,IADb;AAEPgB,QAAAA,UAAU,EAAE,IAAIC,UAAJ,CAAed,aAAf,CAAA;AAFL,OAAA;AAFH,KAAD,CAAP,CAAA;AAOD,GAnBmD;AAqBpD;AACA;AACAF,EAAAA,+BAvBoD,EAuBpBE,UAAAA,aAvBoB,EAuBL;AAAA,IAAA,IAAA,aAAA,EAAA,qBAAA,EAAA,sBAAA,EAAA,sBAAA,CAAA;;AAC7C;AACA,IAAA,MAAMe,WAAW,GAAA,CAAA,aAAA,GAAG,IAAKhB,CAAAA,OAAR,2EAAG,aAAciB,CAAAA,gBAAjB,MAAG,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAA,qBAAA,CAAgCC,SAAnC,MAAG,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAA,sBAAA,CAA2CC,KAA9C,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAG,uBAAkDH,WAAtE,CAAA;;AAEA,IAAA,IAAIA,WAAJ,EAAiB;AACf,MAAA,MAAMI,gBAAgB,GAAGnB,aAAa,CAACoB,SAAd,CAAyBC,CAAD,IAAOA,CAAC,CAACH,KAAF,KAAY,cAA3C,CAAzB,CAAA;;AAEA,MAAIC,IAAAA,gBAAgB,GAAG,CAAvB,EAA0B;AACxB,QAAA,MAAMG,gBAAgB,GAAGtB,aAAa,CAACmB,gBAAD,CAAtC,CADwB;;AAIxBnB,QAAAA,aAAa,CAACuB,MAAd,CAAqBJ,gBAArB,EAAuC,CAAvC,CAAA,CAAA;AACAnB,QAAAA,aAAa,CAACwB,OAAd,CAAsBF,gBAAtB,CAAA,CAAA;AACD,OAAA;AACF,KAAA;AACF,GAtCmD;AAuCpDf,EAAAA,IAvCoD,EAuC7C,YAAA;AACL,IAAO,OAAA,IAAA,CAAKR,OAAL,CAAa0B,QAAb,CAAsBC,GAAtB,CAA0B,kBAA1B,CAAA,KAAkDlB,iBAAiB,CAACC,EAA3E,CAAA;AACD,GAAA;AAzCmD,CAAzC;;;;"}
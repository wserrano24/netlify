{"version":3,"file":"ChallengeOktaVerifyResendPushView.js","sources":["../../../../../../../src/v2/view-builder/views/ov/ChallengeOktaVerifyResendPushView.js"],"sourcesContent":["import { loc, createCallout } from 'okta';\nimport { BaseForm } from '../../internals';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\n\nconst OV_NMC_FORCE_UPGRAGE_SERVER_KEY = 'oie.authenticator.app.method.push.force.upgrade.number_challenge';\nconst OV_UV_ENABLE_BIOMETRIC_SERVER_KEY = 'oie.authenticator.app.method.push.verify.enable.biometrics';\n\nconst Body = BaseForm.extend(Object.assign(\n  {\n    className: 'okta-verify-resend-push',\n\n    title() {\n      return loc('oie.okta_verify.push.title', 'login');\n    },\n\n    save() {\n      return loc('oie.okta_verify.push.resend', 'login');\n    },\n\n    showMessages() {\n      let options = {};\n      if (this.options.appState.containsMessageWithI18nKey(OV_NMC_FORCE_UPGRAGE_SERVER_KEY)) {\n        // add a title for OV force upgrade\n        options.title = loc('oie.numberchallenge.force.upgrade.title', 'login');\n      } else if (this.options.appState.containsMessageWithI18nKey(OV_UV_ENABLE_BIOMETRIC_SERVER_KEY)) {\n        // add a title for OV enable biometrics message during verification\n        options.content = null;\n        options.className = 'okta-verify-uv-callout-content';\n        options.title = loc('oie.authenticator.app.method.push.verify.enable.biometrics.title', 'login');\n        options.subtitle = loc('oie.authenticator.app.method.push.verify.enable.biometrics.description', 'login');\n        options.type = 'error';\n        options.bullets = [\n          loc('oie.authenticator.app.method.push.verify.enable.biometrics.point1', 'login'),\n          loc('oie.authenticator.app.method.push.verify.enable.biometrics.point2', 'login'),\n          loc('oie.authenticator.app.method.push.verify.enable.biometrics.point3', 'login')\n        ];\n        options = createCallout(options);\n      }\n      BaseForm.prototype.showMessages.call(this, options);\n    },\n  },\n));\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n});\n"],"names":["OV_NMC_FORCE_UPGRAGE_SERVER_KEY","OV_UV_ENABLE_BIOMETRIC_SERVER_KEY","Body","BaseForm","extend","Object","assign","className","title","loc","save","showMessages","options","appState","containsMessageWithI18nKey","content","subtitle","type","bullets","createCallout","prototype","call","BaseAuthenticatorView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAMA,+BAA+B,GAAG,kEAAxC,CAAA;AACA,MAAMC,iCAAiC,GAAG,4DAA1C,CAAA;AAEA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,MAAT,CAAgBC,MAAM,CAACC,MAAP,CAC3B;AACEC,EAAAA,SAAS,EAAE,yBADb;AAGEC,EAAAA,KAHF,EAGU,YAAA;AACN,IAAA,OAAOC,GAAG,CAAC,4BAAD,EAA+B,OAA/B,CAAV,CAAA;AACD,GALH;AAOEC,EAAAA,IAPF,EAOS,YAAA;AACL,IAAA,OAAOD,GAAG,CAAC,6BAAD,EAAgC,OAAhC,CAAV,CAAA;AACD,GATH;AAWEE,EAAAA,YAXF,EAWiB,YAAA;AACb,IAAIC,IAAAA,OAAO,GAAG,EAAd,CAAA;;AACA,IAAI,IAAA,IAAA,CAAKA,OAAL,CAAaC,QAAb,CAAsBC,0BAAtB,CAAiDd,+BAAjD,CAAJ,EAAuF;AACrF;AACAY,MAAAA,OAAO,CAACJ,KAAR,GAAgBC,GAAG,CAAC,yCAAD,EAA4C,OAA5C,CAAnB,CAAA;AACD,KAHD,MAGO,IAAI,IAAA,CAAKG,OAAL,CAAaC,QAAb,CAAsBC,0BAAtB,CAAiDb,iCAAjD,CAAJ,EAAyF;AAC9F;AACAW,MAAAA,OAAO,CAACG,OAAR,GAAkB,IAAlB,CAAA;AACAH,MAAAA,OAAO,CAACL,SAAR,GAAoB,gCAApB,CAAA;AACAK,MAAAA,OAAO,CAACJ,KAAR,GAAgBC,GAAG,CAAC,kEAAD,EAAqE,OAArE,CAAnB,CAAA;AACAG,MAAAA,OAAO,CAACI,QAAR,GAAmBP,GAAG,CAAC,wEAAD,EAA2E,OAA3E,CAAtB,CAAA;AACAG,MAAAA,OAAO,CAACK,IAAR,GAAe,OAAf,CAAA;AACAL,MAAAA,OAAO,CAACM,OAAR,GAAkB,CAChBT,GAAG,CAAC,mEAAD,EAAsE,OAAtE,CADa,EAEhBA,GAAG,CAAC,mEAAD,EAAsE,OAAtE,CAFa,EAGhBA,GAAG,CAAC,mEAAD,EAAsE,OAAtE,CAHa,CAAlB,CAAA;AAKAG,MAAAA,OAAO,GAAGO,aAAa,CAACP,OAAD,CAAvB,CAAA;AACD,KAAA;;AACDT,IAAAA,QAAQ,CAACiB,SAAT,CAAmBT,YAAnB,CAAgCU,IAAhC,CAAqC,IAArC,EAA2CT,OAA3C,CAAA,CAAA;AACD,GAAA;AA/BH,CAD2B,CAAhB,CAAb,CAAA;AAoCA,wCAAeU,qBAAqB,CAAClB,MAAtB,CAA6B;AAC1CF,EAAAA,IAAI,EAAJA,IAAAA;AAD0C,CAA7B,CAAf;;;;"}
{"version":3,"file":"DeviceFingerprinting.js","sources":["../../../../../../src/v2/view-builder/utils/DeviceFingerprinting.js"],"sourcesContent":["/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// TODO: Use AuthJS for device fingerprinting: OKTA-418160\nimport { $ } from 'okta';\n\nfunction getUserAgent() {\n  return navigator.userAgent;\n}\n\nfunction isWindowsPhone(userAgent) {\n  return userAgent.match(/windows phone|iemobile|wpdesktop/i);\n}\n\nexport default {\n  isMessageFromCorrectSource($iframe, event) {\n    return event.source === $iframe[0].contentWindow;\n  },\n\n  // NOTE: This utility is similar to the DeviceFingerprint.js file used for V1 authentication flows.\n  generateDeviceFingerprint(fingerprintData) {\n    return new Promise((resolve, reject) => {\n      const userAgent = getUserAgent();\n      if (!userAgent) {\n        return reject('user agent is not defined');\n      } else if (isWindowsPhone(userAgent)) {\n        return reject('device fingerprint is not supported on Windows phones');\n      }\n\n      let $iframe;\n      let iFrameTimeout;\n      const self = this; // Needed for mocking\n\n      function removeIframe() {\n        $iframe.off();\n        $iframe.remove();\n        window.removeEventListener('message', onMessageReceivedFromOkta, false);\n      }\n\n      function handleError(reason) {\n        removeIframe();\n        reject(reason);\n      }\n\n      function onMessageReceivedFromOkta(event) {\n        if (!self.isMessageFromCorrectSource($iframe, event)) {\n          return;\n        }\n        // deviceFingerprint service is available, clear timeout\n        clearTimeout(iFrameTimeout);\n        if (!event || !event.data || event.origin !== fingerprintData.oktaDomainUrl) {\n          handleError('no data');\n          return;\n        }\n        try {\n          const message = JSON.parse(event.data);\n\n          if (message && message.type === 'FingerprintServiceReady') {\n            sendMessageToOkta({\n              type: 'GetFingerprint',\n            });\n          } else if (message && message.type === 'FingerprintAvailable') {\n            removeIframe();\n            resolve(message.fingerprint);\n          } else {\n            handleError('no data');\n          }\n        } catch (error) {\n          //Ignore any errors since we could get other messages too\n        }\n      }\n\n      function sendMessageToOkta(message) {\n        const win = $iframe[0].contentWindow;\n\n        if (win) {\n          win.postMessage(JSON.stringify(message), fingerprintData.oktaDomainUrl);\n        }\n      }\n\n      // Attach listener\n      window.addEventListener('message', onMessageReceivedFromOkta, false);\n      // Create and Load devicefingerprint page inside the iframe\n      $iframe = $('<iframe>', {\n        style: 'display: none;',\n        src: fingerprintData.oktaDomainUrl + '/auth/services/devicefingerprint',\n      });\n      fingerprintData.element.append($iframe);\n\n      iFrameTimeout = setTimeout(() => {\n        // If the iFrame does not load or there is a slow connection, throw an error\n        handleError('service not available');\n      }, 2000);\n    });\n  }\n};\n"],"names":["getUserAgent","navigator","userAgent","isWindowsPhone","match","isMessageFromCorrectSource","$iframe","event","source","contentWindow","generateDeviceFingerprint","fingerprintData","Promise","resolve","reject","iFrameTimeout","self","removeIframe","off","remove","window","removeEventListener","onMessageReceivedFromOkta","handleError","reason","clearTimeout","data","origin","oktaDomainUrl","message","JSON","parse","type","sendMessageToOkta","fingerprint","error","win","postMessage","stringify","addEventListener","$","style","src","element","append","setTimeout"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,SAASA,YAAT,GAAwB;AACtB,EAAOC,OAAAA,SAAS,CAACC,SAAjB,CAAA;AACD,CAAA;;AAED,SAASC,cAAT,CAAwBD,SAAxB,EAAmC;AACjC,EAAA,OAAOA,SAAS,CAACE,KAAV,CAAgB,mCAAhB,CAAP,CAAA;AACD,CAAA;;AAED,2BAAe;AACbC,EAAAA,0BADa,EAAA,UACcC,OADd,EACuBC,KADvB,EAC8B;AACzC,IAAOA,OAAAA,KAAK,CAACC,MAAN,KAAiBF,OAAO,CAAC,CAAD,CAAP,CAAWG,aAAnC,CAAA;AACD,GAHY;AAKb;AACAC,EAAAA,yBANa,EAMaC,UAAAA,eANb,EAM8B;AACzC,IAAA,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,MAAMZ,MAAAA,SAAS,GAAGF,YAAY,EAA9B,CAAA;;AACA,MAAI,IAAA,CAACE,SAAL,EAAgB;AACd,QAAOY,OAAAA,MAAM,CAAC,2BAAD,CAAb,CAAA;AACD,OAFD,MAEO,IAAIX,cAAc,CAACD,SAAD,CAAlB,EAA+B;AACpC,QAAOY,OAAAA,MAAM,CAAC,uDAAD,CAAb,CAAA;AACD,OAAA;;AAED,MAAA,IAAIR,OAAJ,CAAA;AACA,MAAA,IAAIS,aAAJ,CAAA;AACA,MAAA,MAAMC,IAAI,GAAG,IAAb,CAVsC;;AAYtC,MAAA,SAASC,YAAT,GAAwB;AACtBX,QAAAA,OAAO,CAACY,GAAR,EAAA,CAAA;AACAZ,QAAAA,OAAO,CAACa,MAAR,EAAA,CAAA;AACAC,QAAAA,MAAM,CAACC,mBAAP,CAA2B,SAA3B,EAAsCC,yBAAtC,EAAiE,KAAjE,CAAA,CAAA;AACD,OAAA;;AAED,MAASC,SAAAA,WAAT,CAAqBC,MAArB,EAA6B;AAC3BP,QAAAA,YAAY,EAAA,CAAA;AACZH,QAAAA,MAAM,CAACU,MAAD,CAAN,CAAA;AACD,OAAA;;AAED,MAASF,SAAAA,yBAAT,CAAmCf,KAAnC,EAA0C;AACxC,QAAI,IAAA,CAACS,IAAI,CAACX,0BAAL,CAAgCC,OAAhC,EAAyCC,KAAzC,CAAL,EAAsD;AACpD,UAAA,OAAA;AACD,SAHuC;;;AAKxCkB,QAAAA,YAAY,CAACV,aAAD,CAAZ,CAAA;;AACA,QAAA,IAAI,CAACR,KAAD,IAAU,CAACA,KAAK,CAACmB,IAAjB,IAAyBnB,KAAK,CAACoB,MAAN,KAAiBhB,eAAe,CAACiB,aAA9D,EAA6E;AAC3EL,UAAAA,WAAW,CAAC,SAAD,CAAX,CAAA;AACA,UAAA,OAAA;AACD,SAAA;;AACD,QAAI,IAAA;AACF,UAAMM,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWxB,KAAK,CAACmB,IAAjB,CAAhB,CAAA;;AAEA,UAAA,IAAIG,OAAO,IAAIA,OAAO,CAACG,IAAR,KAAiB,yBAAhC,EAA2D;AACzDC,YAAAA,iBAAiB,CAAC;AAChBD,cAAAA,IAAI,EAAE,gBAAA;AADU,aAAD,CAAjB,CAAA;AAGD,WAJD,MAIO,IAAIH,OAAO,IAAIA,OAAO,CAACG,IAAR,KAAiB,sBAAhC,EAAwD;AAC7Df,YAAAA,YAAY,EAAA,CAAA;AACZJ,YAAAA,OAAO,CAACgB,OAAO,CAACK,WAAT,CAAP,CAAA;AACD,WAHM,MAGA;AACLX,YAAAA,WAAW,CAAC,SAAD,CAAX,CAAA;AACD,WAAA;AACF,SAbD,CAaE,OAAOY,KAAP,EAAc;AAEf,SAAA;AACF,OAAA;;AAED,MAASF,SAAAA,iBAAT,CAA2BJ,OAA3B,EAAoC;AAClC,QAAA,MAAMO,GAAG,GAAG9B,OAAO,CAAC,CAAD,CAAP,CAAWG,aAAvB,CAAA;;AAEA,QAAA,IAAI2B,GAAJ,EAAS;AACPA,UAAAA,GAAG,CAACC,WAAJ,CAAgBP,IAAI,CAACQ,SAAL,CAAeT,OAAf,CAAhB,EAAyClB,eAAe,CAACiB,aAAzD,CAAA,CAAA;AACD,SAAA;AACF,OAzDqC;;;AA4DtCR,MAAAA,MAAM,CAACmB,gBAAP,CAAwB,SAAxB,EAAmCjB,yBAAnC,EAA8D,KAA9D,CAAA,CA5DsC;;AA8DtChB,MAAAA,OAAO,GAAGkC,gBAAC,CAAC,UAAD,EAAa;AACtBC,QAAAA,KAAK,EAAE,gBADe;AAEtBC,QAAAA,GAAG,EAAE/B,eAAe,CAACiB,aAAhB,GAAgC,kCAAA;AAFf,OAAb,CAAX,CAAA;AAIAjB,MAAAA,eAAe,CAACgC,OAAhB,CAAwBC,MAAxB,CAA+BtC,OAA/B,CAAA,CAAA;AAEAS,MAAAA,aAAa,GAAG8B,UAAU,CAAC,MAAM;AAC/B;AACAtB,QAAAA,WAAW,CAAC,uBAAD,CAAX,CAAA;AACD,OAHyB,EAGvB,IAHuB,CAA1B,CAAA;AAID,KAxEM,CAAP,CAAA;AAyED,GAAA;AAhFY,CAAf;;;;"}
{"version":3,"file":"AuthenticatorEnrollOptions.js","sources":["../../../../../../src/v2/view-builder/components/AuthenticatorEnrollOptions.js"],"sourcesContent":["/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport { ListView, loc, View, createButton } from 'okta';\nimport { FORMS as RemediationForms } from '../../ion/RemediationConstants';\nimport skipAll from './SkipOptionalEnrollmentButton';\nimport hbs from 'handlebars-inline-precompile';\nimport { AUTHENTICATOR_ALLOWED_FOR_OPTIONS } from '../utils/Constants';\n\nconst AuthenticatorRow = View.extend({\n  className: 'authenticator-row clearfix',\n  template: hbs`\n    <div class=\"authenticator-icon-container\">\n      {{#if logoUri}}\n        <div class=\"factor-icon authenticator-icon custom-app-logo\" role=\"img\"\n          aria-label=\"{{i18n code=\"oie.auth.logo.aria.label\" bundle=\"login\"}}\"\n          style=\"background-image: url('{{logoUri}}')\"></div>\n      {{else}}\n        <div class=\"factor-icon authenticator-icon {{iconClassName}}\" role=\"img\" \n          aria-label=\"{{i18n code=\"oie.auth.logo.aria.label\" bundle=\"login\"}}\"></div>\n      {{/if}}\n    </div>\n    <div class=\"authenticator-description\">\n      <h3 class=\"authenticator-label no-translate\">{{label}}</h3>\n      {{#if description}}\n        <p class=\"authenticator-description--text\">{{description}}</p>\n      {{/if}}\n      {{#if authenticatorUsageText}}\n        <p class=\"authenticator-usage-text\">{{authenticatorUsageText}}</p>\n      {{/if}}\n      <div class=\"authenticator-button\" {{#if buttonDataSeAttr}}data-se=\"{{buttonDataSeAttr}}\"{{/if}}></div>\n    </div>\n  `,\n  children: function() {\n    return [[createButton({\n      className: 'button select-factor',\n      title: function() {\n        return loc('oie.enroll.authenticator.button.text', 'login');\n      },\n      click: function() {\n        this.model.trigger('selectAuthenticator', this.model.get('value'));\n      }\n    }), '.authenticator-button']];\n  },\n  minimize: function() {\n    this.$el.addClass('authenticator-row-min');\n  },\n  getTemplateData() {\n    let authenticatorUsageText;\n    const allowedFor = this.model.get('relatesTo').allowedFor;\n\n    if (allowedFor) {\n      switch (allowedFor) {\n      case AUTHENTICATOR_ALLOWED_FOR_OPTIONS.ANY:\n        authenticatorUsageText = loc('oie.enroll.authenticator.usage.text.access.recovery', 'login');\n        break;\n      case AUTHENTICATOR_ALLOWED_FOR_OPTIONS.RECOVERY:\n        authenticatorUsageText = loc('oie.enroll.authenticator.usage.text.recovery', 'login');\n        break;\n      case AUTHENTICATOR_ALLOWED_FOR_OPTIONS.SSO:\n        authenticatorUsageText = loc('oie.enroll.authenticator.usage.text.access', 'login');\n        break;\n      }\n    }\n\n    const data = View.prototype.getTemplateData.apply(this, arguments);\n    data.authenticatorUsageText = authenticatorUsageText;\n\n    return data;\n  },\n});\n\nexport default ListView.extend({\n\n  className: 'authenticator-enroll-list authenticator-list',\n\n  item: AuthenticatorRow,\n\n  itemSelector: '.list-content',\n\n  initialize: function() {\n    this.listenTo(this.collection,'selectAuthenticator', function(data) {\n      this.model.set(this.options.name, data);\n      this.options.appState.trigger('saveForm', this.model);\n    });\n    this.hasOptionalFactors = this.options.appState.hasRemediationObject(RemediationForms.SKIP);\n    if (this.hasOptionalFactors) {\n      this.add(skipAll);\n    }\n  },\n\n  template: hbs`<div class=\"list-content\"> <div class=\"authenticator-list-title\"> {{title}} </div> </div>`,\n\n  getTemplateData() {\n    // presence of the skip remediation form tells us that the authenticators are all optional\n    const title = this.hasOptionalFactors? loc('oie.setup.optional', 'login'):loc('oie.setup.required', 'login');\n\n    return {\n      title\n    };\n  }\n\n});\n"],"names":["AuthenticatorRow","View","extend","className","template","children","createButton","title","loc","click","model","trigger","get","minimize","$el","addClass","getTemplateData","authenticatorUsageText","allowedFor","AUTHENTICATOR_ALLOWED_FOR_OPTIONS","ANY","RECOVERY","SSO","data","prototype","apply","arguments","ListView","item","itemSelector","initialize","listenTo","collection","set","options","name","appState","hasOptionalFactors","hasRemediationObject","RemediationForms","SKIP","add","skipAll"],"mappings":"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"}